!function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e,n){
/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({});function s(e){return null==e}function i(e){return null!=e}function r(e){return!0===e}function o(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function p(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function u(e){return"[object Object]"===d.call(e)}function l(e){return"[object RegExp]"===d.call(e)}function y(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function c(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function T(e){var t=parseFloat(e);return isNaN(t)?e:t}function b(e,t){for(var n=Object.create(null),a=e.split(","),s=0;s<a.length;s++)n[a[s]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var f=b("slot,component",!0),h=b("key,ref,slot,slot-scope,is");function w(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var v=Object.prototype.hasOwnProperty;function g(e,t){return v.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var M=/-(\w)/g,x=k((function(e){return e.replace(M,(function(e,t){return t?t.toUpperCase():""}))})),S=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),A=/\B([A-Z])/g,_=k((function(e){return e.replace(A,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function O(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function C(e,t){for(var n in t)e[n]=t[n];return e}function R(e){for(var t={},n=0;n<e.length;n++)e[n]&&C(t,e[n]);return t}function I(e,t,n){}var F=function(e,t,n){return!1},L=function(e){return e};function D(e,t){if(e===t)return!0;var n=p(e),a=p(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var s=Array.isArray(e),i=Array.isArray(t);if(s&&i)return e.length===t.length&&e.every((function(e,n){return D(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(s||i)return!1;var r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((function(n){return D(e[n],t[n])}))}catch(e){return!1}}function E(e,t){for(var n=0;n<e.length;n++)if(D(e[n],t))return n;return-1}function V(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var B=["component","directive","filter"],W=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:F,isReservedAttr:F,isUnknownElement:F,getTagNamespace:I,parsePlatformTagName:L,mustUseProp:F,async:!0,_lifecycleHooks:W},U=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function H(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var $=new RegExp("[^"+U.source+".$_\\d]");var z,j="__proto__"in{},G="undefined"!=typeof window,Z="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Y=Z&&WXEnvironment.platform.toLowerCase(),X=G&&window.navigator.userAgent.toLowerCase(),K=X&&/msie|trident/.test(X),J=X&&X.indexOf("msie 9.0")>0,Q=X&&X.indexOf("edge/")>0,ee=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===Y),te=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),ne={}.watch,ae=!1;if(G)try{var se={};Object.defineProperty(se,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,se)}catch(e){}var ie=function(){return void 0===z&&(z=!G&&!Z&&void 0!==e&&(e.process&&"server"===e.process.env.VUE_ENV)),z},re=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var pe,de="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);pe="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ue=I,le=0,ye=function(){this.id=le++,this.subs=[]};ye.prototype.addSub=function(e){this.subs.push(e)},ye.prototype.removeSub=function(e){w(this.subs,e)},ye.prototype.depend=function(){ye.target&&ye.target.addDep(this)},ye.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ye.target=null;var ce=[];function me(e){ce.push(e),ye.target=e}function Te(){ce.pop(),ye.target=ce[ce.length-1]}var be=function(e,t,n,a,s,i,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=s,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},fe={child:{configurable:!0}};fe.child.get=function(){return this.componentInstance},Object.defineProperties(be.prototype,fe);var he=function(e){void 0===e&&(e="");var t=new be;return t.text=e,t.isComment=!0,t};function we(e){return new be(void 0,void 0,void 0,String(e))}function ve(e){var t=new be(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ge=Array.prototype,ke=Object.create(ge);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ge[e];H(ke,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var s,i=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":s=n;break;case"splice":s=n.slice(2)}return s&&r.observeArray(s),r.dep.notify(),i}))}));var Me=Object.getOwnPropertyNames(ke),xe=!0;function Se(e){xe=e}var Ae=function(e){this.value=e,this.dep=new ye,this.vmCount=0,H(e,"__ob__",this),Array.isArray(e)?(j?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var a=0,s=n.length;a<s;a++){var i=n[a];H(e,i,t[i])}}(e,ke,Me),this.observeArray(e)):this.walk(e)};function _e(e,t){var n;if(p(e)&&!(e instanceof be))return g(e,"__ob__")&&e.__ob__ instanceof Ae?n=e.__ob__:xe&&!ie()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Ae(e)),t&&n&&n.vmCount++,n}function Pe(e,t,n,a,s){var i=new ye,r=Object.getOwnPropertyDescriptor(e,t);if(!r||!1!==r.configurable){var o=r&&r.get,p=r&&r.set;o&&!p||2!==arguments.length||(n=e[t]);var d=!s&&_e(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return ye.target&&(i.depend(),d&&(d.dep.depend(),Array.isArray(t)&&Re(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!p||(p?p.call(e,t):n=t,d=!s&&_e(t),i.notify())}})}}function Oe(e,t,n){if(Array.isArray(e)&&y(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(Pe(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Ce(e,t){if(Array.isArray(e)&&y(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||g(e,t)&&(delete e[t],n&&n.dep.notify())}}function Re(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Re(t)}Ae.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Pe(e,t[n])},Ae.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)_e(e[t])};var Ie=q.optionMergeStrategies;function Fe(e,t){if(!t)return e;for(var n,a,s,i=de?Reflect.ownKeys(t):Object.keys(t),r=0;r<i.length;r++)"__ob__"!==(n=i[r])&&(a=e[n],s=t[n],g(e,n)?a!==s&&u(a)&&u(s)&&Fe(a,s):Oe(e,n,s));return e}function Le(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,s="function"==typeof e?e.call(n,n):e;return a?Fe(a,s):s}:t?e?function(){return Fe("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function De(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ee(e,t,n,a){var s=Object.create(e||null);return t?C(s,t):s}Ie.data=function(e,t,n){return n?Le(e,t,n):t&&"function"!=typeof t?e:Le(e,t)},W.forEach((function(e){Ie[e]=De})),B.forEach((function(e){Ie[e+"s"]=Ee})),Ie.watch=function(e,t,n,a){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var s={};for(var i in C(s,e),t){var r=s[i],o=t[i];r&&!Array.isArray(r)&&(r=[r]),s[i]=r?r.concat(o):Array.isArray(o)?o:[o]}return s},Ie.props=Ie.methods=Ie.inject=Ie.computed=function(e,t,n,a){if(!e)return t;var s=Object.create(null);return C(s,e),t&&C(s,t),s},Ie.provide=Le;var Ve=function(e,t){return void 0===t?e:t};function Be(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,s,i={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(s=n[a])&&(i[x(s)]={type:null});else if(u(n))for(var r in n)s=n[r],i[x(r)]=u(s)?s:{type:s};else 0;e.props=i}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var s=0;s<n.length;s++)a[n[s]]={from:n[s]};else if(u(n))for(var i in n){var r=n[i];a[i]=u(r)?C({from:i},r):{from:r}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=Be(e,t.extends,n)),t.mixins))for(var a=0,s=t.mixins.length;a<s;a++)e=Be(e,t.mixins[a],n);var i,r={};for(i in e)o(i);for(i in t)g(e,i)||o(i);function o(a){var s=Ie[a]||Ve;r[a]=s(e[a],t[a],n,a)}return r}function We(e,t,n,a){if("string"==typeof n){var s=e[t];if(g(s,n))return s[n];var i=x(n);if(g(s,i))return s[i];var r=S(i);return g(s,r)?s[r]:s[n]||s[i]||s[r]}}function qe(e,t,n,a){var s=t[e],i=!g(n,e),r=n[e],o=He(Boolean,s.type);if(o>-1)if(i&&!g(s,"default"))r=!1;else if(""===r||r===_(e)){var p=He(String,s.type);(p<0||o<p)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(!g(t,"default"))return;var a=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof a&&"Function"!==Ue(t.type)?a.call(e):a}(a,s,e);var d=xe;Se(!0),_e(r),Se(d)}return r}function Ue(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Ne(e,t){return Ue(e)===Ue(t)}function He(e,t){if(!Array.isArray(t))return Ne(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(Ne(t[n],e))return n;return-1}function $e(e,t,n){me();try{if(t)for(var a=t;a=a.$parent;){var s=a.$options.errorCaptured;if(s)for(var i=0;i<s.length;i++)try{if(!1===s[i].call(a,e,t,n))return}catch(e){je(e,a,"errorCaptured hook")}}je(e,t,n)}finally{Te()}}function ze(e,t,n,a,s){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&c(i)&&!i._handled&&(i.catch((function(e){return $e(e,a,s+" (Promise/async)")})),i._handled=!0)}catch(e){$e(e,a,s)}return i}function je(e,t,n){if(q.errorHandler)try{return q.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ge(t,null,"config.errorHandler")}Ge(e,t,n)}function Ge(e,t,n){if(!G&&!Z||"undefined"==typeof console)throw e;console.error(e)}var Ze,Ye=!1,Xe=[],Ke=!1;function Je(){Ke=!1;var e=Xe.slice(0);Xe.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var Qe=Promise.resolve();Ze=function(){Qe.then(Je),ee&&setTimeout(I)},Ye=!0}else if(K||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ze=void 0!==n&&oe(n)?function(){n(Je)}:function(){setTimeout(Je,0)};else{var et=1,tt=new MutationObserver(Je),nt=document.createTextNode(String(et));tt.observe(nt,{characterData:!0}),Ze=function(){et=(et+1)%2,nt.data=String(et)},Ye=!0}function at(e,t){var n;if(Xe.push((function(){if(e)try{e.call(t)}catch(e){$e(e,t,"nextTick")}else n&&n(t)})),Ke||(Ke=!0,Ze()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var st=new pe;function it(e){!function e(t,n){var a,s,i=Array.isArray(t);if(!i&&!p(t)||Object.isFrozen(t)||t instanceof be)return;if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(i)for(a=t.length;a--;)e(t[a],n);else for(s=Object.keys(t),a=s.length;a--;)e(t[s[a]],n)}(e,st),st.clear()}var rt=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function ot(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return ze(a,null,arguments,t,"v-on handler");for(var s=a.slice(),i=0;i<s.length;i++)ze(s[i],null,e,t,"v-on handler")}return n.fns=e,n}function pt(e,t,n,a,i,o){var p,d,u,l;for(p in e)d=e[p],u=t[p],l=rt(p),s(d)||(s(u)?(s(d.fns)&&(d=e[p]=ot(d,o)),r(l.once)&&(d=e[p]=i(l.name,d,l.capture)),n(l.name,d,l.capture,l.passive,l.params)):d!==u&&(u.fns=d,e[p]=u));for(p in t)s(e[p])&&a((l=rt(p)).name,t[p],l.capture)}function dt(e,t,n){var a;e instanceof be&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function p(){n.apply(this,arguments),w(a.fns,p)}s(o)?a=ot([p]):i(o.fns)&&r(o.merged)?(a=o).fns.push(p):a=ot([o,p]),a.merged=!0,e[t]=a}function ut(e,t,n,a,s){if(i(t)){if(g(t,n))return e[n]=t[n],s||delete t[n],!0;if(g(t,a))return e[n]=t[a],s||delete t[a],!0}return!1}function lt(e){return o(e)?[we(e)]:Array.isArray(e)?function e(t,n){var a,p,d,u,l=[];for(a=0;a<t.length;a++)s(p=t[a])||"boolean"==typeof p||(d=l.length-1,u=l[d],Array.isArray(p)?p.length>0&&(yt((p=e(p,(n||"")+"_"+a))[0])&&yt(u)&&(l[d]=we(u.text+p[0].text),p.shift()),l.push.apply(l,p)):o(p)?yt(u)?l[d]=we(u.text+p):""!==p&&l.push(we(p)):yt(p)&&yt(u)?l[d]=we(u.text+p.text):(r(t._isVList)&&i(p.tag)&&s(p.key)&&i(n)&&(p.key="__vlist"+n+"_"+a+"__"),l.push(p)));return l}(e):void 0}function yt(e){return i(e)&&i(e.text)&&!1===e.isComment}function ct(e,t){if(e){for(var n=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),s=0;s<a.length;s++){var i=a[s];if("__ob__"!==i){for(var r=e[i].from,o=t;o;){if(o._provided&&g(o._provided,r)){n[i]=o._provided[r];break}o=o.$parent}if(!o)if("default"in e[i]){var p=e[i].default;n[i]="function"==typeof p?p.call(t):p}else 0}}return n}}function mt(e,t){if(!e||!e.length)return{};for(var n={},a=0,s=e.length;a<s;a++){var i=e[a],r=i.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,i.context!==t&&i.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(i);else{var o=r.slot,p=n[o]||(n[o]=[]);"template"===i.tag?p.push.apply(p,i.children||[]):p.push(i)}}for(var d in n)n[d].every(Tt)&&delete n[d];return n}function Tt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function bt(e,t,n){var s,i=Object.keys(t).length>0,r=e?!!e.$stable:!i,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(r&&n&&n!==a&&o===n.$key&&!i&&!n.$hasNormal)return n;for(var p in s={},e)e[p]&&"$"!==p[0]&&(s[p]=ft(t,p,e[p]))}else s={};for(var d in t)d in s||(s[d]=ht(t,d));return e&&Object.isExtensible(e)&&(e._normalized=s),H(s,"$stable",r),H(s,"$key",o),H(s,"$hasNormal",i),s}function ft(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:lt(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function ht(e,t){return function(){return e[t]}}function wt(e,t){var n,a,s,r,o;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,s=e.length;a<s;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(p(e))if(de&&e[Symbol.iterator]){n=[];for(var d=e[Symbol.iterator](),u=d.next();!u.done;)n.push(t(u.value,n.length)),u=d.next()}else for(r=Object.keys(e),n=new Array(r.length),a=0,s=r.length;a<s;a++)o=r[a],n[a]=t(e[o],o,a);return i(n)||(n=[]),n._isVList=!0,n}function vt(e,t,n,a){var s,i=this.$scopedSlots[e];i?(n=n||{},a&&(n=C(C({},a),n)),s=i(n)||t):s=this.$slots[e]||t;var r=n&&n.slot;return r?this.$createElement("template",{slot:r},s):s}function gt(e){return We(this.$options,"filters",e)||L}function kt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function Mt(e,t,n,a,s){var i=q.keyCodes[t]||n;return s&&a&&!q.keyCodes[t]?kt(s,a):i?kt(i,e):a?_(a)!==t:void 0}function xt(e,t,n,a,s){if(n)if(p(n)){var i;Array.isArray(n)&&(n=R(n));var r=function(r){if("class"===r||"style"===r||h(r))i=e;else{var o=e.attrs&&e.attrs.type;i=a||q.mustUseProp(t,o,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var p=x(r),d=_(r);p in i||d in i||(i[r]=n[r],s&&((e.on||(e.on={}))["update:"+r]=function(e){n[r]=e}))};for(var o in n)r(o)}else;return e}function St(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||_t(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function At(e,t,n){return _t(e,"__once__"+t+(n?"_"+n:""),!0),e}function _t(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&Pt(e[a],t+"_"+a,n);else Pt(e,t,n)}function Pt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Ot(e,t){if(t)if(u(t)){var n=e.on=e.on?C({},e.on):{};for(var a in t){var s=n[a],i=t[a];n[a]=s?[].concat(s,i):i}}else;return e}function Ct(e,t,n,a){t=t||{$stable:!n};for(var s=0;s<e.length;s++){var i=e[s];Array.isArray(i)?Ct(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return a&&(t.$key=a),t}function Rt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function It(e,t){return"string"==typeof e?t+e:e}function Ft(e){e._o=At,e._n=T,e._s=m,e._l=wt,e._t=vt,e._q=D,e._i=E,e._m=St,e._f=gt,e._k=Mt,e._b=xt,e._v=we,e._e=he,e._u=Ct,e._g=Ot,e._d=Rt,e._p=It}function Lt(e,t,n,s,i){var o,p=this,d=i.options;g(s,"_uid")?(o=Object.create(s))._original=s:(o=s,s=s._original);var u=r(d._compiled),l=!u;this.data=e,this.props=t,this.children=n,this.parent=s,this.listeners=e.on||a,this.injections=ct(d.inject,s),this.slots=function(){return p.$slots||bt(e.scopedSlots,p.$slots=mt(n,s)),p.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return bt(e.scopedSlots,this.slots())}}),u&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=bt(e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,t,n,a){var i=Ut(o,e,t,n,a,l);return i&&!Array.isArray(i)&&(i.fnScopeId=d._scopeId,i.fnContext=s),i}:this._c=function(e,t,n,a){return Ut(o,e,t,n,a,l)}}function Dt(e,t,n,a,s){var i=ve(e);return i.fnContext=n,i.fnOptions=a,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function Et(e,t){for(var n in t)e[x(n)]=t[n]}Ft(Lt.prototype);var Vt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Vt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;i(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Kt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,s,i){0;var r=s.data.scopedSlots,o=e.$scopedSlots,p=!!(r&&!r.$stable||o!==a&&!o.$stable||r&&e.$scopedSlots.$key!==r.$key),d=!!(i||e.$options._renderChildren||p);e.$options._parentVnode=s,e.$vnode=s,e._vnode&&(e._vnode.parent=s);if(e.$options._renderChildren=i,e.$attrs=s.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Se(!1);for(var u=e._props,l=e.$options._propKeys||[],y=0;y<l.length;y++){var c=l[y],m=e.$options.props;u[c]=qe(c,m,t,e)}Se(!0),e.$options.propsData=t}n=n||a;var T=e.$options._parentListeners;e.$options._parentListeners=n,Xt(e,n,T),d&&(e.$slots=mt(i,s.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,tn(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,an.push(t)):en(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Qt(t)))return;if(!t._inactive){t._inactive=!0;for(var a=0;a<t.$children.length;a++)e(t.$children[a]);tn(t,"deactivated")}}(t,!0):t.$destroy())}},Bt=Object.keys(Vt);function Wt(e,t,n,o,d){if(!s(e)){var u=n.$options._base;if(p(e)&&(e=u.extend(e)),"function"==typeof e){var l;if(s(e.cid)&&void 0===(e=function(e,t){if(r(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=Ht;n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(r(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var a=e.owners=[n],o=!0,d=null,u=null;n.$on("hook:destroyed",(function(){return w(a,n)}));var l=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==d&&(clearTimeout(d),d=null),null!==u&&(clearTimeout(u),u=null))},y=V((function(n){e.resolved=$t(n,t),o?a.length=0:l(!0)})),m=V((function(t){i(e.errorComp)&&(e.error=!0,l(!0))})),T=e(y,m);return p(T)&&(c(T)?s(e.resolved)&&T.then(y,m):c(T.component)&&(T.component.then(y,m),i(T.error)&&(e.errorComp=$t(T.error,t)),i(T.loading)&&(e.loadingComp=$t(T.loading,t),0===T.delay?e.loading=!0:d=setTimeout((function(){d=null,s(e.resolved)&&s(e.error)&&(e.loading=!0,l(!1))}),T.delay||200)),i(T.timeout)&&(u=setTimeout((function(){u=null,s(e.resolved)&&m(null)}),T.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(l=e,u)))return function(e,t,n,a,s){var i=he();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:a,tag:s},i}(l,t,n,o,d);t=t||{},xn(e),i(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var s=t.on||(t.on={}),r=s[a],o=t.model.callback;i(r)?(Array.isArray(r)?-1===r.indexOf(o):r!==o)&&(s[a]=[o].concat(r)):s[a]=o}(e.options,t);var y=function(e,t,n){var a=t.options.props;if(!s(a)){var r={},o=e.attrs,p=e.props;if(i(o)||i(p))for(var d in a){var u=_(d);ut(r,p,d,u,!0)||ut(r,o,d,u,!1)}return r}}(t,e);if(r(e.options.functional))return function(e,t,n,s,r){var o=e.options,p={},d=o.props;if(i(d))for(var u in d)p[u]=qe(u,d,t||a);else i(n.attrs)&&Et(p,n.attrs),i(n.props)&&Et(p,n.props);var l=new Lt(n,p,r,s,e),y=o.render.call(null,l._c,l);if(y instanceof be)return Dt(y,n,l.parent,o,l);if(Array.isArray(y)){for(var c=lt(y)||[],m=new Array(c.length),T=0;T<c.length;T++)m[T]=Dt(c[T],n,l.parent,o,l);return m}}(e,y,t,n,o);var m=t.on;if(t.on=t.nativeOn,r(e.options.abstract)){var T=t.slot;t={},T&&(t.slot=T)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Bt.length;n++){var a=Bt[n],s=t[a],i=Vt[a];s===i||s&&s._merged||(t[a]=s?qt(i,s):i)}}(t);var b=e.options.name||d;return new be("vue-component-"+e.cid+(b?"-"+b:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:y,listeners:m,tag:d,children:o},l)}}}function qt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function Ut(e,t,n,a,d,u){return(Array.isArray(n)||o(n))&&(d=a,a=n,n=void 0),r(u)&&(d=2),function(e,t,n,a,o){if(i(n)&&i(n.__ob__))return he();i(n)&&i(n.is)&&(t=n.is);if(!t)return he();0;Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0);2===o?a=lt(a):1===o&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a));var d,u;if("string"==typeof t){var l;u=e.$vnode&&e.$vnode.ns||q.getTagNamespace(t),d=q.isReservedTag(t)?new be(q.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!i(l=We(e.$options,"components",t))?new be(t,n,a,void 0,void 0,e):Wt(l,n,e,a,t)}else d=Wt(t,n,e,a);return Array.isArray(d)?d:i(d)?(i(u)&&function e(t,n,a){t.ns=n,"foreignObject"===t.tag&&(n=void 0,a=!0);if(i(t.children))for(var o=0,p=t.children.length;o<p;o++){var d=t.children[o];i(d.tag)&&(s(d.ns)||r(a)&&"svg"!==d.tag)&&e(d,n,a)}}(d,u),i(n)&&function(e){p(e.style)&&it(e.style);p(e.class)&&it(e.class)}(n),d):he()}(e,t,n,a,d)}var Nt,Ht=null;function $t(e,t){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),p(e)?t.extend(e):e}function zt(e){return e.isComment&&e.asyncFactory}function jt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(i(n)&&(i(n.componentOptions)||zt(n)))return n}}function Gt(e,t){Nt.$on(e,t)}function Zt(e,t){Nt.$off(e,t)}function Yt(e,t){var n=Nt;return function a(){var s=t.apply(null,arguments);null!==s&&n.$off(e,a)}}function Xt(e,t,n){Nt=e,pt(t,n||{},Gt,Zt,Yt,e),Nt=void 0}var Kt=null;function Jt(e){var t=Kt;return Kt=e,function(){Kt=t}}function Qt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function en(e,t){if(t){if(e._directInactive=!1,Qt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)en(e.$children[n]);tn(e,"activated")}}function tn(e,t){me();var n=e.$options[t],a=t+" hook";if(n)for(var s=0,i=n.length;s<i;s++)ze(n[s],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),Te()}var nn=[],an=[],sn={},rn=!1,on=!1,pn=0;var dn=0,un=Date.now;if(G&&!K){var ln=window.performance;ln&&"function"==typeof ln.now&&un()>document.createEvent("Event").timeStamp&&(un=function(){return ln.now()})}function yn(){var e,t;for(dn=un(),on=!0,nn.sort((function(e,t){return e.id-t.id})),pn=0;pn<nn.length;pn++)(e=nn[pn]).before&&e.before(),t=e.id,sn[t]=null,e.run();var n=an.slice(),a=nn.slice();pn=nn.length=an.length=0,sn={},rn=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,en(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&tn(a,"updated")}}(a),re&&q.devtools&&re.emit("flush")}var cn=0,mn=function(e,t,n,a,s){this.vm=e,s&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++cn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new pe,this.newDepIds=new pe,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!$.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()};mn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;$e(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&it(e),Te(),this.cleanupDeps()}return e},mn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},mn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},mn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==sn[t]){if(sn[t]=!0,on){for(var n=nn.length-1;n>pn&&nn[n].id>e.id;)n--;nn.splice(n+1,0,e)}else nn.push(e);rn||(rn=!0,at(yn))}}(this)},mn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||p(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){$e(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},mn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},mn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||w(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var Tn={enumerable:!0,configurable:!0,get:I,set:I};function bn(e,t,n){Tn.get=function(){return this[t][n]},Tn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Tn)}function fn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},s=e.$options._propKeys=[];e.$parent&&Se(!1);var i=function(i){s.push(i);var r=qe(i,t,n,e);Pe(a,i,r),i in e||bn(e,"_props",i)};for(var r in t)i(r);Se(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?I:P(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return $e(e,t,"data()"),{}}finally{Te()}}(t,e):t||{})||(t={});var n=Object.keys(t),a=e.$options.props,s=(e.$options.methods,n.length);for(;s--;){var i=n[s];0,a&&g(a,i)||N(i)||bn(e,"_data",i)}_e(t,!0)}(e):_e(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ie();for(var s in t){var i=t[s],r="function"==typeof i?i:i.get;0,a||(n[s]=new mn(e,r||I,I,hn)),s in e||wn(e,s,i)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var s=0;s<a.length;s++)kn(e,n,a[s]);else kn(e,n,a)}}(e,t.watch)}var hn={lazy:!0};function wn(e,t,n){var a=!ie();"function"==typeof n?(Tn.get=a?vn(t):gn(n),Tn.set=I):(Tn.get=n.get?a&&!1!==n.cache?vn(t):gn(n.get):I,Tn.set=n.set||I),Object.defineProperty(e,t,Tn)}function vn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ye.target&&t.depend(),t.value}}function gn(e){return function(){return e.call(this,this)}}function kn(e,t,n,a){return u(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var Mn=0;function xn(e){var t=e.options;if(e.super){var n=xn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var s in n)n[s]!==a[s]&&(t||(t={}),t[s]=n[s]);return t}(e);a&&C(e.extendOptions,a),(t=e.options=Be(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function An(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,s=e._Ctor||(e._Ctor={});if(s[a])return s[a];var i=e.name||n.options.name;var r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=Be(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)bn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)wn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,B.forEach((function(e){r[e]=n[e]})),i&&(r.options.components[i]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=C({},r.options),s[a]=r,r}}function _n(e){return e&&(e.Ctor.options.name||e.tag)}function Pn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!l(e)&&e.test(t)}function On(e,t){var n=e.cache,a=e.keys,s=e._vnode;for(var i in n){var r=n[i];if(r){var o=_n(r.componentOptions);o&&!t(o)&&Cn(n,i,a,s)}}}function Cn(e,t,n,a){var s=e[t];!s||a&&s.tag===a.tag||s.componentInstance.$destroy(),e[t]=null,w(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Mn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var s=a.componentOptions;n.propsData=s.propsData,n._parentListeners=s.listeners,n._renderChildren=s.children,n._componentTag=s.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Be(xn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Xt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,s=n&&n.context;e.$slots=mt(t._renderChildren,s),e.$scopedSlots=a,e._c=function(t,n,a,s){return Ut(e,t,n,a,s,!1)},e.$createElement=function(t,n,a,s){return Ut(e,t,n,a,s,!0)};var i=n&&n.data;Pe(e,"$attrs",i&&i.attrs||a,null,!0),Pe(e,"$listeners",t._parentListeners||a,null,!0)}(t),tn(t,"beforeCreate"),function(e){var t=ct(e.$options.inject,e);t&&(Se(!1),Object.keys(t).forEach((function(n){Pe(e,n,t[n])})),Se(!0))}(t),fn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),tn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Sn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Oe,e.prototype.$delete=Ce,e.prototype.$watch=function(e,t,n){if(u(t))return kn(this,e,t,n);(n=n||{}).user=!0;var a=new mn(this,e,t,n);if(n.immediate)try{t.call(this,a.value)}catch(e){$e(e,this,'callback for immediate watcher "'+a.expression+'"')}return function(){a.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var s=0,i=e.length;s<i;s++)a.$on(e[s],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,s=e.length;a<s;a++)n.$off(e[a],t);return n}var i,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var o=r.length;o--;)if((i=r[o])===t||i.fn===t){r.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?O(n):n;for(var a=O(arguments,1),s='event handler for "'+e+'"',i=0,r=n.length;i<r;i++)ze(n[i],t,a,t,s)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,s=n._vnode,i=Jt(n);n._vnode=e,n.$el=s?n.__patch__(s,e):n.__patch__(n.$el,e,t,!1),i(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){tn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||w(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),tn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){Ft(e.prototype),e.prototype.$nextTick=function(e){return at(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,s=n._parentVnode;s&&(t.$scopedSlots=bt(s.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=s;try{Ht=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){$e(n,t,"render"),e=t._vnode}finally{Ht=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof be||(e=he()),e.parent=s,e}}(Sn);var Rn=[String,RegExp,Array],In={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Rn,exclude:Rn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Cn(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){On(e,(function(e){return Pn(t,e)}))})),this.$watch("exclude",(function(t){On(e,(function(e){return!Pn(t,e)}))}))},render:function(){var e=this.$slots.default,t=jt(e),n=t&&t.componentOptions;if(n){var a=_n(n),s=this.include,i=this.exclude;if(s&&(!a||!Pn(s,a))||i&&a&&Pn(i,a))return t;var r=this.cache,o=this.keys,p=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;r[p]?(t.componentInstance=r[p].componentInstance,w(o,p),o.push(p)):(r[p]=t,o.push(p),this.max&&o.length>parseInt(this.max)&&Cn(r,o[0],o,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return q}};Object.defineProperty(e,"config",t),e.util={warn:ue,extend:C,mergeOptions:Be,defineReactive:Pe},e.set=Oe,e.delete=Ce,e.nextTick=at,e.observable=function(e){return _e(e),e},e.options=Object.create(null),B.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,In),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=O(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Be(this.options,e),this}}(e),An(e),function(e){B.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:ie}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Lt}),Sn.version="2.6.12";var Fn=b("style,class"),Ln=b("input,textarea,option,select,progress"),Dn=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},En=b("contenteditable,draggable,spellcheck"),Vn=b("events,caret,typing,plaintext-only"),Bn=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Wn="http://www.w3.org/1999/xlink",qn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Un=function(e){return qn(e)?e.slice(6,e.length):""},Nn=function(e){return null==e||!1===e};function Hn(e){for(var t=e.data,n=e,a=e;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=$n(a.data,t));for(;i(n=n.parent);)n&&n.data&&(t=$n(t,n.data));return function(e,t){if(i(e)||i(t))return zn(e,jn(t));return""}(t.staticClass,t.class)}function $n(e,t){return{staticClass:zn(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function zn(e,t){return e?t?e+" "+t:e:t||""}function jn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,s=e.length;a<s;a++)i(t=jn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):p(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Gn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Zn=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yn=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xn=function(e){return Zn(e)||Yn(e)};function Kn(e){return Yn(e)?"svg":"math"===e?"math":void 0}var Jn=Object.create(null);var Qn=b("text,number,password,search,email,tel,url");function ea(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}var ta=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Gn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),na={create:function(e,t){aa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(aa(e,!0),aa(t))},destroy:function(e){aa(e,!0)}};function aa(e,t){var n=e.data.ref;if(i(n)){var a=e.context,s=e.componentInstance||e.elm,r=a.$refs;t?Array.isArray(r[n])?w(r[n],s):r[n]===s&&(r[n]=void 0):e.data.refInFor?Array.isArray(r[n])?r[n].indexOf(s)<0&&r[n].push(s):r[n]=[s]:r[n]=s}}var sa=new be("",{},[]),ia=["create","activate","update","remove","destroy"];function ra(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=i(n=e.data)&&i(n=n.attrs)&&n.type,s=i(n=t.data)&&i(n=n.attrs)&&n.type;return a===s||Qn(a)&&Qn(s)}(e,t)||r(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&s(t.asyncFactory.error))}function oa(e,t,n){var a,s,r={};for(a=t;a<=n;++a)i(s=e[a].key)&&(r[s]=a);return r}var pa={create:da,update:da,destroy:function(e){da(e,sa)}};function da(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,s,i=e===sa,r=t===sa,o=la(e.data.directives,e.context),p=la(t.data.directives,t.context),d=[],u=[];for(n in p)a=o[n],s=p[n],a?(s.oldValue=a.value,s.oldArg=a.arg,ca(s,"update",t,e),s.def&&s.def.componentUpdated&&u.push(s)):(ca(s,"bind",t,e),s.def&&s.def.inserted&&d.push(s));if(d.length){var l=function(){for(var n=0;n<d.length;n++)ca(d[n],"inserted",t,e)};i?dt(t,"insert",l):l()}u.length&&dt(t,"postpatch",(function(){for(var n=0;n<u.length;n++)ca(u[n],"componentUpdated",t,e)}));if(!i)for(n in o)p[n]||ca(o[n],"unbind",e,e,r)}(e,t)}var ua=Object.create(null);function la(e,t){var n,a,s=Object.create(null);if(!e)return s;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=ua),s[ya(a)]=a,a.def=We(t.$options,"directives",a.name);return s}function ya(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ca(e,t,n,a,s){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,a,s)}catch(a){$e(a,n.context,"directive "+e.name+" "+t+" hook")}}var ma=[na,pa];function Ta(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||s(e.data.attrs)&&s(t.data.attrs))){var a,r,o=t.elm,p=e.data.attrs||{},d=t.data.attrs||{};for(a in i(d.__ob__)&&(d=t.data.attrs=C({},d)),d)r=d[a],p[a]!==r&&ba(o,a,r);for(a in(K||Q)&&d.value!==p.value&&ba(o,"value",d.value),p)s(d[a])&&(qn(a)?o.removeAttributeNS(Wn,Un(a)):En(a)||o.removeAttribute(a))}}function ba(e,t,n){e.tagName.indexOf("-")>-1?fa(e,t,n):Bn(t)?Nn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):En(t)?e.setAttribute(t,function(e,t){return Nn(t)||"false"===t?"false":"contenteditable"===e&&Vn(t)?t:"true"}(t,n)):qn(t)?Nn(n)?e.removeAttributeNS(Wn,Un(t)):e.setAttributeNS(Wn,t,n):fa(e,t,n)}function fa(e,t,n){if(Nn(n))e.removeAttribute(t);else{if(K&&!J&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var ha={create:Ta,update:Ta};function wa(e,t){var n=t.elm,a=t.data,r=e.data;if(!(s(a.staticClass)&&s(a.class)&&(s(r)||s(r.staticClass)&&s(r.class)))){var o=Hn(t),p=n._transitionClasses;i(p)&&(o=zn(o,jn(p))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var va,ga,ka,Ma,xa,Sa,Aa={create:wa,update:wa},_a=/[\w).+\-_$\]]/;function Pa(e){var t,n,a,s,i,r=!1,o=!1,p=!1,d=!1,u=0,l=0,y=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(p)96===t&&92!==n&&(p=!1);else if(d)47===t&&92!==n&&(d=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||u||l||y){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:p=!0;break;case 40:y++;break;case 41:y--;break;case 91:l++;break;case 93:l--;break;case 123:u++;break;case 125:u--}if(47===t){for(var m=a-1,T=void 0;m>=0&&" "===(T=e.charAt(m));m--);T&&_a.test(T)||(d=!0)}}else void 0===s?(c=a+1,s=e.slice(0,a).trim()):b();function b(){(i||(i=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===s?s=e.slice(0,a).trim():0!==c&&b(),i)for(a=0;a<i.length;a++)s=Oa(s,i[a]);return s}function Oa(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),s=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==s?","+s:s)}function Ca(e,t){console.error("[Vue compiler]: "+e)}function Ra(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Ia(e,t,n,a,s){(e.props||(e.props=[])).push(Ua({name:t,value:n,dynamic:s},a)),e.plain=!1}function Fa(e,t,n,a,s){(s?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Ua({name:t,value:n,dynamic:s},a)),e.plain=!1}function La(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(Ua({name:t,value:n},a))}function Da(e,t,n,a,s,i,r,o){(e.directives||(e.directives=[])).push(Ua({name:t,rawName:n,value:a,arg:s,isDynamicArg:i,modifiers:r},o)),e.plain=!1}function Ea(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Va(e,t,n,s,i,r,o,p){var d;(s=s||a).right?p?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete s.right):s.middle&&(p?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),s.capture&&(delete s.capture,t=Ea("!",t,p)),s.once&&(delete s.once,t=Ea("~",t,p)),s.passive&&(delete s.passive,t=Ea("&",t,p)),s.native?(delete s.native,d=e.nativeEvents||(e.nativeEvents={})):d=e.events||(e.events={});var u=Ua({value:n.trim(),dynamic:p},o);s!==a&&(u.modifiers=s);var l=d[t];Array.isArray(l)?i?l.unshift(u):l.push(u):d[t]=l?i?[u,l]:[l,u]:u,e.plain=!1}function Ba(e,t,n){var a=Wa(e,":"+t)||Wa(e,"v-bind:"+t);if(null!=a)return Pa(a);if(!1!==n){var s=Wa(e,t);if(null!=s)return JSON.stringify(s)}}function Wa(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var s=e.attrsList,i=0,r=s.length;i<r;i++)if(s[i].name===t){s.splice(i,1);break}return n&&delete e.attrsMap[t],a}function qa(e,t){for(var n=e.attrsList,a=0,s=n.length;a<s;a++){var i=n[a];if(t.test(i.name))return n.splice(a,1),i}}function Ua(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Na(e,t,n){var a=n||{},s=a.number,i="$$v";a.trim&&(i="(typeof $$v === 'string'? $$v.trim(): $$v)"),s&&(i="_n("+i+")");var r=Ha(t,i);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+r+"}"}}function Ha(e,t){var n=function(e){if(e=e.trim(),va=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<va-1)return(Ma=e.lastIndexOf("."))>-1?{exp:e.slice(0,Ma),key:'"'+e.slice(Ma+1)+'"'}:{exp:e,key:null};ga=e,Ma=xa=Sa=0;for(;!za();)ja(ka=$a())?Za(ka):91===ka&&Ga(ka);return{exp:e.slice(0,xa),key:e.slice(xa+1,Sa)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function $a(){return ga.charCodeAt(++Ma)}function za(){return Ma>=va}function ja(e){return 34===e||39===e}function Ga(e){var t=1;for(xa=Ma;!za();)if(ja(e=$a()))Za(e);else if(91===e&&t++,93===e&&t--,0===t){Sa=Ma;break}}function Za(e){for(var t=e;!za()&&(e=$a())!==t;);}var Ya;function Xa(e,t,n){var a=Ya;return function s(){var i=t.apply(null,arguments);null!==i&&Qa(e,s,n,a)}}var Ka=Ye&&!(te&&Number(te[1])<=53);function Ja(e,t,n,a){if(Ka){var s=dn,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=s||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}Ya.addEventListener(e,t,ae?{capture:n,passive:a}:n)}function Qa(e,t,n,a){(a||Ya).removeEventListener(e,t._wrapper||t,n)}function es(e,t){if(!s(e.data.on)||!s(t.data.on)){var n=t.data.on||{},a=e.data.on||{};Ya=t.elm,function(e){if(i(e.__r)){var t=K?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}i(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),pt(n,a,Ja,Qa,Xa,t.context),Ya=void 0}}var ts,ns={create:es,update:es};function as(e,t){if(!s(e.data.domProps)||!s(t.data.domProps)){var n,a,r=t.elm,o=e.data.domProps||{},p=t.data.domProps||{};for(n in i(p.__ob__)&&(p=t.data.domProps=C({},p)),o)n in p||(r[n]="");for(n in p){if(a=p[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===o[n])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===n&&"PROGRESS"!==r.tagName){r._value=a;var d=s(a)?"":String(a);ss(r,d)&&(r.value=d)}else if("innerHTML"===n&&Yn(r.tagName)&&s(r.innerHTML)){(ts=ts||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var u=ts.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;u.firstChild;)r.appendChild(u.firstChild)}else if(a!==o[n])try{r[n]=a}catch(e){}}}}function ss(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(i(a)){if(a.number)return T(n)!==T(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var is={create:as,update:as},rs=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function os(e){var t=ps(e.style);return e.staticStyle?C(e.staticStyle,t):t}function ps(e){return Array.isArray(e)?R(e):"string"==typeof e?rs(e):e}var ds,us=/^--/,ls=/\s*!important$/,ys=function(e,t,n){if(us.test(t))e.style.setProperty(t,n);else if(ls.test(n))e.style.setProperty(_(t),n.replace(ls,""),"important");else{var a=ms(t);if(Array.isArray(n))for(var s=0,i=n.length;s<i;s++)e.style[a]=n[s];else e.style[a]=n}},cs=["Webkit","Moz","ms"],ms=k((function(e){if(ds=ds||document.createElement("div").style,"filter"!==(e=x(e))&&e in ds)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<cs.length;n++){var a=cs[n]+t;if(a in ds)return a}}));function Ts(e,t){var n=t.data,a=e.data;if(!(s(n.staticStyle)&&s(n.style)&&s(a.staticStyle)&&s(a.style))){var r,o,p=t.elm,d=a.staticStyle,u=a.normalizedStyle||a.style||{},l=d||u,y=ps(t.data.style)||{};t.data.normalizedStyle=i(y.__ob__)?C({},y):y;var c=function(e,t){var n,a={};if(t)for(var s=e;s.componentInstance;)(s=s.componentInstance._vnode)&&s.data&&(n=os(s.data))&&C(a,n);(n=os(e.data))&&C(a,n);for(var i=e;i=i.parent;)i.data&&(n=os(i.data))&&C(a,n);return a}(t,!0);for(o in l)s(c[o])&&ys(p,o,"");for(o in c)(r=c[o])!==l[o]&&ys(p,o,null==r?"":r)}}var bs={create:Ts,update:Ts},fs=/\s+/;function hs(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(fs).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function ws(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(fs).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function vs(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&C(t,gs(e.name||"v")),C(t,e),t}return"string"==typeof e?gs(e):void 0}}var gs=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),ks=G&&!J,Ms="transition",xs="transitionend",Ss="animation",As="animationend";ks&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ms="WebkitTransition",xs="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ss="WebkitAnimation",As="webkitAnimationEnd"));var _s=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ps(e){_s((function(){_s(e)}))}function Os(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),hs(e,t))}function Cs(e,t){e._transitionClasses&&w(e._transitionClasses,t),ws(e,t)}function Rs(e,t,n){var a=Fs(e,t),s=a.type,i=a.timeout,r=a.propCount;if(!s)return n();var o="transition"===s?xs:As,p=0,d=function(){e.removeEventListener(o,u),n()},u=function(t){t.target===e&&++p>=r&&d()};setTimeout((function(){p<r&&d()}),i+1),e.addEventListener(o,u)}var Is=/\b(transform|all)(,|$)/;function Fs(e,t){var n,a=window.getComputedStyle(e),s=(a[Ms+"Delay"]||"").split(", "),i=(a[Ms+"Duration"]||"").split(", "),r=Ls(s,i),o=(a[Ss+"Delay"]||"").split(", "),p=(a[Ss+"Duration"]||"").split(", "),d=Ls(o,p),u=0,l=0;return"transition"===t?r>0&&(n="transition",u=r,l=i.length):"animation"===t?d>0&&(n="animation",u=d,l=p.length):l=(n=(u=Math.max(r,d))>0?r>d?"transition":"animation":null)?"transition"===n?i.length:p.length:0,{type:n,timeout:u,propCount:l,hasTransform:"transition"===n&&Is.test(a[Ms+"Property"])}}function Ls(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Ds(t)+Ds(e[n])})))}function Ds(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Es(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=vs(e.data.transition);if(!s(a)&&!i(n._enterCb)&&1===n.nodeType){for(var r=a.css,o=a.type,d=a.enterClass,u=a.enterToClass,l=a.enterActiveClass,y=a.appearClass,c=a.appearToClass,m=a.appearActiveClass,b=a.beforeEnter,f=a.enter,h=a.afterEnter,w=a.enterCancelled,v=a.beforeAppear,g=a.appear,k=a.afterAppear,M=a.appearCancelled,x=a.duration,S=Kt,A=Kt.$vnode;A&&A.parent;)S=A.context,A=A.parent;var _=!S._isMounted||!e.isRootInsert;if(!_||g||""===g){var P=_&&y?y:d,O=_&&m?m:l,C=_&&c?c:u,R=_&&v||b,I=_&&"function"==typeof g?g:f,F=_&&k||h,L=_&&M||w,D=T(p(x)?x.enter:x);0;var E=!1!==r&&!J,B=Ws(I),W=n._enterCb=V((function(){E&&(Cs(n,C),Cs(n,O)),W.cancelled?(E&&Cs(n,P),L&&L(n)):F&&F(n),n._enterCb=null}));e.data.show||dt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),I&&I(n,W)})),R&&R(n),E&&(Os(n,P),Os(n,O),Ps((function(){Cs(n,P),W.cancelled||(Os(n,C),B||(Bs(D)?setTimeout(W,D):Rs(n,o,W)))}))),e.data.show&&(t&&t(),I&&I(n,W)),E||B||W()}}}function Vs(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=vs(e.data.transition);if(s(a)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var r=a.css,o=a.type,d=a.leaveClass,u=a.leaveToClass,l=a.leaveActiveClass,y=a.beforeLeave,c=a.leave,m=a.afterLeave,b=a.leaveCancelled,f=a.delayLeave,h=a.duration,w=!1!==r&&!J,v=Ws(c),g=T(p(h)?h.leave:h);0;var k=n._leaveCb=V((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),w&&(Cs(n,u),Cs(n,l)),k.cancelled?(w&&Cs(n,d),b&&b(n)):(t(),m&&m(n)),n._leaveCb=null}));f?f(M):M()}function M(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),w&&(Os(n,d),Os(n,l),Ps((function(){Cs(n,d),k.cancelled||(Os(n,u),v||(Bs(g)?setTimeout(k,g):Rs(n,o,k)))}))),c&&c(n,k),w||v||k())}}function Bs(e){return"number"==typeof e&&!isNaN(e)}function Ws(e){if(s(e))return!1;var t=e.fns;return i(t)?Ws(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function qs(e,t){!0!==t.data.show&&Es(t)}var Us=function(e){var t,n,a={},p=e.modules,d=e.nodeOps;for(t=0;t<ia.length;++t)for(a[ia[t]]=[],n=0;n<p.length;++n)i(p[n][ia[t]])&&a[ia[t]].push(p[n][ia[t]]);function u(e){var t=d.parentNode(e);i(t)&&d.removeChild(t,e)}function l(e,t,n,s,o,p,u){if(i(e.elm)&&i(p)&&(e=p[u]=ve(e)),e.isRootInsert=!o,!function(e,t,n,s){var o=e.data;if(i(o)){var p=i(e.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(e,!1),i(e.componentInstance))return y(e,t),c(n,e.elm,s),r(p)&&function(e,t,n,s){var r,o=e;for(;o.componentInstance;)if(o=o.componentInstance._vnode,i(r=o.data)&&i(r=r.transition)){for(r=0;r<a.activate.length;++r)a.activate[r](sa,o);t.push(o);break}c(n,e.elm,s)}(e,t,n,s),!0}}(e,t,n,s)){var l=e.data,T=e.children,b=e.tag;i(b)?(e.elm=e.ns?d.createElementNS(e.ns,b):d.createElement(b,e),h(e),m(e,T,t),i(l)&&f(e,t),c(n,e.elm,s)):r(e.isComment)?(e.elm=d.createComment(e.text),c(n,e.elm,s)):(e.elm=d.createTextNode(e.text),c(n,e.elm,s))}}function y(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,T(e)?(f(e,t),h(e)):(aa(e),t.push(e))}function c(e,t,n){i(e)&&(i(n)?d.parentNode(n)===e&&d.insertBefore(e,t,n):d.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t)){0;for(var a=0;a<t.length;++a)l(t[a],n,e.elm,null,!0,t,a)}else o(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function T(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function f(e,n){for(var s=0;s<a.create.length;++s)a.create[s](sa,e);i(t=e.data.hook)&&(i(t.create)&&t.create(sa,e),i(t.insert)&&n.push(e))}function h(e){var t;if(i(t=e.fnScopeId))d.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t),n=n.parent;i(t=Kt)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t)}function w(e,t,n,a,s,i){for(;a<=s;++a)l(n[a],i,e,t,!1,n,a)}function v(e){var t,n,s=e.data;if(i(s))for(i(t=s.hook)&&i(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)v(e.children[n])}function g(e,t,n){for(;t<=n;++t){var a=e[t];i(a)&&(i(a.tag)?(k(a),v(a)):u(a.elm))}}function k(e,t){if(i(t)||i(e.data)){var n,s=a.remove.length+1;for(i(t)?t.listeners+=s:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,s),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&k(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else u(e.elm)}function M(e,t,n,a){for(var s=n;s<a;s++){var r=t[s];if(i(r)&&ra(e,r))return s}}function x(e,t,n,o,p,u){if(e!==t){i(t.elm)&&i(o)&&(t=o[p]=ve(t));var y=t.elm=e.elm;if(r(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?_(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(r(t.isStatic)&&r(e.isStatic)&&t.key===e.key&&(r(t.isCloned)||r(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;i(m)&&i(c=m.hook)&&i(c=c.prepatch)&&c(e,t);var b=e.children,f=t.children;if(i(m)&&T(t)){for(c=0;c<a.update.length;++c)a.update[c](e,t);i(c=m.hook)&&i(c=c.update)&&c(e,t)}s(t.text)?i(b)&&i(f)?b!==f&&function(e,t,n,a,r){var o,p,u,y=0,c=0,m=t.length-1,T=t[0],b=t[m],f=n.length-1,h=n[0],v=n[f],k=!r;for(0;y<=m&&c<=f;)s(T)?T=t[++y]:s(b)?b=t[--m]:ra(T,h)?(x(T,h,a,n,c),T=t[++y],h=n[++c]):ra(b,v)?(x(b,v,a,n,f),b=t[--m],v=n[--f]):ra(T,v)?(x(T,v,a,n,f),k&&d.insertBefore(e,T.elm,d.nextSibling(b.elm)),T=t[++y],v=n[--f]):ra(b,h)?(x(b,h,a,n,c),k&&d.insertBefore(e,b.elm,T.elm),b=t[--m],h=n[++c]):(s(o)&&(o=oa(t,y,m)),s(p=i(h.key)?o[h.key]:M(h,t,y,m))?l(h,a,e,T.elm,!1,n,c):ra(u=t[p],h)?(x(u,h,a,n,c),t[p]=void 0,k&&d.insertBefore(e,u.elm,T.elm)):l(h,a,e,T.elm,!1,n,c),h=n[++c]);y>m?w(e,s(n[f+1])?null:n[f+1].elm,n,c,f,a):c>f&&g(t,y,m)}(y,b,f,n,u):i(f)?(i(e.text)&&d.setTextContent(y,""),w(y,null,f,0,f.length-1,n)):i(b)?g(b,0,b.length-1):i(e.text)&&d.setTextContent(y,""):e.text!==t.text&&d.setTextContent(y,t.text),i(m)&&i(c=m.hook)&&i(c=c.postpatch)&&c(e,t)}}}function S(e,t,n){if(r(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var A=b("attrs,class,staticClass,staticStyle,key");function _(e,t,n,a){var s,o=t.tag,p=t.data,d=t.children;if(a=a||p&&p.pre,t.elm=e,r(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(p)&&(i(s=p.hook)&&i(s=s.init)&&s(t,!0),i(s=t.componentInstance)))return y(t,n),!0;if(i(o)){if(i(d))if(e.hasChildNodes())if(i(s=p)&&i(s=s.domProps)&&i(s=s.innerHTML)){if(s!==e.innerHTML)return!1}else{for(var u=!0,l=e.firstChild,c=0;c<d.length;c++){if(!l||!_(l,d[c],n,a)){u=!1;break}l=l.nextSibling}if(!u||l)return!1}else m(t,d,n);if(i(p)){var T=!1;for(var b in p)if(!A(b)){T=!0,f(t,n);break}!T&&p.class&&it(p.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!s(t)){var p,u=!1,y=[];if(s(e))u=!0,l(t,y);else{var c=i(e.nodeType);if(!c&&ra(e,t))x(e,t,y,null,null,o);else{if(c){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),r(n)&&_(e,t,y))return S(t,y,!0),e;p=e,e=new be(d.tagName(p).toLowerCase(),{},[],void 0,p)}var m=e.elm,b=d.parentNode(m);if(l(t,y,m._leaveCb?null:b,d.nextSibling(m)),i(t.parent))for(var f=t.parent,h=T(t);f;){for(var w=0;w<a.destroy.length;++w)a.destroy[w](f);if(f.elm=t.elm,h){for(var k=0;k<a.create.length;++k)a.create[k](sa,f);var M=f.data.hook.insert;if(M.merged)for(var A=1;A<M.fns.length;A++)M.fns[A]()}else aa(f);f=f.parent}i(b)?g([e],0,0):i(e.tag)&&v(e)}}return S(t,y,u),t.elm}i(e)&&v(e)}}({nodeOps:ta,modules:[ha,Aa,ns,is,bs,G?{create:qs,activate:qs,remove:function(e,t){!0!==e.data.show?Vs(e,t):t()}}:{}].concat(ma)});J&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ys(e,"input")}));var Ns={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?dt(n,"postpatch",(function(){Ns.componentUpdated(e,t,n)})):Hs(e,t,n.context),e._vOptions=[].map.call(e.options,js)):("textarea"===n.tag||Qn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Gs),e.addEventListener("compositionend",Zs),e.addEventListener("change",Zs),J&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Hs(e,t,n.context);var a=e._vOptions,s=e._vOptions=[].map.call(e.options,js);if(s.some((function(e,t){return!D(e,a[t])})))(e.multiple?t.value.some((function(e){return zs(e,s)})):t.value!==t.oldValue&&zs(t.value,s))&&Ys(e,"change")}}};function Hs(e,t,n){$s(e,t,n),(K||Q)&&setTimeout((function(){$s(e,t,n)}),0)}function $s(e,t,n){var a=t.value,s=e.multiple;if(!s||Array.isArray(a)){for(var i,r,o=0,p=e.options.length;o<p;o++)if(r=e.options[o],s)i=E(a,js(r))>-1,r.selected!==i&&(r.selected=i);else if(D(js(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));s||(e.selectedIndex=-1)}}function zs(e,t){return t.every((function(t){return!D(t,e)}))}function js(e){return"_value"in e?e._value:e.value}function Gs(e){e.target.composing=!0}function Zs(e){e.target.composing&&(e.target.composing=!1,Ys(e.target,"input"))}function Ys(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Xs(e){return!e.componentInstance||e.data&&e.data.transition?e:Xs(e.componentInstance._vnode)}var Ks={model:Ns,show:{bind:function(e,t,n){var a=t.value,s=(n=Xs(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&s?(n.data.show=!0,Es(n,(function(){e.style.display=i}))):e.style.display=a?i:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=Xs(n)).data&&n.data.transition?(n.data.show=!0,a?Es(n,(function(){e.style.display=e.__vOriginalDisplay})):Vs(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,s){s||(e.style.display=e.__vOriginalDisplay)}}},Js={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Qs(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Qs(jt(t.children)):e}function ei(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var s=n._parentListeners;for(var i in s)t[x(i)]=s[i];return t}function ti(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ni=function(e){return e.tag||zt(e)},ai=function(e){return"show"===e.name},si={name:"transition",props:Js,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ni)).length){0;var a=this.mode;0;var s=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return s;var i=Qs(s);if(!i)return s;if(this._leaving)return ti(e,s);var r="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?r+"comment":r+i.tag:o(i.key)?0===String(i.key).indexOf(r)?i.key:r+i.key:i.key;var p=(i.data||(i.data={})).transition=ei(this),d=this._vnode,u=Qs(d);if(i.data.directives&&i.data.directives.some(ai)&&(i.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,u)&&!zt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var l=u.data.transition=C({},p);if("out-in"===a)return this._leaving=!0,dt(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),ti(e,s);if("in-out"===a){if(zt(i))return d;var y,c=function(){y()};dt(p,"afterEnter",c),dt(p,"enterCancelled",c),dt(l,"delayLeave",(function(e){y=e}))}}return s}}},ii=C({tag:String,moveClass:String},Js);function ri(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function oi(e){e.data.newPos=e.elm.getBoundingClientRect()}function pi(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,s=t.top-n.top;if(a||s){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+a+"px,"+s+"px)",i.transitionDuration="0s"}}delete ii.mode;var di={Transition:si,TransitionGroup:{props:ii,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var s=Jt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,s(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,s=this.$slots.default||[],i=this.children=[],r=ei(this),o=0;o<s.length;o++){var p=s[o];if(p.tag)if(null!=p.key&&0!==String(p.key).indexOf("__vlist"))i.push(p),n[p.key]=p,(p.data||(p.data={})).transition=r;else;}if(a){for(var d=[],u=[],l=0;l<a.length;l++){var y=a[l];y.data.transition=r,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?d.push(y):u.push(y)}this.kept=e(t,null,d),this.removed=u}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(ri),e.forEach(oi),e.forEach(pi),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Os(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(xs,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(xs,e),n._moveCb=null,Cs(n,t))})}})))},methods:{hasMove:function(e,t){if(!ks)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){ws(n,e)})),hs(n,t),n.style.display="none",this.$el.appendChild(n);var a=Fs(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}}};Sn.config.mustUseProp=Dn,Sn.config.isReservedTag=Xn,Sn.config.isReservedAttr=Fn,Sn.config.getTagNamespace=Kn,Sn.config.isUnknownElement=function(e){if(!G)return!0;if(Xn(e))return!1;if(e=e.toLowerCase(),null!=Jn[e])return Jn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Jn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Jn[e]=/HTMLUnknownElement/.test(t.toString())},C(Sn.options.directives,Ks),C(Sn.options.components,di),Sn.prototype.__patch__=G?Us:I,Sn.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=he),tn(e,"beforeMount"),a=function(){e._update(e._render(),n)},new mn(e,a,I,{before:function(){e._isMounted&&!e._isDestroyed&&tn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,tn(e,"mounted")),e}(this,e=e&&G?ea(e):void 0,t)},G&&setTimeout((function(){q.devtools&&re&&re.emit("init",Sn)}),0);var ui=/\{\{((?:.|\r?\n)+?)\}\}/g,li=/[-.*+?^${}()|[\]\/\\]/g,yi=k((function(e){var t=e[0].replace(li,"\\$&"),n=e[1].replace(li,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")}));var ci={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=Wa(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=Ba(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}};var mi,Ti={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=Wa(e,"style");n&&(e.staticStyle=JSON.stringify(rs(n)));var a=Ba(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},bi=function(e){return(mi=mi||document.createElement("div")).innerHTML=e,mi.textContent},fi=b("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),hi=b("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),wi=b("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),vi=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,gi=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,ki="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+U.source+"]*",Mi="((?:"+ki+"\\:)?"+ki+")",xi=new RegExp("^<"+Mi),Si=/^\s*(\/?)>/,Ai=new RegExp("^<\\/"+Mi+"[^>]*>"),_i=/^<!DOCTYPE [^>]+>/i,Pi=/^<!\--/,Oi=/^<!\[/,Ci=b("script,style,textarea",!0),Ri={},Ii={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Fi=/&(?:lt|gt|quot|amp|#39);/g,Li=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Di=b("pre,textarea",!0),Ei=function(e,t){return e&&Di(e)&&"\n"===t[0]};function Vi(e,t){var n=t?Li:Fi;return e.replace(n,(function(e){return Ii[e]}))}var Bi,Wi,qi,Ui,Ni,Hi,$i,zi,ji=/^@|^v-on:/,Gi=/^v-|^@|^:|^#/,Zi=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Yi=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Xi=/^\(|\)$/g,Ki=/^\[.*\]$/,Ji=/:(.*)$/,Qi=/^:|^\.|^v-bind:/,er=/\.[^.\]]+(?=[^\]]*$)/g,tr=/^v-slot(:|$)|^#/,nr=/[\r\n]/,ar=/\s+/g,sr=k(bi);function ir(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:yr(t),rawAttrsMap:{},parent:n,children:[]}}function rr(e,t){Bi=t.warn||Ca,Hi=t.isPreTag||F,$i=t.mustUseProp||F,zi=t.getTagNamespace||F;var n=t.isReservedTag||F;(function(e){return!!e.component||!n(e.tag)}),qi=Ra(t.modules,"transformNode"),Ui=Ra(t.modules,"preTransformNode"),Ni=Ra(t.modules,"postTransformNode"),Wi=t.delimiters;var a,s,i=[],r=!1!==t.preserveWhitespace,o=t.whitespace,p=!1,d=!1;function u(e){if(l(e),p||e.processed||(e=or(e,t)),i.length||e===a||a.if&&(e.elseif||e.else)&&dr(a,{exp:e.elseif,block:e}),s&&!e.forbidden)if(e.elseif||e.else)r=e,(o=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(s.children))&&o.if&&dr(o,{exp:r.elseif,block:r});else{if(e.slotScope){var n=e.slotTarget||'"default"';(s.scopedSlots||(s.scopedSlots={}))[n]=e}s.children.push(e),e.parent=s}var r,o;e.children=e.children.filter((function(e){return!e.slotScope})),l(e),e.pre&&(p=!1),Hi(e.tag)&&(d=!1);for(var u=0;u<Ni.length;u++)Ni[u](e,t)}function l(e){if(!d)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,s=[],i=t.expectHTML,r=t.isUnaryTag||F,o=t.canBeLeftOpenTag||F,p=0;e;){if(n=e,a&&Ci(a)){var d=0,u=a.toLowerCase(),l=Ri[u]||(Ri[u]=new RegExp("([\\s\\S]*?)(</"+u+"[^>]*>)","i")),y=e.replace(l,(function(e,n,a){return d=a.length,Ci(u)||"noscript"===u||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Ei(u,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));p+=e.length-y.length,e=y,A(u,p-d,p)}else{var c=e.indexOf("<");if(0===c){if(Pi.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),p,p+m+3),M(m+3);continue}}if(Oi.test(e)){var T=e.indexOf("]>");if(T>=0){M(T+2);continue}}var b=e.match(_i);if(b){M(b[0].length);continue}var f=e.match(Ai);if(f){var h=p;M(f[0].length),A(f[1],h,p);continue}var w=x();if(w){S(w),Ei(w.tagName,e)&&M(1);continue}}var v=void 0,g=void 0,k=void 0;if(c>=0){for(g=e.slice(c);!(Ai.test(g)||xi.test(g)||Pi.test(g)||Oi.test(g)||(k=g.indexOf("<",1))<0);)c+=k,g=e.slice(c);v=e.substring(0,c)}c<0&&(v=e),v&&M(v.length),t.chars&&v&&t.chars(v,p-v.length,p)}if(e===n){t.chars&&t.chars(e);break}}function M(t){p+=t,e=e.substring(t)}function x(){var t=e.match(xi);if(t){var n,a,s={tagName:t[1],attrs:[],start:p};for(M(t[0].length);!(n=e.match(Si))&&(a=e.match(gi)||e.match(vi));)a.start=p,M(a[0].length),a.end=p,s.attrs.push(a);if(n)return s.unarySlash=n[1],M(n[0].length),s.end=p,s}}function S(e){var n=e.tagName,p=e.unarySlash;i&&("p"===a&&wi(n)&&A(a),o(n)&&a===n&&A(n));for(var d=r(n)||!!p,u=e.attrs.length,l=new Array(u),y=0;y<u;y++){var c=e.attrs[y],m=c[3]||c[4]||c[5]||"",T="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[y]={name:c[1],value:Vi(m,T)}}d||(s.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,d,e.start,e.end)}function A(e,n,i){var r,o;if(null==n&&(n=p),null==i&&(i=p),e)for(o=e.toLowerCase(),r=s.length-1;r>=0&&s[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var d=s.length-1;d>=r;d--)t.end&&t.end(s[d].tag,n,i);s.length=r,a=r&&s[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,i):"p"===o&&(t.start&&t.start(e,[],!1,n,i),t.end&&t.end(e,n,i))}A()}(e,{warn:Bi,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,n,r,o,l){var y=s&&s.ns||zi(e);K&&"svg"===y&&(n=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];cr.test(a.name)||(a.name=a.name.replace(mr,""),t.push(a))}return t}(n));var c,m=ir(e,n,s);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||ie()||(m.forbidden=!0);for(var T=0;T<Ui.length;T++)m=Ui[T](m,t)||m;p||(!function(e){null!=Wa(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(p=!0)),Hi(m.tag)&&(d=!0),p?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),s=0;s<n;s++)a[s]={name:t[s].name,value:JSON.stringify(t[s].value)},null!=t[s].start&&(a[s].start=t[s].start,a[s].end=t[s].end);else e.pre||(e.plain=!0)}(m):m.processed||(pr(m),function(e){var t=Wa(e,"v-if");if(t)e.if=t,dr(e,{exp:t,block:e});else{null!=Wa(e,"v-else")&&(e.else=!0);var n=Wa(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=Wa(e,"v-once")&&(e.once=!0)}(m)),a||(a=m),r?u(m):(s=m,i.push(m))},end:function(e,t,n){var a=i[i.length-1];i.length-=1,s=i[i.length-1],u(a)},chars:function(e,t,n){if(s&&(!K||"textarea"!==s.tag||s.attrsMap.placeholder!==e)){var a,i,u,l=s.children;if(e=d||e.trim()?"script"===(a=s).tag||"style"===a.tag?e:sr(e):l.length?o?"condense"===o&&nr.test(e)?"":" ":r?" ":"":"")d||"condense"!==o||(e=e.replace(ar," ")),!p&&" "!==e&&(i=function(e,t){var n=t?yi(t):ui;if(n.test(e)){for(var a,s,i,r=[],o=[],p=n.lastIndex=0;a=n.exec(e);){(s=a.index)>p&&(o.push(i=e.slice(p,s)),r.push(JSON.stringify(i)));var d=Pa(a[1].trim());r.push("_s("+d+")"),o.push({"@binding":d}),p=s+a[0].length}return p<e.length&&(o.push(i=e.slice(p)),r.push(JSON.stringify(i))),{expression:r.join("+"),tokens:o}}}(e,Wi))?u={type:2,expression:i.expression,tokens:i.tokens,text:e}:" "===e&&l.length&&" "===l[l.length-1].text||(u={type:3,text:e}),u&&l.push(u)}},comment:function(e,t,n){if(s){var a={type:3,text:e,isComment:!0};0,s.children.push(a)}}}),a}function or(e,t){var n;!function(e){var t=Ba(e,"key");if(t){e.key=t}}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Ba(e,"ref");t&&(e.ref=t,e.refInFor=function(e){var t=e;for(;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=Wa(e,"scope"),e.slotScope=t||Wa(e,"slot-scope")):(t=Wa(e,"slot-scope"))&&(e.slotScope=t);var n=Ba(e,"slot");n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Fa(e,"slot",n,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot")));if("template"===e.tag){var a=qa(e,tr);if(a){0;var s=ur(a),i=s.name,r=s.dynamic;e.slotTarget=i,e.slotTargetDynamic=r,e.slotScope=a.value||"_empty_"}}else{var o=qa(e,tr);if(o){0;var p=e.scopedSlots||(e.scopedSlots={}),d=ur(o),u=d.name,l=d.dynamic,y=p[u]=ir("template",[],e);y.slotTarget=u,y.slotTargetDynamic=l,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=o.value||"_empty_",e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=Ba(n,"name")),function(e){var t;(t=Ba(e,"is"))&&(e.component=t);null!=Wa(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<qi.length;a++)e=qi[a](e,t)||e;return function(e){var t,n,a,s,i,r,o,p,d=e.attrsList;for(t=0,n=d.length;t<n;t++){if(a=s=d[t].name,i=d[t].value,Gi.test(a))if(e.hasBindings=!0,(r=lr(a.replace(Gi,"")))&&(a=a.replace(er,"")),Qi.test(a))a=a.replace(Qi,""),i=Pa(i),(p=Ki.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!p&&"innerHtml"===(a=x(a))&&(a="innerHTML"),r.camel&&!p&&(a=x(a)),r.sync&&(o=Ha(i,"$event"),p?Va(e,'"update:"+('+a+")",o,null,!1,0,d[t],!0):(Va(e,"update:"+x(a),o,null,!1,0,d[t]),_(a)!==x(a)&&Va(e,"update:"+_(a),o,null,!1,0,d[t])))),r&&r.prop||!e.component&&$i(e.tag,e.attrsMap.type,a)?Ia(e,a,i,d[t],p):Fa(e,a,i,d[t],p);else if(ji.test(a))a=a.replace(ji,""),(p=Ki.test(a))&&(a=a.slice(1,-1)),Va(e,a,i,r,!1,0,d[t],p);else{var u=(a=a.replace(Gi,"")).match(Ji),l=u&&u[1];p=!1,l&&(a=a.slice(0,-(l.length+1)),Ki.test(l)&&(l=l.slice(1,-1),p=!0)),Da(e,a,s,i,l,p,r,d[t])}else Fa(e,a,JSON.stringify(i),d[t]),!e.component&&"muted"===a&&$i(e.tag,e.attrsMap.type,a)&&Ia(e,a,"true",d[t])}}(e),e}function pr(e){var t;if(t=Wa(e,"v-for")){var n=function(e){var t=e.match(Zi);if(!t)return;var n={};n.for=t[2].trim();var a=t[1].trim().replace(Xi,""),s=a.match(Yi);s?(n.alias=a.replace(Yi,"").trim(),n.iterator1=s[1].trim(),s[2]&&(n.iterator2=s[2].trim())):n.alias=a;return n}(t);n&&C(e,n)}}function dr(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function ur(e){var t=e.name.replace(tr,"");return t||"#"!==e.name[0]&&(t="default"),Ki.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function lr(e){var t=e.match(er);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function yr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var cr=/^xmlns:NS\d+/,mr=/^NS\d+:/;function Tr(e){return ir(e.tag,e.attrsList.slice(),e.parent)}var br=[ci,Ti,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=Ba(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var s=Wa(e,"v-if",!0),i=s?"&&("+s+")":"",r=null!=Wa(e,"v-else",!0),o=Wa(e,"v-else-if",!0),p=Tr(e);pr(p),La(p,"type","checkbox"),or(p,t),p.processed=!0,p.if="("+n+")==='checkbox'"+i,dr(p,{exp:p.if,block:p});var d=Tr(e);Wa(d,"v-for",!0),La(d,"type","radio"),or(d,t),dr(p,{exp:"("+n+")==='radio'"+i,block:d});var u=Tr(e);return Wa(u,"v-for",!0),La(u,":type",n),or(u,t),dr(p,{exp:s,block:u}),r?p.else=!0:o&&(p.elseif=o),p}}}}];var fr,hr,wr={expectHTML:!0,modules:br,directives:{model:function(e,t,n){n;var a=t.value,s=t.modifiers,i=e.tag,r=e.attrsMap.type;if(e.component)return Na(e,a,s),!1;if("select"===i)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";a=a+" "+Ha(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),Va(e,"change",a,null,!0)}(e,a,s);else if("input"===i&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,s=Ba(e,"value")||"null",i=Ba(e,"true-value")||"true",r=Ba(e,"false-value")||"false";Ia(e,"checked","Array.isArray("+t+")?_i("+t+","+s+")>-1"+("true"===i?":("+t+")":":_q("+t+","+i+")")),Va(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+i+"):("+r+");if(Array.isArray($$a)){var $$v="+(a?"_n("+s+")":s)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Ha(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Ha(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Ha(t,"$$c")+"}",null,!0)}(e,a,s);else if("input"===i&&"radio"===r)!function(e,t,n){var a=n&&n.number,s=Ba(e,"value")||"null";Ia(e,"checked","_q("+t+","+(s=a?"_n("+s+")":s)+")"),Va(e,"change",Ha(t,s),null,!0)}(e,a,s);else if("input"===i||"textarea"===i)!function(e,t,n){var a=e.attrsMap.type;0;var s=n||{},i=s.lazy,r=s.number,o=s.trim,p=!i&&"range"!==a,d=i?"change":"range"===a?"__r":"input",u="$event.target.value";o&&(u="$event.target.value.trim()");r&&(u="_n("+u+")");var l=Ha(t,u);p&&(l="if($event.target.composing)return;"+l);Ia(e,"value","("+t+")"),Va(e,d,l,null,!0),(o||r)&&Va(e,"blur","$forceUpdate()")}(e,a,s);else{if(!q.isReservedTag(i))return Na(e,a,s),!1}return!0},text:function(e,t){t.value&&Ia(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Ia(e,"innerHTML","_s("+t.value+")",t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:fi,mustUseProp:Dn,canBeLeftOpenTag:hi,isReservedTag:Xn,getTagNamespace:Kn,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(br)},vr=k((function(e){return b("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function gr(e,t){e&&(fr=vr(t.staticKeys||""),hr=t.isReservedTag||F,function e(t){if(t.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||f(e.tag)||!hr(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(fr)))}(t),1===t.type){if(!hr(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var n=0,a=t.children.length;n<a;n++){var s=t.children[n];e(s),s.static||(t.static=!1)}if(t.ifConditions)for(var i=1,r=t.ifConditions.length;i<r;i++){var o=t.ifConditions[i].block;e(o),o.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var a=0,s=t.children.length;a<s;a++)e(t.children[a],n||!!t.for);if(t.ifConditions)for(var i=1,r=t.ifConditions.length;i<r;i++)e(t.ifConditions[i].block,n)}}(e,!1))}var kr=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Mr=/\([^)]*?\);*$/,xr=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Sr={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ar={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},_r=function(e){return"if("+e+")return null;"},Pr={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:_r("$event.target !== $event.currentTarget"),ctrl:_r("!$event.ctrlKey"),shift:_r("!$event.shiftKey"),alt:_r("!$event.altKey"),meta:_r("!$event.metaKey"),left:_r("'button' in $event && $event.button !== 0"),middle:_r("'button' in $event && $event.button !== 1"),right:_r("'button' in $event && $event.button !== 2")};function Or(e,t){var n=t?"nativeOn:":"on:",a="",s="";for(var i in e){var r=Cr(e[i]);e[i]&&e[i].dynamic?s+=i+","+r+",":a+='"'+i+'":'+r+","}return a="{"+a.slice(0,-1)+"}",s?n+"_d("+a+",["+s.slice(0,-1)+"])":n+a}function Cr(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Cr(e)})).join(",")+"]";var t=xr.test(e.value),n=kr.test(e.value),a=xr.test(e.value.replace(Mr,""));if(e.modifiers){var s="",i="",r=[];for(var o in e.modifiers)if(Pr[o])i+=Pr[o],Sr[o]&&r.push(o);else if("exact"===o){var p=e.modifiers;i+=_r(["ctrl","shift","alt","meta"].filter((function(e){return!p[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else r.push(o);return r.length&&(s+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Rr).join("&&")+")return null;"}(r)),i&&(s+=i),"function($event){"+s+(t?"return "+e.value+"($event)":n?"return ("+e.value+")($event)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function Rr(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Sr[e],a=Ar[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var Ir={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:I},Fr=function(e){this.options=e,this.warn=e.warn||Ca,this.transforms=Ra(e.modules,"transformCode"),this.dataGenFns=Ra(e.modules,"genData"),this.directives=C(C({},Ir),e.directives);var t=e.isReservedTag||F;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Lr(e,t){var n=new Fr(t);return{render:"with(this){return "+(e?Dr(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Dr(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Er(e,t);if(e.once&&!e.onceProcessed)return Vr(e,t);if(e.for&&!e.forProcessed)return Wr(e,t);if(e.if&&!e.ifProcessed)return Br(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=Hr(e,t),s="_t("+n+(a?","+a:""),i=e.attrs||e.dynamicAttrs?jr((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:x(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];!i&&!r||a||(s+=",null");i&&(s+=","+i);r&&(s+=(i?"":",null")+","+r);return s+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:Hr(t,n,!0);return"_c("+e+","+qr(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=qr(e,t));var s=e.inlineTemplate?null:Hr(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(s?","+s:"")+")"}for(var i=0;i<t.transforms.length;i++)n=t.transforms[i](e,n);return n}return Hr(e,t)||"void 0"}function Er(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+Dr(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Vr(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Br(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+Dr(e,t)+","+t.onceId+++","+n+")":Dr(e,t)}return Er(e,t)}function Br(e,t,n,a){return e.ifProcessed=!0,function e(t,n,a,s){if(!t.length)return s||"_e()";var i=t.shift();return i.exp?"("+i.exp+")?"+r(i.block)+":"+e(t,n,a,s):""+r(i.block);function r(e){return a?a(e,n):e.once?Vr(e,n):Dr(e,n)}}(e.ifConditions.slice(),t,n,a)}function Wr(e,t,n,a){var s=e.for,i=e.alias,r=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+s+"),function("+i+r+o+"){return "+(n||Dr)(e,t)+"})"}function qr(e,t){var n="{",a=function(e,t){var n=e.directives;if(!n)return;var a,s,i,r,o="directives:[",p=!1;for(a=0,s=n.length;a<s;a++){i=n[a],r=!0;var d=t.directives[i.name];d&&(r=!!d(e,i,t.warn)),r&&(p=!0,o+='{name:"'+i.name+'",rawName:"'+i.rawName+'"'+(i.value?",value:("+i.value+"),expression:"+JSON.stringify(i.value):"")+(i.arg?",arg:"+(i.isDynamicArg?i.arg:'"'+i.arg+'"'):"")+(i.modifiers?",modifiers:"+JSON.stringify(i.modifiers):"")+"},")}if(p)return o.slice(0,-1)+"]"}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var s=0;s<t.dataGenFns.length;s++)n+=t.dataGenFns[s](e);if(e.attrs&&(n+="attrs:"+jr(e.attrs)+","),e.props&&(n+="domProps:"+jr(e.props)+","),e.events&&(n+=Or(e.events,!1)+","),e.nativeEvents&&(n+=Or(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Ur(n)})),s=!!e.if;if(!a)for(var i=e.parent;i;){if(i.slotScope&&"_empty_"!==i.slotScope||i.for){a=!0;break}i.if&&(s=!0),i=i.parent}var r=Object.keys(t).map((function(e){return Nr(t[e],n)})).join(",");return"scopedSlots:_u(["+r+"]"+(a?",null,true":"")+(!a&&s?",null,false,"+function(e){var t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var i=function(e,t){var n=e.children[0];0;if(n&&1===n.type){var a=Lr(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);i&&(n+=i+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+jr(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Ur(e){return 1===e.type&&("slot"===e.tag||e.children.some(Ur))}function Nr(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Br(e,t,Nr,"null");if(e.for&&!e.forProcessed)return Wr(e,t,Nr);var a="_empty_"===e.slotScope?"":String(e.slotScope),s="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(Hr(e,t)||"undefined")+":undefined":Hr(e,t)||"undefined":Dr(e,t))+"}",i=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+s+i+"}"}function Hr(e,t,n,a,s){var i=e.children;if(i.length){var r=i[0];if(1===i.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return""+(a||Dr)(r,t)+o}var p=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var s=e[a];if(1===s.type){if($r(s)||s.ifConditions&&s.ifConditions.some((function(e){return $r(e.block)}))){n=2;break}(t(s)||s.ifConditions&&s.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(i,t.maybeComponent):0,d=s||zr;return"["+i.map((function(e){return d(e,t)})).join(",")+"]"+(p?","+p:"")}}function $r(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function zr(e,t){return 1===e.type?Dr(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):function(e){return"_v("+(2===e.type?e.expression:Gr(JSON.stringify(e.text)))+")"}(e)}function jr(e){for(var t="",n="",a=0;a<e.length;a++){var s=e[a],i=Gr(s.value);s.dynamic?n+=s.name+","+i+",":t+='"'+s.name+'":'+i+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function Gr(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function Zr(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),I}}function Yr(e){var t=Object.create(null);return function(n,a,s){(a=C({},a)).warn;delete a.warn;var i=a.delimiters?String(a.delimiters)+n:n;if(t[i])return t[i];var r=e(n,a);var o={},p=[];return o.render=Zr(r.render,p),o.staticRenderFns=r.staticRenderFns.map((function(e){return Zr(e,p)})),t[i]=o}}var Xr,Kr,Jr=(Xr=function(e,t){var n=rr(e.trim(),t);!1!==t.optimize&&gr(n,t);var a=Lr(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),s=[],i=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=C(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?i:s).push(e)};var o=Xr(t.trim(),a);return o.errors=s,o.tips=i,o}return{compile:t,compileToFunctions:Yr(t)}})(wr),Qr=(Jr.compile,Jr.compileToFunctions);function eo(e){return(Kr=Kr||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Kr.innerHTML.indexOf("&#10;")>0}var to=!!G&&eo(!1),no=!!G&&eo(!0),ao=k((function(e){var t=ea(e);return t&&t.innerHTML})),so=Sn.prototype.$mount;Sn.prototype.$mount=function(e,t){if((e=e&&ea(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=ao(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){0;var s=Qr(a,{outputSourceRange:!1,shouldDecodeNewlines:to,shouldDecodeNewlinesForHref:no,delimiters:n.delimiters,comments:n.comments},this),i=s.render,r=s.staticRenderFns;n.render=i,n.staticRenderFns=r}}return so.call(this,e,t)},Sn.compile=Qr,t.a=Sn}).call(this,n(0),n(7).setImmediate)},function(e){e.exports=JSON.parse('{"a":"hardhat-docgen","b":{"type":"git","url":"git+https://github.com/ItsNickBarry/hardhat-docgen.git"}}')},function(e,t,n){var a=n(5);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(11).default)("0b345cf4",a,!1,{})},function(e,t,n){"use strict";n(3)},function(e,t,n){(t=e.exports=n(6)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);",""]),t.push([e.i,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",a=e[3];if(!a)return n;if(t&&"function"==typeof btoa){var s=(r=a,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),i=a.sources.map((function(e){return"/*# sourceURL="+a.sourceRoot+e+" */"}));return[n].concat(i).concat([s]).join("\n")}var r;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(s=0;s<e.length;s++){var r=e[s];null!=r[0]&&a[r[0]]||(n&&!r[2]?r[2]=n:n&&(r[2]="("+r[2]+") and ("+n+")"),t.push(r))}},t}},function(e,t,n){(function(e){var a=void 0!==e&&e||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;function i(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new i(s.call(setTimeout,a,arguments),clearTimeout)},t.setInterval=function(){return new i(s.call(setInterval,a,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(a,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(8),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var a,s,i,r,o,p=1,d={},u=!1,l=e.document,y=Object.getPrototypeOf&&Object.getPrototypeOf(e);y=y&&y.setTimeout?y:e,"[object process]"==={}.toString.call(e.process)?a=function(){var e=c(arguments);return t.nextTick(m(T,e)),e}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){T(e.data)},a=function(){var e=c(arguments);return i.port2.postMessage(e),e}):l&&"onreadystatechange"in l.createElement("script")?(s=l.documentElement,a=function(){var e=c(arguments),t=l.createElement("script");return t.onreadystatechange=function(){T(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t),e}):a=function(){var e=c(arguments);return setTimeout(m(T,e),0),e}:(r="setImmediate$"+Math.random()+"$",o=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(r)&&T(+t.data.slice(r.length))},e.addEventListener?e.addEventListener("message",o,!1):e.attachEvent("onmessage",o),a=function(){var t=c(arguments);return e.postMessage(r+t,"*"),t}),y.setImmediate=a,y.clearImmediate=b}function c(e){return d[p]=m.apply(void 0,e),p++}function m(e){var t=[].slice.call(arguments,1);return function(){"function"==typeof e?e.apply(void 0,t):new Function(""+e)()}}function T(e){if(u)setTimeout(m(T,e),0);else{var t=d[e];if(t){u=!0;try{t()}finally{b(e),u=!1}}}}function b(e){delete d[e]}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(0),n(9))},function(e,t){var n,a,s=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a="function"==typeof clearTimeout?clearTimeout:r}catch(e){a=r}}();var p,d=[],u=!1,l=-1;function y(){u&&p&&(u=!1,p.length?d=p.concat(d):l=-1,d.length&&c())}function c(){if(!u){var e=o(y);u=!0;for(var t=d.length;t;){for(p=d,d=[];++l<t;)p&&p[l].run();l=-1,t=d.length}p=null,u=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===r||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function T(){}s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new m(e,t)),1!==d.length||u||o(c)},m.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=T,s.addListener=T,s.once=T,s.off=T,s.removeListener=T,s.removeAllListeners=T,s.emit=T,s.prependListener=T,s.prependOnceListener=T,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t);var a=n(1);
/*!
  * vue-router v3.5.1
  * (c) 2021 Evan You
  * @license MIT
  */function s(e,t){for(var n in t)e[n]=t[n];return e}var i=/[!'()*]/g,r=function(e){return"%"+e.charCodeAt(0).toString(16)},o=/%2C/g,p=function(e){return encodeURIComponent(e).replace(i,r).replace(o,",")};function d(e){try{return decodeURIComponent(e)}catch(e){0}return e}var u=function(e){return null==e||"object"==typeof e?e:String(e)};function l(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=d(n.shift()),s=n.length>0?d(n.join("=")):null;void 0===t[a]?t[a]=s:Array.isArray(t[a])?t[a].push(s):t[a]=[t[a],s]})),t):t}function y(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return p(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(p(t)):a.push(p(t)+"="+p(e)))})),a.join("&")}return p(t)+"="+p(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var c=/\/?$/;function m(e,t,n,a){var s=a&&a.options.stringifyQuery,i=t.query||{};try{i=T(i)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:h(t,s),matched:e?f(e):[]};return n&&(r.redirectedFrom=h(n,s)),Object.freeze(r)}function T(e){if(Array.isArray(e))return e.map(T);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=T(e[n]);return t}return e}var b=m(null,{path:"/"});function f(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function h(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var s=e.hash;return void 0===s&&(s=""),(n||"/")+(t||y)(a)+s}function w(e,t,n){return t===b?e===t:!!t&&(e.path&&t.path?e.path.replace(c,"")===t.path.replace(c,"")&&(n||e.hash===t.hash&&v(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&v(e.query,t.query)&&v(e.params,t.params))))}function v(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,s){var i=e[n];if(a[s]!==n)return!1;var r=t[n];return null==i||null==r?i===r:"object"==typeof i&&"object"==typeof r?v(i,r):String(i)===String(r)}))}function g(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var s=n.instances[a],i=n.enteredCbs[a];if(s&&i){delete n.enteredCbs[a];for(var r=0;r<i.length;r++)s._isBeingDestroyed||i[r](s)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,r=t.data;r.routerView=!0;for(var o=i.$createElement,p=n.name,d=i.$route,u=i._routerViewCache||(i._routerViewCache={}),l=0,y=!1;i&&i._routerRoot!==i;){var c=i.$vnode?i.$vnode.data:{};c.routerView&&l++,c.keepAlive&&i._directInactive&&i._inactive&&(y=!0),i=i.$parent}if(r.routerViewDepth=l,y){var m=u[p],T=m&&m.component;return T?(m.configProps&&M(T,r,m.route,m.configProps),o(T,r,a)):o()}var b=d.matched[l],f=b&&b.components[p];if(!b||!f)return u[p]=null,o();u[p]={component:f},r.registerRouteInstance=function(e,t){var n=b.instances[p];(t&&n!==e||!t&&n===e)&&(b.instances[p]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){b.instances[p]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==b.instances[p]&&(b.instances[p]=e.componentInstance),g(d)};var h=b.props&&b.props[p];return h&&(s(u[p],{route:d,configProps:h}),M(f,r,d,h)),o(f,r,a)}};function M(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,a);if(i){i=t.props=s({},i);var r=t.attrs=t.attrs||{};for(var o in i)e.props&&o in e.props||(r[o]=i[o],delete i[o])}}function x(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var s=t.split("/");n&&s[s.length-1]||s.pop();for(var i=e.replace(/^\//,"").split("/"),r=0;r<i.length;r++){var o=i[r];".."===o?s.pop():"."!==o&&s.push(o)}return""!==s[0]&&s.unshift(""),s.join("/")}function S(e){return e.replace(/\/\//g,"/")}var A=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},_=U,P=F,O=function(e,t){return D(F(e,t),t)},C=D,R=q,I=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function F(e,t){for(var n,a=[],s=0,i=0,r="",o=t&&t.delimiter||"/";null!=(n=I.exec(e));){var p=n[0],d=n[1],u=n.index;if(r+=e.slice(i,u),i=u+p.length,d)r+=d[1];else{var l=e[i],y=n[2],c=n[3],m=n[4],T=n[5],b=n[6],f=n[7];r&&(a.push(r),r="");var h=null!=y&&null!=l&&l!==y,w="+"===b||"*"===b,v="?"===b||"*"===b,g=n[2]||o,k=m||T;a.push({name:c||s++,prefix:y||"",delimiter:g,optional:v,repeat:w,partial:h,asterisk:!!f,pattern:k?V(k):f?".*":"[^"+E(g)+"]+?"})}}return i<e.length&&(r+=e.substr(i)),r&&a.push(r),a}function L(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function D(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",W(t)));return function(t,a){for(var s="",i=t||{},r=(a||{}).pretty?L:encodeURIComponent,o=0;o<e.length;o++){var p=e[o];if("string"!=typeof p){var d,u=i[p.name];if(null==u){if(p.optional){p.partial&&(s+=p.prefix);continue}throw new TypeError('Expected "'+p.name+'" to be defined')}if(A(u)){if(!p.repeat)throw new TypeError('Expected "'+p.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(p.optional)continue;throw new TypeError('Expected "'+p.name+'" to not be empty')}for(var l=0;l<u.length;l++){if(d=r(u[l]),!n[o].test(d))throw new TypeError('Expected all "'+p.name+'" to match "'+p.pattern+'", but received `'+JSON.stringify(d)+"`");s+=(0===l?p.prefix:p.delimiter)+d}}else{if(d=p.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(u),!n[o].test(d))throw new TypeError('Expected "'+p.name+'" to match "'+p.pattern+'", but received "'+d+'"');s+=p.prefix+d}}else s+=p}return s}}function E(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function V(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function B(e,t){return e.keys=t,e}function W(e){return e&&e.sensitive?"":"i"}function q(e,t,n){A(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,s=!1!==n.end,i="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)i+=E(o);else{var p=E(o.prefix),d="(?:"+o.pattern+")";t.push(o),o.repeat&&(d+="(?:"+p+d+")*"),i+=d=o.optional?o.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var u=E(n.delimiter||"/"),l=i.slice(-u.length)===u;return a||(i=(l?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=s?"$":a&&l?"":"(?="+u+"|$)",B(new RegExp("^"+i,W(n)),t)}function U(e,t,n){return A(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return B(e,t)}(e,t):A(e)?function(e,t,n){for(var a=[],s=0;s<e.length;s++)a.push(U(e[s],t,n).source);return B(new RegExp("(?:"+a.join("|")+")",W(n)),t)}(e,t,n):function(e,t,n){return q(F(e,n),t,n)}(e,t,n)}_.parse=P,_.compile=O,_.tokensToFunction=C,_.tokensToRegExp=R;var N=Object.create(null);function H(e,t,n){t=t||{};try{var a=N[e]||(N[e]=_.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function $(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var r=(i=s({},e)).params;return r&&"object"==typeof r&&(i.params=s({},r)),i}if(!i.path&&i.params&&t){(i=s({},i))._normalized=!0;var o=s(s({},t.params),i.params);if(t.name)i.name=t.name,i.params=o;else if(t.matched.length){var p=t.matched[t.matched.length-1].path;i.path=H(p,o,t.path)}else 0;return i}var d=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var s=e.indexOf("?");return s>=0&&(n=e.slice(s+1),e=e.slice(0,s)),{path:e,query:n,hash:t}}(i.path||""),y=t&&t.path||"/",c=d.path?x(d.path,y,n||i.append):y,m=function(e,t,n){void 0===t&&(t={});var a,s=n||l;try{a=s(e||"")}catch(e){a={}}for(var i in t){var r=t[i];a[i]=Array.isArray(r)?r.map(u):u(r)}return a}(d.query,i.query,a&&a.options.parseQuery),T=i.hash||d.hash;return T&&"#"!==T.charAt(0)&&(T="#"+T),{_normalized:!0,path:c,query:m,hash:T}}var z,j=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),r=i.location,o=i.route,p=i.href,d={},u=n.options.linkActiveClass,l=n.options.linkExactActiveClass,y=null==u?"router-link-active":u,T=null==l?"router-link-exact-active":l,b=null==this.activeClass?y:this.activeClass,f=null==this.exactActiveClass?T:this.exactActiveClass,h=o.redirectedFrom?m(null,$(o.redirectedFrom),null,n):o;d[f]=w(a,h,this.exactPath),d[b]=this.exact||this.exactPath?d[f]:function(e,t){return 0===e.path.replace(c,"/").indexOf(t.path.replace(c,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,h);var v=d[f]?this.ariaCurrentValue:null,g=function(e){Z(e)&&(t.replace?n.replace(r,j):n.push(r,j))},k={click:Z};Array.isArray(this.event)?this.event.forEach((function(e){k[e]=g})):k[this.event]=g;var M={class:d},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:p,route:o,navigate:g,isActive:d[b],isExactActive:d[f]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?e():e("span",{},x)}if("a"===this.tag)M.on=k,M.attrs={href:p,"aria-current":v};else{var S=function e(t){var n;if(t)for(var a=0;a<t.length;a++){if("a"===(n=t[a]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(S){S.isStatic=!1;var A=S.data=s({},S.data);for(var _ in A.on=A.on||{},A.on){var P=A.on[_];_ in k&&(A.on[_]=Array.isArray(P)?P:[P])}for(var O in k)O in A.on?A.on[O].push(k[O]):A.on[O]=g;var C=S.data.attrs=s({},S.data.attrs);C.href=p,C["aria-current"]=v}else M.on=k}return e(this.tag,M,this.$slots.default)}};function Z(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Y="undefined"!=typeof window;function X(e,t,n,a,s){var i=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){!function e(t,n,a,s,i,r){var o=s.path,p=s.name;0;var d=s.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return S(t.path+"/"+e)}(o,i,d.strict);"boolean"==typeof s.caseSensitive&&(d.sensitive=s.caseSensitive);var l={path:u,regex:K(u,d),components:s.components||{default:s.component},alias:s.alias?"string"==typeof s.alias?[s.alias]:s.alias:[],instances:{},enteredCbs:{},name:p,parent:i,matchAs:r,redirect:s.redirect,beforeEnter:s.beforeEnter,meta:s.meta||{},props:null==s.props?{}:s.components?s.props:{default:s.props}};s.children&&s.children.forEach((function(s){var i=r?S(r+"/"+s.path):void 0;e(t,n,a,s,l,i)}));n[l.path]||(t.push(l.path),n[l.path]=l);if(void 0!==s.alias)for(var y=Array.isArray(s.alias)?s.alias:[s.alias],c=0;c<y.length;++c){0;var m={path:y[c],children:s.children};e(t,n,a,m,i,l.path||"/")}p&&(a[p]||(a[p]=l))}(i,r,o,e,s)}));for(var p=0,d=i.length;p<d;p++)"*"===i[p]&&(i.push(i.splice(p,1)[0]),d--,p--);return{pathList:i,pathMap:r,nameMap:o}}function K(e,t){return _(e,[],t)}function J(e,t){var n=X(e),a=n.pathList,s=n.pathMap,i=n.nameMap;function r(e,n,r){var o=$(e,n,!1,t),d=o.name;if(d){var u=i[d];if(!u)return p(null,o);var l=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof o.params&&(o.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in o.params)&&l.indexOf(y)>-1&&(o.params[y]=n.params[y]);return o.path=H(u.path,o.params),p(u,o,r)}if(o.path){o.params={};for(var c=0;c<a.length;c++){var m=a[c],T=s[m];if(Q(T.regex,o.path,o.params))return p(T,o,r)}}return p(null,o)}function o(e,n){var a=e.redirect,s="function"==typeof a?a(m(e,n,null,t)):a;if("string"==typeof s&&(s={path:s}),!s||"object"!=typeof s)return p(null,n);var o=s,d=o.name,u=o.path,l=n.query,y=n.hash,c=n.params;if(l=o.hasOwnProperty("query")?o.query:l,y=o.hasOwnProperty("hash")?o.hash:y,c=o.hasOwnProperty("params")?o.params:c,d){i[d];return r({_normalized:!0,name:d,query:l,hash:y,params:c},void 0,n)}if(u){var T=function(e,t){return x(e,t.parent?t.parent.path:"/",!0)}(u,e);return r({_normalized:!0,path:H(T,c),query:l,hash:y},void 0,n)}return p(null,n)}function p(e,n,a){return e&&e.redirect?o(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:H(n,t.params)});if(a){var s=a.matched,i=s[s.length-1];return t.params=a.params,p(i,t)}return p(null,t)}(0,n,e.matchAs):m(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?i[e]:void 0;X([t||e],a,s,i,n),n&&X(n.alias.map((function(e){return{path:e,children:[t]}})),a,s,i,n)},getRoutes:function(){return a.map((function(e){return s[e]}))},addRoutes:function(e){X(e,a,s,i)}}}function Q(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var s=1,i=a.length;s<i;++s){var r=e.keys[s-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[s]?d(a[s]):a[s])}return!0}var ee=Y&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ae(){return ne}function se(e){return ne=e}var ie=Object.create(null);function re(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=s({},window.history.state);return n.key=ae(),window.history.replaceState(n,"",t),window.addEventListener("popstate",de),function(){window.removeEventListener("popstate",de)}}function oe(e,t,n,a){if(e.app){var s=e.options.scrollBehavior;s&&e.app.$nextTick((function(){var i=function(){var e=ae();if(e)return ie[e]}(),r=s.call(e,t,n,a?i:null);r&&("function"==typeof r.then?r.then((function(e){me(e,i)})).catch((function(e){0})):me(r,i))}))}}function pe(){var e=ae();e&&(ie[e]={x:window.pageXOffset,y:window.pageYOffset})}function de(e){pe(),e.state&&e.state.key&&se(e.state.key)}function ue(e){return ye(e.x)||ye(e.y)}function le(e){return{x:ye(e.x)?e.x:window.pageXOffset,y:ye(e.y)?e.y:window.pageYOffset}}function ye(e){return"number"==typeof e}var ce=/^#\d/;function me(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var s=ce.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(s){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(s,i={x:ye((n=i).x)?n.x:0,y:ye(n.y)?n.y:0})}else ue(e)&&(t=le(e))}else a&&ue(e)&&(t=le(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Te,be=Y&&((-1===(Te=window.navigator.userAgent).indexOf("Android 2.")&&-1===Te.indexOf("Android 4.0")||-1===Te.indexOf("Mobile Safari")||-1!==Te.indexOf("Chrome")||-1!==Te.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fe(e,t){pe();var n=window.history;try{if(t){var a=s({},n.state);a.key=ae(),n.replaceState(a,"",e)}else n.pushState({key:se(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function he(e){fe(e,!0)}function we(e,t,n){var a=function(s){s>=e.length?n():e[s]?t(e[s],(function(){a(s+1)})):a(s+1)};a(0)}var ve={redirected:2,aborted:4,cancelled:8,duplicated:16};function ge(e,t){return Me(e,t,ve.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return xe.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function ke(e,t){return Me(e,t,ve.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Me(e,t,n,a){var s=new Error(a);return s._isRouter=!0,s.from=e,s.to=t,s.type=n,s}var xe=["params","query","hash"];function Se(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ae(e,t){return Se(e)&&e._isRouter&&(null==t||e.type===t)}function _e(e){return function(t,n,a){var s=!1,i=0,r=null;Pe(e,(function(e,t,n,o){if("function"==typeof e&&void 0===e.cid){s=!0,i++;var p,d=Re((function(t){var s;((s=t).__esModule||Ce&&"Module"===s[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:z.extend(t),n.components[o]=t,--i<=0&&a()})),u=Re((function(e){var t="Failed to resolve async component "+o+": "+e;r||(r=Se(e)?e:new Error(t),a(r))}));try{p=e(d,u)}catch(e){u(e)}if(p)if("function"==typeof p.then)p.then(d,u);else{var l=p.component;l&&"function"==typeof l.then&&l.then(d,u)}}})),s||a()}}function Pe(e,t){return Oe(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Oe(e){return Array.prototype.concat.apply([],e)}var Ce="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Re(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var Ie=function(e,t){this.router=e,this.base=function(e){if(!e)if(Y){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=b,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Fe(e,t,n,a){var s=Pe(e,(function(e,a,s,i){var r=function(e,t){"function"!=typeof e&&(e=z.extend(e));return e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,s,i)})):n(r,a,s,i)}));return Oe(a?s.reverse():s)}function Le(e,t){if(t)return function(){return e.apply(t,arguments)}}Ie.prototype.listen=function(e){this.cb=e},Ie.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ie.prototype.onError=function(e){this.errorCbs.push(e)},Ie.prototype.transitionTo=function(e,t,n){var a,s=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var i=this.current;this.confirmTransition(a,(function(){s.updateRoute(a),t&&t(a),s.ensureURL(),s.router.afterHooks.forEach((function(e){e&&e(a,i)})),s.ready||(s.ready=!0,s.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!s.ready&&(Ae(e,ve.redirected)&&i===b||(s.ready=!0,s.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ie.prototype.confirmTransition=function(e,t,n){var a=this,s=this.current;this.pending=e;var i,r,o=function(e){!Ae(e)&&Se(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},p=e.matched.length-1,d=s.matched.length-1;if(w(e,s)&&p===d&&e.matched[p]===s.matched[d])return this.ensureURL(),o(((r=Me(i=s,e,ve.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",r));var u=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),l=u.updated,y=u.deactivated,c=u.activated,m=[].concat(function(e){return Fe(e,"beforeRouteLeave",Le,!0)}(y),this.router.beforeHooks,function(e){return Fe(e,"beforeRouteUpdate",Le)}(l),c.map((function(e){return e.beforeEnter})),_e(c)),T=function(t,n){if(a.pending!==e)return o(ke(s,e));try{t(e,s,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return Me(e,t,ve.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(s,e))):Se(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(ge(s,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};we(m,T,(function(){we(function(e){return Fe(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,s,i){return e(a,s,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),i(e)}))}}(e,n,a)}))}(c).concat(a.router.resolveHooks),T,(function(){if(a.pending!==e)return o(ke(s,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){g(e)}))}))}))},Ie.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ie.prototype.setupListeners=function(){},Ie.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=b,this.pending=null};var De=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Ee(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=be&&n;a&&this.listeners.push(re());var s=function(){var n=e.current,s=Ee(e.base);e.current===b&&s===e._startLocation||e.transitionTo(s,(function(e){a&&oe(t,e,n,!0)}))};window.addEventListener("popstate",s),this.listeners.push((function(){window.removeEventListener("popstate",s)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){fe(S(a.base+e.fullPath)),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){he(S(a.base+e.fullPath)),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Ee(this.base)!==this.current.fullPath){var t=S(this.base+this.current.fullPath);e?fe(t):he(t)}},t.prototype.getCurrentLocation=function(){return Ee(this.base)},t}(Ie);function Ee(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Ve=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Ee(e);if(!/^\/#/.test(t))return window.location.replace(S(e+"/#"+t)),!0}(this.base)||Be()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=be&&t;n&&this.listeners.push(re());var a=function(){var t=e.current;Be()&&e.transitionTo(We(),(function(a){n&&oe(e.router,a,t,!0),be||Ne(a.fullPath)}))},s=be?"popstate":"hashchange";window.addEventListener(s,a),this.listeners.push((function(){window.removeEventListener(s,a)}))}},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Ue(e.fullPath),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Ne(e.fullPath),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;We()!==t&&(e?Ue(t):Ne(t))},t.prototype.getCurrentLocation=function(){return We()},t}(Ie);function Be(){var e=We();return"/"===e.charAt(0)||(Ne("/"+e),!1)}function We(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function qe(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Ue(e){be?fe(qe(e)):window.location.hash=e}function Ne(e){be?he(qe(e)):window.location.replace(qe(e))}var He=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){Ae(e,ve.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ie),$e=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=J(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!be&&!1!==e.fallback,this.fallback&&(t="hash"),Y||(t="abstract"),this.mode=t,t){case"history":this.history=new De(this,e.base);break;case"hash":this.history=new Ve(this,e.base,this.fallback);break;case"abstract":this.history=new He(this,e.base);break;default:0}},ze={currentRoute:{configurable:!0}};function je(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}$e.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},ze.currentRoute.get=function(){return this.history&&this.history.current},$e.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof De||n instanceof Ve){var a=function(e){n.setupListeners(),function(e){var a=n.current,s=t.options.scrollBehavior;be&&s&&"fullPath"in e&&oe(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},$e.prototype.beforeEach=function(e){return je(this.beforeHooks,e)},$e.prototype.beforeResolve=function(e){return je(this.resolveHooks,e)},$e.prototype.afterEach=function(e){return je(this.afterHooks,e)},$e.prototype.onReady=function(e,t){this.history.onReady(e,t)},$e.prototype.onError=function(e){this.history.onError(e)},$e.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},$e.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},$e.prototype.go=function(e){this.history.go(e)},$e.prototype.back=function(){this.go(-1)},$e.prototype.forward=function(){this.go(1)},$e.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},$e.prototype.resolve=function(e,t,n){var a=$(e,t=t||this.history.current,n,this),s=this.match(a,t),i=s.redirectedFrom||s.fullPath;return{location:a,route:s,href:function(e,t,n){var a="hash"===n?"#"+t:t;return e?S(e+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:s}},$e.prototype.getRoutes=function(){return this.matcher.getRoutes()},$e.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==b&&this.history.transitionTo(this.history.getCurrentLocation())},$e.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==b&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties($e.prototype,ze),$e.install=function e(t){if(!e.installed||z!==t){e.installed=!0,z=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",k),t.component("RouterLink",G);var s=t.config.optionMergeStrategies;s.beforeRouteEnter=s.beforeRouteLeave=s.beforeRouteUpdate=s.created}},$e.version="3.5.1",$e.isNavigationFailure=Ae,$e.NavigationFailureType=ve,$e.START_LOCATION=b,Y&&window.Vue&&window.Vue.use($e);var Ge=$e,Ze=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};Ze._withStripped=!0;n(4);function Ye(e,t,n,a,s,i,r,o){var p,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=n,d._compiled=!0),a&&(d.functional=!0),i&&(d._scopeId="data-v-"+i),r?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),s&&s.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=p):s&&(p=o?function(){s.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:s),p)if(d.functional){d._injectStyles=p;var u=d.render;d.render=function(e,t){return p.call(t),u(e,t)}}else{var l=d.beforeCreate;d.beforeCreate=l?[].concat(l,p):[p]}return{exports:e,options:d}}var Xe=Ye({},Ze,[],!1,null,null,null);Xe.options.__file="node_modules/hardhat-docgen/src/App.vue";var Ke=Xe.exports,Je=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};Je._withStripped=!0;var Qe=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Qe._withStripped=!0;var et=n(2),tt=Ye({data:function(){return{repository:et.b,name:et.a}},methods:{openLink(e){window.open(e,"_blank")}}},Qe,[],!1,null,null,null);tt.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";var nt=tt.exports,at=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[t("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};at._withStripped=!0;var st=Ye({},at,[],!1,null,null,null);st.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";var it=st.exports,rt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};rt._withStripped=!0;var ot=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};ot._withStripped=!0;var pt=Ye({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},ot,[],!1,null,null,null);pt.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";var dt=Ye({components:{MemberSection:pt.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map(e=>({...e,desc:this.params[e.name]}))},inputSignature:function(){return`(${this.inputs.map(e=>e.type).join(",")})`},outputs:function(){return(this.json.outputs||[]).map((e,t)=>({...e,desc:this.returns[e.name||"_"+t]}))},outputSignature:function(){return`(${this.outputs.map(e=>e.type).join(",")})`}}},rt,[],!1,null,null,null);dt.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";var ut=dt.exports,lt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};lt._withStripped=!0;var yt=Ye({components:{Member:ut},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},lt,[],!1,null,null,null);yt.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var ct=Ye({components:{Member:ut,MemberSet:yt.exports,HeaderBar:it,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}}},Je,[],!1,null,null,null);ct.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";var mt=ct.exports,Tt=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:this.trees,name:"Sources:"}}),this._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};Tt._withStripped=!0;var bt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};bt._withStripped=!0;var ft=Ye({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},bt,[],!1,null,null,null);ft.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var ht=Ye({components:{Branch:ft.exports,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.split(/(?<=\/)/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},Tt,[],!1,null,null,null);ht.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";var wt=ht.exports;a.a.use(Ge);const vt={"contracts/connectors/loantoken/AdvancedToken.sol:AdvancedToken":{source:"contracts/connectors/loantoken/AdvancedToken.sol",name:"AdvancedToken",title:"Advanced Token contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * AdvancedToken implements standard ERC-20 approval, mint and burn token functionality. Logic (AdvancedToken) is kept aside from storage (AdvancedTokenStorage). * For example, LoanTokenLogicDai contract uses AdvancedToken::_mint() to mint its Loan Dai iTokens.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_spender:"The account address that will be able to spend the tokens.",_value:"The amount of tokens allowed to spend."},notice:"Set an amount as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/connectors/loantoken/AdvancedTokenStorage.sol:AdvancedTokenStorage":{source:"contracts/connectors/loantoken/AdvancedTokenStorage.sol",name:"AdvancedTokenStorage",title:"Advanced Token Storage contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * AdvancedTokenStorage implements standard ERC-20 getters functionality: totalSupply, balanceOf, allowance and some events. iToken logic is divided into several contracts AdvancedToken, AdvancedTokenStorage and LoanTokenBase.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/connectors/loantoken/LoanToken.sol:LoanToken":{source:"contracts/connectors/loantoken/LoanToken.sol",name:"LoanToken",title:"Loan Token contract.",details:"TODO: can I change this proxy to EIP-1822 proxy standard, please.  https://eips.ethereum.org/EIPS/eip-1822. It's really hard to work with this.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * A loan token (iToken) is created as a proxy to an upgradable token contract. * Examples of loan tokens on Sovryn are iRBTC, iDOC, iUSDT, iBPro, iSOV (near future). * Lenders receive iTokens that collect interest from the lending pool which they can redeem by withdrawing them. The i in iToken stands for interest. * Do not confuse iTokens with underlying tokens. iDOC is an iToken (loan token) whilest DOC is the underlying token (currency).",constructor:{inputs:[{internalType:"address",name:"_newOwner",type:"address"},{internalType:"address",name:"_newTarget",type:"address"},{internalType:"address",name:"_sovrynContractAddress",type:"address"},{internalType:"address",name:"_wrbtcTokenAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address,string,string)":{constant:!1,inputs:[{internalType:"address",name:"_loanTokenAddress",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"TODO: add check for double init.  idk but init usually can be called only once.",params:{_loanTokenAddress:"The address of the pointed loan token instance.",_name:"The ERC20 token name.",_symbol:"The ERC20 token symbol."},notice:"Public owner cloner for pointed loan token.  Sets ERC20 parameters of the token."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setTarget(address)":{constant:!1,inputs:[{internalType:"address",name:"_newTarget",type:"address"}],name:"setTarget",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Calls internal setter.",params:{_newTarget:"The address of the new target contract instance."},notice:"Public owner setter for target address."},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/connectors/loantoken/LoanTokenBase.sol:LoanTokenBase":{source:"contracts/connectors/loantoken/LoanTokenBase.sol",name:"LoanTokenBase",title:"Loan Token Base contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * Specific loan related storage for iTokens. * An loan token or iToken is a representation of a user funds in the pool and the interest they've earned. The redemption value of iTokens continually increase from the accretion of interest paid into the lending pool by borrowers. The user can sell iTokens to exit its position. The user might potentially use them as collateral wherever applicable. * There are three main tokens in the bZx system, iTokens, pTokens, and BZRX tokens. The bZx system of lending and borrowing depends on iTokens and pTokens, and when users lend or borrow money on bZx, their crypto assets go into or come out of global liquidity pools, which are pools of funds shared between many different exchanges. When lenders supply funds into the global liquidity pools, they automatically receive iTokens; When users borrow money to open margin trading positions, they automatically receive pTokens. The system is also designed to use the BZRX tokens, which are only used to pay fees on the network currently.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/connectors/loantoken/LoanTokenLogicStandard.sol:LoanTokenLogicStandard":{source:"contracts/connectors/loantoken/LoanTokenLogicStandard.sol",name:"LoanTokenLogicStandard",title:"Loan Token Logic Standard contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * Logic around loan tokens (iTokens) required to operate borrowing, and margin trading financial processes. * The user provides funds to the lending pool using the mint function and withdraws funds from the lending pool using the burn function. Mint and burn refer to minting and burning loan tokens. Loan tokens represent a share of the pool and gather interest over time. * Interest rates are determined by supply and demand. When a lender deposits funds, the interest rates go down. When a trader borrows funds, the interest rates go up. Fulcrum uses a simple linear interest rate formula of the form y = mx + b. The interest rate starts at 1% when loans aren't being utilized and scales up to 40% when all the funds in the loan pool are being borrowed. * The borrow rate is determined at the time of the loan and represents the net contribution of each borrower. Each borrower's interest contribution is determined by the utilization rate of the pool and is netted against all prior borrows. This means that the total amount of interest flowing into the lending pool is not directly changed by lenders entering or exiting the pool. The entrance or exit of lenders only impacts how the interest payments are split up. * For example, if there are 2 lenders with equal holdings each earning 5% APR, but one of the lenders leave, then the remaining lender will earn 10% APR since the interest payments don't have to be split between two individuals.",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetEarlyAccessToken(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetEarlyAccessToken",type:"event"},"SetTransactionLimits(address[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"addresses",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"SetTransactionLimits",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"VERSION()":{constant:!0,inputs:[],name:"VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"_supplyInterestRate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetBorrow",type:"uint256"},{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"_supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetBorrow:"The amount of loan tokens on debt.",assetSupply:"The amount of loan tokens supplied."},return:"The next supply interest adjustment.",notice:"Compute the next supply interest adjustment."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_spender:"The account address that will be able to spend the tokens.",_value:"The amount of tokens allowed to spend."},notice:"Set an amount as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"assetBalanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"assetBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The user's balance of underlying token.",notice:"Get loan token balance."},"avgBorrowInterestRate()":{constant:!0,inputs:[],name:"avgBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The average borrow interest.",notice:"Wrapper for average borrow interest."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bytes",name:"",type:"bytes"}],name:"borrow",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{borrower:"The one paying for the collateral.",collateralTokenAddress:"The address of the token to be used as  collateral. Cannot be the loan token address.",collateralTokenSent:"The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).",initialLoanDuration:"The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.",loanId:"The ID of the loan, 0 for a new loan.",receiver:"The one receiving the withdrawn amount.",withdrawAmount:"The amount to be withdrawn (actually borrowed)."},return:"New principal and new collateral added to loan.",notice:"Borrow funds from the pool. The underlying loan token may not be used as collateral."},"borrowInterestRate()":{constant:!0,inputs:[],name:"borrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The borrow interest rate.",notice:"Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans."},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"burnAmount",type:"uint256"}],name:"burn",outputs:[{internalType:"uint256",name:"loanAmountPaid",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{burnAmount:"The amount of loan tokens to redeem.",receiver:"The account getting the minted tokens."},return:"The amount of underlying tokens payed to lender.",notice:"Burn loan token wrapper. Adds a pay-out transfer after calling low level _burnToken function. In order to withdraw funds to the pool, call burn on the respective loan token contract. This will burn your loan tokens and send you the underlying token in exchange."},"changeLoanTokenNameAndSymbol(string,string)":{constant:!1,inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"changeLoanTokenNameAndSymbol",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the loan token.",_symbol:"The new symbol of the loan token."},notice:"Update the loan token parameters."},"checkPause(string)":{constant:!0,inputs:[{internalType:"string",name:"funcId",type:"string"}],name:"checkPause",outputs:[{internalType:"bool",name:"isPaused",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Used to read externally from the smart contract to see if a  function is paused.",params:{funcId:"The function ID, the selector."},return:"isPaused Whether the function is paused: true or false.",notice:"Check whether a function is paused."},"checkpointPrice(address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"}],name:"checkpointPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_user:"The user account as the mapping index."},return:"The price on the checkpoint for this user.",notice:"Getter for the price checkpoint mapping."},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"collateralTokens",type:"address[]"},{internalType:"bool[]",name:"isTorqueLoans",type:"bool[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{collateralTokens:"The array of collateral tokens.",isTorqueLoans:"Whether the loan is a torque loan."},notice:"Disable loan token parameters."},"earlyAccessToken()":{constant:!0,inputs:[],name:"earlyAccessToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getBorrowAmountForDeposit(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getBorrowAmountForDeposit",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",depositAmount:"The amount of deposit.",initialLoanDuration:"The duration of the loan."},return:"The amount of borrow allowed.",notice:"Calculate the borrow allowed for a given deposit.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getDepositAmountForBorrow(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getDepositAmountForBorrow",outputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of borrow.",collateralTokenAddress:"The token address of collateral.",initialLoanDuration:"The duration of the loan."},return:"The amount of deposit required.",notice:"Calculate the deposit required to a given borrow.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getEstimatedMarginDetails(uint256,uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getEstimatedMarginDetails",outputs:[{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanTokenSent:"The number of loan tokens provided by the user."},return:"The principal, the collateral and the interestRate.",notice:"Get margin information on a trade."},"getMaxEscrowAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"}],name:"getMaxEscrowAmount",outputs:[{internalType:"uint256",name:"maxEscrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"maxEscrowAmount = liquidity * (100 - interestForDuration) / 100",params:{leverageAmount:"The chosen multiplier with 18 decimals."},notice:"Compute the maximum deposit amount under current market conditions."},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"marginTrade(bytes32,uint256,uint256,uint256,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"marginTrade",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanId:"The ID of the loan, 0 for a new loan.",loanTokenSent:"The number of loan tokens provided by the user.",trader:"The account that performs this trade."},return:"New principal and new collateral added to trade.",notice:"Borrow and immediately get into a position.\t * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.\t * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.\t * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.\t * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract."},"marketLiquidity()":{constant:!0,inputs:[],name:"marketLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The market liquidity.",notice:"Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{depositAmount:"The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).",receiver:"The account getting the minted tokens."},return:"The amount of loan tokens minted.",notice:"Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"nextBorrowInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],name:"nextBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of tokens to borrow."},return:"The next borrow interest rate.",notice:"Public wrapper for internal call."},"nextSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"supplyAmount",type:"uint256"}],name:"nextSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{supplyAmount:"The amount of tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of tokens to the pool.",notice:"Get interest rate w/ added supply."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pauser()":{constant:!0,inputs:[],name:"pauser",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"profitOf(address)":{constant:!0,inputs:[{internalType:"address",name:"user",type:"address"}],name:"profitOf",outputs:[{internalType:"int256",name:"",type:"int256"}],payable:!1,stateMutability:"view",type:"function",params:{user:"The user address."},return:"The profit of a user.",notice:"Wrapper for internal _profitOf low level function."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the account to grant admin permissions."},notice:"Set admin account."},"setDemandCurve(uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_baseRate",type:"uint256"},{internalType:"uint256",name:"_rateMultiplier",type:"uint256"},{internalType:"uint256",name:"_lowUtilBaseRate",type:"uint256"},{internalType:"uint256",name:"_lowUtilRateMultiplier",type:"uint256"},{internalType:"uint256",name:"_targetLevel",type:"uint256"},{internalType:"uint256",name:"_kinkLevel",type:"uint256"},{internalType:"uint256",name:"_maxScaleRate",type:"uint256"}],name:"setDemandCurve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These params should be percentages represented  like so: 5% = 5000000000000000000 /// 18 digits precision. rateMultiplier + baseRate can't exceed 100%\t * To maintain a healthy credit score, it's important to keep your credit utilization rate (CUR) low (_lowUtilBaseRate). In general you don't want your CUR to exceed 30%, but increasingly financial experts are recommending that you don't want to go above 10% if you really want an excellent credit score.\t * Interest rates tend to cluster around the kink level of a kinked interest rate model. More info at https://arxiv.org/pdf/2006.13922.pdf and https://compound.finance/governance/proposals/12",params:{_baseRate:"The interest rate.",_kinkLevel:"The level that interest rates cluster on kinked model.",_lowUtilBaseRate:"The credit utilization rate (CUR) low value.",_lowUtilRateMultiplier:"The precision multiplier for low util base rate.",_maxScaleRate:"The maximum rate of the scale.",_rateMultiplier:"The precision multiplier for base rate.",_targetLevel:"The target level."},notice:"Set loan token parameters about the demand curve."},"setEarlyAccessToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_earlyAccessTokenAddress",type:"address"}],name:"setEarlyAccessToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_earlyAccessTokenAddress:"The early access token."},notice:"Set early access token."},"setPauser(address)":{constant:!1,inputs:[{internalType:"address",name:"_pauser",type:"address"}],name:"setPauser",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_pauser:"The address of the account to grant pause permissions."},notice:"Set pauser account."},"setTransactionLimits(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"addresses",type:"address[]"},{internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"setTransactionLimits",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addresses:"The token addresses.",limits:"The limit denominated in the currency of the token address."},notice:"Set the transaction limit per token address."},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[],bool)":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"},{internalType:"bool",name:"areTorqueLoans",type:"bool"}],name:"setupLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{areTorqueLoans:"Whether the loan is a torque loan.",loanParamsList:"The array of loan parameters."},notice:"Set loan token parameters."},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supplyInterestRate()":{constant:!0,inputs:[],name:"supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Interest that lenders are currently receiving when supplying to the pool.",notice:"Get interest rate."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"toggleFunctionPause(string,bool)":{constant:!1,inputs:[{internalType:"string",name:"funcId",type:"string"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"toggleFunctionPause",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:'Combining the hash of "iToken_FunctionPause" string and a function  selector gets a slot to write a flag for pause state.',params:{funcId:"The ID of a function, the selector.",isPaused:"true/false value of the flag."},notice:"Set the pause flag for a function to true or false."},"tokenPrice()":{constant:!0,inputs:[],name:"tokenPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The loan token price.",notice:"Loan token price calculation considering unpaid interests."},"totalAssetBorrow()":{constant:!0,inputs:[],name:"totalAssetBorrow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total amount of loan tokens on debt.",notice:"Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000."},"totalAssetSupply()":{constant:!0,inputs:[],name:"totalAssetSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Wrapper for internal _totalAssetSupply function.",return:"The total amount of loan tokens on supply.",notice:"Get the total amount of loan tokens on supply."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"totalSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"totalSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetSupply:"The amount of loan tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool.",notice:"Get interest rate w/ added supply assets."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_to:"The recipient of the tokens.",_value:"The amount of tokens sent."},return:"Success true/false.",notice:"Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",return:"A boolean value indicating whether the operation succeeded.",notice:"Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/connectors/loantoken/LoanTokenLogicWrbtc.sol:LoanTokenLogicWrbtc":{source:"contracts/connectors/loantoken/LoanTokenLogicWrbtc.sol",name:"LoanTokenLogicWrbtc",title:"Loan Token Logic for wrBTC contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * Wrapped RSK BTC (wrBTC) is the ERC-20 token pegged to Bitcoin. This contract manages loan functionalities deployed as un upgradable logic instance.",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetEarlyAccessToken(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetEarlyAccessToken",type:"event"},"SetTransactionLimits(address[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"addresses",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"SetTransactionLimits",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"VERSION()":{constant:!0,inputs:[],name:"VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"_supplyInterestRate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetBorrow",type:"uint256"},{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"_supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetBorrow:"The amount of loan tokens on debt.",assetSupply:"The amount of loan tokens supplied."},return:"The next supply interest adjustment.",notice:"Compute the next supply interest adjustment."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_spender:"The account address that will be able to spend the tokens.",_value:"The amount of tokens allowed to spend."},notice:"Set an amount as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"assetBalanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"assetBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The user's balance of underlying token.",notice:"Get loan token balance."},"avgBorrowInterestRate()":{constant:!0,inputs:[],name:"avgBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The average borrow interest.",notice:"Wrapper for average borrow interest."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bytes",name:"",type:"bytes"}],name:"borrow",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{borrower:"The one paying for the collateral.",collateralTokenAddress:"The address of the token to be used as  collateral. Cannot be the loan token address.",collateralTokenSent:"The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).",initialLoanDuration:"The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.",loanId:"The ID of the loan, 0 for a new loan.",receiver:"The one receiving the withdrawn amount.",withdrawAmount:"The amount to be withdrawn (actually borrowed)."},return:"New principal and new collateral added to loan.",notice:"Borrow funds from the pool. The underlying loan token may not be used as collateral."},"borrowInterestRate()":{constant:!0,inputs:[],name:"borrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The borrow interest rate.",notice:"Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans."},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"burnAmount",type:"uint256"}],name:"burn",outputs:[{internalType:"uint256",name:"loanAmountPaid",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{burnAmount:"The amount of loan tokens to redeem.",receiver:"The account getting the minted tokens."},return:"The amount of underlying tokens payed to lender.",notice:"Burn loan token wrapper. Adds a pay-out transfer after calling low level _burnToken function. In order to withdraw funds to the pool, call burn on the respective loan token contract. This will burn your loan tokens and send you the underlying token in exchange."},"burnToBTC(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"burnAmount",type:"uint256"}],name:"burnToBTC",outputs:[{internalType:"uint256",name:"loanAmountPaid",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"External wrapper that calls _burnToken internal function  and withdraws rBTC value.",params:{receiver:"The address to get the rBTC value."},return:"mintAmount The amount of tokens minted.",notice:"Burn wrBTC tokens."},"changeLoanTokenNameAndSymbol(string,string)":{constant:!1,inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"changeLoanTokenNameAndSymbol",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the loan token.",_symbol:"The new symbol of the loan token."},notice:"Update the loan token parameters."},"checkPause(string)":{constant:!0,inputs:[{internalType:"string",name:"funcId",type:"string"}],name:"checkPause",outputs:[{internalType:"bool",name:"isPaused",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Used to read externally from the smart contract to see if a  function is paused.",params:{funcId:"The function ID, the selector."},return:"isPaused Whether the function is paused: true or false.",notice:"Check whether a function is paused."},"checkpointPrice(address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"}],name:"checkpointPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_user:"The user account as the mapping index."},return:"The price on the checkpoint for this user.",notice:"Getter for the price checkpoint mapping."},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"collateralTokens",type:"address[]"},{internalType:"bool[]",name:"isTorqueLoans",type:"bool[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{collateralTokens:"The array of collateral tokens.",isTorqueLoans:"Whether the loan is a torque loan."},notice:"Disable loan token parameters."},"earlyAccessToken()":{constant:!0,inputs:[],name:"earlyAccessToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getBorrowAmountForDeposit(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getBorrowAmountForDeposit",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",depositAmount:"The amount of deposit.",initialLoanDuration:"The duration of the loan."},return:"The amount of borrow allowed.",notice:"Calculate the borrow allowed for a given deposit.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getDepositAmountForBorrow(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getDepositAmountForBorrow",outputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of borrow.",collateralTokenAddress:"The token address of collateral.",initialLoanDuration:"The duration of the loan."},return:"The amount of deposit required.",notice:"Calculate the deposit required to a given borrow.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getEstimatedMarginDetails(uint256,uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getEstimatedMarginDetails",outputs:[{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanTokenSent:"The number of loan tokens provided by the user."},return:"The principal, the collateral and the interestRate.",notice:"Get margin information on a trade."},"getMaxEscrowAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"}],name:"getMaxEscrowAmount",outputs:[{internalType:"uint256",name:"maxEscrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"maxEscrowAmount = liquidity * (100 - interestForDuration) / 100",params:{leverageAmount:"The chosen multiplier with 18 decimals."},notice:"Compute the maximum deposit amount under current market conditions."},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"marginTrade(bytes32,uint256,uint256,uint256,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"marginTrade",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanId:"The ID of the loan, 0 for a new loan.",loanTokenSent:"The number of loan tokens provided by the user.",trader:"The account that performs this trade."},return:"New principal and new collateral added to trade.",notice:"Borrow and immediately get into a position.\t * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.\t * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.\t * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.\t * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract."},"marketLiquidity()":{constant:!0,inputs:[],name:"marketLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The market liquidity.",notice:"Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{depositAmount:"The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).",receiver:"The account getting the minted tokens."},return:"The amount of loan tokens minted.",notice:"Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited."},"mintWithBTC(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"mintWithBTC",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",details:"External wrapper that calls _mintToken internal function.",params:{receiver:"The address to get the minted tokens."},return:"mintAmount The amount of tokens minted.",notice:"Mint wrBTC tokens."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"nextBorrowInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],name:"nextBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of tokens to borrow."},return:"The next borrow interest rate.",notice:"Public wrapper for internal call."},"nextSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"supplyAmount",type:"uint256"}],name:"nextSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{supplyAmount:"The amount of tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of tokens to the pool.",notice:"Get interest rate w/ added supply."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pauser()":{constant:!0,inputs:[],name:"pauser",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"profitOf(address)":{constant:!0,inputs:[{internalType:"address",name:"user",type:"address"}],name:"profitOf",outputs:[{internalType:"int256",name:"",type:"int256"}],payable:!1,stateMutability:"view",type:"function",params:{user:"The user address."},return:"The profit of a user.",notice:"Wrapper for internal _profitOf low level function."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the account to grant admin permissions."},notice:"Set admin account."},"setDemandCurve(uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_baseRate",type:"uint256"},{internalType:"uint256",name:"_rateMultiplier",type:"uint256"},{internalType:"uint256",name:"_lowUtilBaseRate",type:"uint256"},{internalType:"uint256",name:"_lowUtilRateMultiplier",type:"uint256"},{internalType:"uint256",name:"_targetLevel",type:"uint256"},{internalType:"uint256",name:"_kinkLevel",type:"uint256"},{internalType:"uint256",name:"_maxScaleRate",type:"uint256"}],name:"setDemandCurve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These params should be percentages represented  like so: 5% = 5000000000000000000 /// 18 digits precision. rateMultiplier + baseRate can't exceed 100%\t * To maintain a healthy credit score, it's important to keep your credit utilization rate (CUR) low (_lowUtilBaseRate). In general you don't want your CUR to exceed 30%, but increasingly financial experts are recommending that you don't want to go above 10% if you really want an excellent credit score.\t * Interest rates tend to cluster around the kink level of a kinked interest rate model. More info at https://arxiv.org/pdf/2006.13922.pdf and https://compound.finance/governance/proposals/12",params:{_baseRate:"The interest rate.",_kinkLevel:"The level that interest rates cluster on kinked model.",_lowUtilBaseRate:"The credit utilization rate (CUR) low value.",_lowUtilRateMultiplier:"The precision multiplier for low util base rate.",_maxScaleRate:"The maximum rate of the scale.",_rateMultiplier:"The precision multiplier for base rate.",_targetLevel:"The target level."},notice:"Set loan token parameters about the demand curve."},"setEarlyAccessToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_earlyAccessTokenAddress",type:"address"}],name:"setEarlyAccessToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_earlyAccessTokenAddress:"The early access token."},notice:"Set early access token."},"setPauser(address)":{constant:!1,inputs:[{internalType:"address",name:"_pauser",type:"address"}],name:"setPauser",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_pauser:"The address of the account to grant pause permissions."},notice:"Set pauser account."},"setTransactionLimits(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"addresses",type:"address[]"},{internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"setTransactionLimits",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addresses:"The token addresses.",limits:"The limit denominated in the currency of the token address."},notice:"Set the transaction limit per token address."},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[],bool)":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"},{internalType:"bool",name:"areTorqueLoans",type:"bool"}],name:"setupLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{areTorqueLoans:"Whether the loan is a torque loan.",loanParamsList:"The array of loan parameters."},notice:"Set loan token parameters."},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supplyInterestRate()":{constant:!0,inputs:[],name:"supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Interest that lenders are currently receiving when supplying to the pool.",notice:"Get interest rate."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"toggleFunctionPause(string,bool)":{constant:!1,inputs:[{internalType:"string",name:"funcId",type:"string"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"toggleFunctionPause",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:'Combining the hash of "iToken_FunctionPause" string and a function  selector gets a slot to write a flag for pause state.',params:{funcId:"The ID of a function, the selector.",isPaused:"true/false value of the flag."},notice:"Set the pause flag for a function to true or false."},"tokenPrice()":{constant:!0,inputs:[],name:"tokenPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The loan token price.",notice:"Loan token price calculation considering unpaid interests."},"totalAssetBorrow()":{constant:!0,inputs:[],name:"totalAssetBorrow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total amount of loan tokens on debt.",notice:"Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000."},"totalAssetSupply()":{constant:!0,inputs:[],name:"totalAssetSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Wrapper for internal _totalAssetSupply function.",return:"The total amount of loan tokens on supply.",notice:"Get the total amount of loan tokens on supply."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"totalSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"totalSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetSupply:"The amount of loan tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool.",notice:"Get interest rate w/ added supply assets."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_to:"The recipient of the tokens.",_value:"The amount of tokens sent."},return:"Success true/false.",notice:"Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",return:"A boolean value indicating whether the operation succeeded.",notice:"Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/connectors/loantoken/LoanTokenSettingsLowerAdmin.sol:LoanTokenSettingsLowerAdmin":{source:"contracts/connectors/loantoken/LoanTokenSettingsLowerAdmin.sol",name:"LoanTokenSettingsLowerAdmin",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetEarlyAccessToken(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetEarlyAccessToken",type:"event"},"SetTransactionLimits(address[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"addresses",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"SetTransactionLimits",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_spender:"The account address that will be able to spend the tokens.",_value:"The amount of tokens allowed to spend."},notice:"Set an amount as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"changeLoanTokenNameAndSymbol(string,string)":{constant:!1,inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"changeLoanTokenNameAndSymbol",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the loan token.",_symbol:"The new symbol of the loan token."},notice:"Update the loan token parameters."},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"collateralTokens",type:"address[]"},{internalType:"bool[]",name:"isTorqueLoans",type:"bool[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{collateralTokens:"The array of collateral tokens.",isTorqueLoans:"Whether the loan is a torque loan."},notice:"Disable loan token parameters."},"earlyAccessToken()":{constant:!0,inputs:[],name:"earlyAccessToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pauser()":{constant:!0,inputs:[],name:"pauser",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the account to grant admin permissions."},notice:"Set admin account."},"setDemandCurve(uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_baseRate",type:"uint256"},{internalType:"uint256",name:"_rateMultiplier",type:"uint256"},{internalType:"uint256",name:"_lowUtilBaseRate",type:"uint256"},{internalType:"uint256",name:"_lowUtilRateMultiplier",type:"uint256"},{internalType:"uint256",name:"_targetLevel",type:"uint256"},{internalType:"uint256",name:"_kinkLevel",type:"uint256"},{internalType:"uint256",name:"_maxScaleRate",type:"uint256"}],name:"setDemandCurve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These params should be percentages represented  like so: 5% = 5000000000000000000 /// 18 digits precision. rateMultiplier + baseRate can't exceed 100%\t * To maintain a healthy credit score, it's important to keep your credit utilization rate (CUR) low (_lowUtilBaseRate). In general you don't want your CUR to exceed 30%, but increasingly financial experts are recommending that you don't want to go above 10% if you really want an excellent credit score.\t * Interest rates tend to cluster around the kink level of a kinked interest rate model. More info at https://arxiv.org/pdf/2006.13922.pdf and https://compound.finance/governance/proposals/12",params:{_baseRate:"The interest rate.",_kinkLevel:"The level that interest rates cluster on kinked model.",_lowUtilBaseRate:"The credit utilization rate (CUR) low value.",_lowUtilRateMultiplier:"The precision multiplier for low util base rate.",_maxScaleRate:"The maximum rate of the scale.",_rateMultiplier:"The precision multiplier for base rate.",_targetLevel:"The target level."},notice:"Set loan token parameters about the demand curve."},"setEarlyAccessToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_earlyAccessTokenAddress",type:"address"}],name:"setEarlyAccessToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_earlyAccessTokenAddress:"The early access token."},notice:"Set early access token."},"setPauser(address)":{constant:!1,inputs:[{internalType:"address",name:"_pauser",type:"address"}],name:"setPauser",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_pauser:"The address of the account to grant pause permissions."},notice:"Set pauser account."},"setTransactionLimits(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"addresses",type:"address[]"},{internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"setTransactionLimits",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addresses:"The token addresses.",limits:"The limit denominated in the currency of the token address."},notice:"Set the transaction limit per token address."},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[],bool)":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"},{internalType:"bool",name:"areTorqueLoans",type:"bool"}],name:"setupLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{areTorqueLoans:"Whether the loan is a torque loan.",loanParamsList:"The array of loan parameters."},notice:"Set loan token parameters."},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"toggleFunctionPause(string,bool)":{constant:!1,inputs:[{internalType:"string",name:"funcId",type:"string"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"toggleFunctionPause",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:'Combining the hash of "iToken_FunctionPause" string and a function  selector gets a slot to write a flag for pause state.',params:{funcId:"The ID of a function, the selector.",isPaused:"true/false value of the flag."},notice:"Set the pause flag for a function to true or false."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/connectors/loantoken/Pausable.sol:Pausable":{source:"contracts/connectors/loantoken/Pausable.sol",name:"Pausable",title:"Pausable contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * The contract implements pausable functionality by reading on slots the pause state of contract functions."},"contracts/connectors/loantoken/interfaces/FeedsLike.sol:FeedsLike":{source:"contracts/connectors/loantoken/interfaces/FeedsLike.sol",name:"FeedsLike",methods:{"queryRate(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"}],name:"queryRate",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"precision",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/connectors/loantoken/interfaces/ProtocolLike.sol:ProtocolLike":{source:"contracts/connectors/loantoken/interfaces/ProtocolLike.sol",name:"ProtocolLike",methods:{"borrowOrTradeFromPool(bytes32,bytes32,bool,uint256,address[4],uint256[5],bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"bool",name:"isTorqueLoan",type:"bool"},{internalType:"uint256",name:"initialMargin",type:"uint256"},{internalType:"address[4]",name:"sentAddresses",type:"address[4]"},{internalType:"uint256[5]",name:"sentValues",type:"uint256[5]"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"borrowOrTradeFromPool",outputs:[{internalType:"uint256",name:"newPrincipal",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},"getBorrowAmount(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralTokenAmount",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getBorrowAmount",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getEstimatedMarginExposure(address,address,uint256,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"newPrincipal",type:"uint256"}],name:"getEstimatedMarginExposure",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getLenderInterestData(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getLenderInterestData",outputs:[{internalType:"uint256",name:"interestPaid",type:"uint256"},{internalType:"uint256",name:"interestPaidDate",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestUnPaid",type:"uint256"},{internalType:"uint256",name:"interestFeePercent",type:"uint256"},{internalType:"uint256",name:"principalTotal",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getRequiredCollateral(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"newPrincipal",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getRequiredCollateral",outputs:[{internalType:"uint256",name:"collateralAmountRequired",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getSwapExpectedReturn(address,address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"}],name:"getSwapExpectedReturn",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getTotalPrincipal(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getTotalPrincipal",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"loanPool",type:"address"}],name:"isLoanPool",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAccruedInterest(address)":{constant:!1,inputs:[{internalType:"address",name:"loanToken",type:"address"}],name:"withdrawAccruedInterest",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol:ProtocolSettingsLike":{source:"contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol",name:"ProtocolSettingsLike",methods:{"disableLoanParams(bytes32[])":{constant:!1,inputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[])":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"}],name:"setupLoanParams",outputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/core/Objects.sol:Objects":{source:"contracts/core/Objects.sol",name:"Objects",title:"Objects contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract inherints and aggregates several structures needed to handle loans on the protocol."},"contracts/core/Protocol.sol:sovrynProtocol":{source:"contracts/core/Protocol.sol",name:"sovrynProtocol",title:"Sovryn Protocol contract.",details:"TODO: can I change this proxy to EIP-1822 proxy standard, please.  https://eips.ethereum.org/EIPS/eip-1822",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the proxy functionality to deploy Protocol anchor and logic apart, turning it upgradable.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTarget(string)":{constant:!0,inputs:[{internalType:"string",name:"sig",type:"string"}],name:"getTarget",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{sig:"The signature."},return:"The address for a given signature.",notice:"External getter for target addresses."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"replaceContract(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"replaceContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The target addresses."},notice:"External owner target initializer."},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setTargets(string[],address[])":{constant:!1,inputs:[{internalType:"string[]",name:"sigsArr",type:"string[]"},{internalType:"address[]",name:"targetsArr",type:"address[]"}],name:"setTargets",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{sigsArr:"The array of signatures.",targetsArr:"The array of addresses."},notice:"External owner setter for target addresses."},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/core/State.sol:State":{source:"contracts/core/State.sol",name:"State",title:"State contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage values of the Protocol.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/core/objects/LenderInterestStruct.sol:LenderInterestStruct":{source:"contracts/core/objects/LenderInterestStruct.sol",name:"LenderInterestStruct",title:"The Lender Interest.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage structure of the Lender Interest."},"contracts/core/objects/LoanInterestStruct.sol:LoanInterestStruct":{source:"contracts/core/objects/LoanInterestStruct.sol",name:"LoanInterestStruct",title:"The Loan Interest.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage structure of the Loan Interest."},"contracts/core/objects/LoanParamsStruct.sol:LoanParamsStruct":{source:"contracts/core/objects/LoanParamsStruct.sol",name:"LoanParamsStruct",title:"The Loan Parameters.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage structure of the Loan Parameters."},"contracts/core/objects/LoanStruct.sol:LoanStruct":{source:"contracts/core/objects/LoanStruct.sol",name:"LoanStruct",title:"The Loan Object.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage structure of the Loan Object."},"contracts/core/objects/OrderStruct.sol:OrderStruct":{source:"contracts/core/objects/OrderStruct.sol",name:"OrderStruct",title:"The Loan Order.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the storage structure of the Loan Order."},"contracts/escrow/Escrow.sol:Escrow":{source:"contracts/escrow/Escrow.sol",name:"Escrow",title:"A holding contract for Sovryn Ethereum Pool to accept SOV Token.",author:"Franklin Richards - powerhousefrank@protonmail.com",notice:"You can use this contract for deposit of SOV tokens for some time and withdraw later.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_multisig",type:"address"},{internalType:"uint256",name:"_releaseTime",type:"uint256"},{internalType:"uint256",name:"_depositLimit",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"DepositLimitReached()":{anonymous:!1,inputs:[],name:"DepositLimitReached",type:"event"},"EscrowActivated()":{anonymous:!1,inputs:[],name:"EscrowActivated",type:"event"},"EscrowFundExpired()":{anonymous:!1,inputs:[],name:"EscrowFundExpired",type:"event"},"EscrowInHoldingState()":{anonymous:!1,inputs:[],name:"EscrowInHoldingState",type:"event"},"EscrowInWithdrawState()":{anonymous:!1,inputs:[],name:"EscrowInWithdrawState",type:"event"},"NewMultisig(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newMultisig",type:"address"}],name:"NewMultisig",type:"event"},"TokenDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDeposit",type:"event"},"TokenDepositByMultisig(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDepositByMultisig",type:"event"},"TokenDepositLimitUpdated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_depositLimit",type:"uint256"}],name:"TokenDepositLimitUpdated",type:"event"},"TokenReleaseUpdated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_releaseTimestamp",type:"uint256"}],name:"TokenReleaseUpdated",type:"event"},"TokenWithdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenWithdraw",type:"event"},"TokenWithdrawByMultisig(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenWithdrawByMultisig",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"changeStateToHolding()":{constant:!1,inputs:[],name:"changeStateToHolding",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Once called, the contract no longer accepts any more deposits. The multisig can now withdraw tokens from the contract after the contract is in Holding State.",notice:"Update contract state to Holding."},"depositLimit()":{constant:!0,inputs:[],name:"depositLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"depositTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The contract has to be approved by the user inorder for this function to work. These tokens can be withdrawn/transferred during Holding State by the Multisig.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract by User."},"depositTokensByMultisig(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokensByMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The contract has to be approved by the multisig inorder for this function to work. Once the token deposit is higher than the total deposits done, the contract state is changed to Withdraw.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract by the Multisig."},"getUserBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"_addr The user address whose balance has to be checked.",notice:"Function to read the current token balance of a particular user."},"init()":{constant:!1,inputs:[],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Without calling this function, the contract will not start accepting tokens.",notice:"This function is called once after deployment for starting the deposit action."},"multisig()":{constant:!0,inputs:[],name:"multisig",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"releaseTime()":{constant:!0,inputs:[],name:"releaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"status()":{constant:!0,inputs:[],name:"status",outputs:[{internalType:"enum Escrow.Status",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"totalDeposit()":{constant:!0,inputs:[],name:"totalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"updateDepositLimit(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_newDepositLimit",type:"uint256"}],name:"updateDepositLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"IMPORTANT: Should not decrease than already deposited.",params:{_newDepositLimit:"The new deposit limit."},notice:"Update Deposit Limit."},"updateMultisig(address)":{constant:!1,inputs:[{internalType:"address",name:"_newMultisig",type:"address"}],name:"updateMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newMultisig:"The new owner of the tokens & contract."},notice:"Update Multisig."},"updateReleaseTimestamp(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_newReleaseTime",type:"uint256"}],name:"updateReleaseTimestamp",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Zero is also a valid timestamp, if the release time is not scheduled yet.",params:{_newReleaseTime:"The new release timestamp for token release."},notice:"Update Release Timestamp."},"withdrawTokens()":{constant:!1,inputs:[],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only works after the contract state is in Withdraw.",notice:"Withdraws token from the contract by User."},"withdrawTokensByMultisig(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawTokensByMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can only be called after the token state is changed to Holding.",params:{_receiverAddress:"The address where the tokens has to be transferred. Zero address if the withdraw is to be done in Multisig."},notice:"Withdraws all token from the contract by Multisig."}}},"contracts/escrow/EscrowReward.sol:EscrowReward":{source:"contracts/escrow/EscrowReward.sol",name:"EscrowReward",title:"A reward distribution contract for Sovryn Ethereum Pool Escrow Contract.",author:"Franklin Richards - powerhousefrank@protonmail.com",notice:"Multisig can use this contract for depositing of Reward tokens based on the total token deposit.",constructor:{inputs:[{internalType:"address",name:"_lockedSOV",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_multisig",type:"address"},{internalType:"uint256",name:"_releaseTime",type:"uint256"},{internalType:"uint256",name:"_depositLimit",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"DepositLimitReached()":{anonymous:!1,inputs:[],name:"DepositLimitReached",type:"event"},"EscrowActivated()":{anonymous:!1,inputs:[],name:"EscrowActivated",type:"event"},"EscrowFundExpired()":{anonymous:!1,inputs:[],name:"EscrowFundExpired",type:"event"},"EscrowInHoldingState()":{anonymous:!1,inputs:[],name:"EscrowInHoldingState",type:"event"},"EscrowInWithdrawState()":{anonymous:!1,inputs:[],name:"EscrowInWithdrawState",type:"event"},"LockedSOVUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_lockedSOV",type:"address"}],name:"LockedSOVUpdated",type:"event"},"NewMultisig(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newMultisig",type:"address"}],name:"NewMultisig",type:"event"},"RewardDepositByMultisig(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"RewardDepositByMultisig",type:"event"},"RewardTokenWithdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"RewardTokenWithdraw",type:"event"},"TokenDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDeposit",type:"event"},"TokenDepositByMultisig(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDepositByMultisig",type:"event"},"TokenDepositLimitUpdated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_depositLimit",type:"uint256"}],name:"TokenDepositLimitUpdated",type:"event"},"TokenReleaseUpdated(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_releaseTimestamp",type:"uint256"}],name:"TokenReleaseUpdated",type:"event"},"TokenWithdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenWithdraw",type:"event"},"TokenWithdrawByMultisig(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenWithdrawByMultisig",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"changeStateToHolding()":{constant:!1,inputs:[],name:"changeStateToHolding",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Once called, the contract no longer accepts any more deposits. The multisig can now withdraw tokens from the contract after the contract is in Holding State.",notice:"Update contract state to Holding."},"depositLimit()":{constant:!0,inputs:[],name:"depositLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"depositRewardByMultisig(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositRewardByMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The contract has to be approved by the multisig inorder for this function to work.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract by the Multisig."},"depositTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The contract has to be approved by the user inorder for this function to work. These tokens can be withdrawn/transferred during Holding State by the Multisig.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract by User."},"depositTokensByMultisig(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokensByMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The contract has to be approved by the multisig inorder for this function to work. Once the token deposit is higher than the total deposits done, the contract state is changed to Withdraw.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract by the Multisig."},"getReward(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getReward",outputs:[{internalType:"uint256",name:"reward",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user whose reward is to be read."},return:"reward The reward received by the user.",notice:"Function to read the reward a particular user can get."},"getUserBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"_addr The user address whose balance has to be checked.",notice:"Function to read the current token balance of a particular user."},"init()":{constant:!1,inputs:[],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Without calling this function, the contract will not start accepting tokens.",notice:"This function is called once after deployment for starting the deposit action."},"lockedSOV()":{constant:!0,inputs:[],name:"lockedSOV",outputs:[{internalType:"contract ILockedSOV",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"multisig()":{constant:!0,inputs:[],name:"multisig",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"releaseTime()":{constant:!0,inputs:[],name:"releaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"status()":{constant:!0,inputs:[],name:"status",outputs:[{internalType:"enum Escrow.Status",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"totalDeposit()":{constant:!0,inputs:[],name:"totalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalRewardDeposit()":{constant:!0,inputs:[],name:"totalRewardDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"updateDepositLimit(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_newDepositLimit",type:"uint256"}],name:"updateDepositLimit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"IMPORTANT: Should not decrease than already deposited.",params:{_newDepositLimit:"The new deposit limit."},notice:"Update Deposit Limit."},"updateLockedSOV(address)":{constant:!1,inputs:[{internalType:"address",name:"_lockedSOV",type:"address"}],name:"updateLockedSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_lockedSOV:"The Locked SOV Contract address."},notice:"Set the Locked SOV Contract Address if not already done."},"updateMultisig(address)":{constant:!1,inputs:[{internalType:"address",name:"_newMultisig",type:"address"}],name:"updateMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newMultisig:"The new owner of the tokens & contract."},notice:"Update Multisig."},"updateReleaseTimestamp(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_newReleaseTime",type:"uint256"}],name:"updateReleaseTimestamp",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Zero is also a valid timestamp, if the release time is not scheduled yet.",params:{_newReleaseTime:"The new release timestamp for token release."},notice:"Update Release Timestamp."},"withdrawTokens()":{constant:!1,inputs:[],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only works after the contract state is in Withdraw.",notice:"Withdraws token from the contract by User."},"withdrawTokensAndReward()":{constant:!1,inputs:[],name:"withdrawTokensAndReward",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only works after the contract state is in Withdraw.",notice:"Withdraws token and reward from the contract by User. Reward is gone to lockedSOV contract for future vesting."},"withdrawTokensByMultisig(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawTokensByMultisig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can only be called after the token state is changed to Holding.",params:{_receiverAddress:"The address where the tokens has to be transferred. Zero address if the withdraw is to be done in Multisig."},notice:"Withdraws all token from the contract by Multisig."}}},"contracts/escrow/ILockedSOV.sol:ILockedSOV":{source:"contracts/escrow/ILockedSOV.sol",name:"ILockedSOV",title:"An interface for the Locked SOV Contract.",author:"Franklin Richards - powerhousefrank@protonmail.com",details:"This is not a complete interface of the Locked SOV Contract.",methods:{"depositSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_sovAmount",type:"uint256"}],name:"depositSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_sovAmount:"The amount of SOV to be added to the locked balance.",_userAddress:"The user whose locked balance has to be updated with _sovAmount."},notice:"Adds SOV to the locked balance of a user."}}},"contracts/events/FeesEvents.sol:FeesEvents":{source:"contracts/events/FeesEvents.sol",name:"FeesEvents",title:"The Fees Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for fee payments.",events:{"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"}}},"contracts/events/LoanClosingsEvents.sol:LoanClosingsEvents":{source:"contracts/events/LoanClosingsEvents.sol",name:"LoanClosingsEvents",title:"The Loan Closing Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for loan closing operations.",events:{"CloseWithDeposit(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"CloseWithDeposit",type:"event"},"CloseWithSwap(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"uint256",name:"positionCloseSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"exitPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"CloseWithSwap",type:"event"},"Liquidate(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"lender",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Liquidate",type:"event"},"swapExcess(bool,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"shouldRefund",type:"bool"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountInRbtc",type:"uint256"},{indexed:!1,internalType:"uint256",name:"threshold",type:"uint256"}],name:"swapExcess",type:"event"}}},"contracts/events/LoanMaintenanceEvents.sol:LoanMaintenanceEvents":{source:"contracts/events/LoanMaintenanceEvents.sol",name:"LoanMaintenanceEvents",title:"The Loan Maintenance Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for loan maintenance operations.",events:{"DepositCollateral(bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"depositAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"DepositCollateral",type:"event"}}},"contracts/events/LoanOpeningsEvents.sol:LoanOpeningsEvents":{source:"contracts/events/LoanOpeningsEvents.sol",name:"LoanOpeningsEvents",title:"The Loan Openings Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for loan openings operations.",events:{"Borrow(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"newPrincipal",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Borrow",type:"event"},"DelegatedManagerSet(bytes32,address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"delegated",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"DelegatedManagerSet",type:"event"},"Trade(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"positionSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryLeverage",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"Trade",type:"event"}}},"contracts/events/LoanSettingsEvents.sol:LoanSettingsEvents":{source:"contracts/events/LoanSettingsEvents.sol",name:"LoanSettingsEvents",title:"The Loan Settings Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for loan settings operations.",events:{"LoanParamsDisabled(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsDisabled",type:"event"},"LoanParamsIdDisabled(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdDisabled",type:"event"},"LoanParamsIdSetup(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdSetup",type:"event"},"LoanParamsSetup(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsSetup",type:"event"}}},"contracts/events/ProtocolSettingsEvents.sol:ProtocolSettingsEvents":{source:"contracts/events/ProtocolSettingsEvents.sol",name:"ProtocolSettingsEvents",title:"The Protocol Settings Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for protocol settings operations.",events:{"SetAffiliateFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetAffiliateFeePercent",type:"event"},"SetBorrowingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetBorrowingFeePercent",type:"event"},"SetFeesController(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldController",type:"address"},{indexed:!0,internalType:"address",name:"newController",type:"address"}],name:"SetFeesController",type:"event"},"SetLendingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLendingFeePercent",type:"event"},"SetLiquidationIncentivePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLiquidationIncentivePercent",type:"event"},"SetLoanPool(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"loanPool",type:"address"},{indexed:!0,internalType:"address",name:"underlying",type:"address"}],name:"SetLoanPool",type:"event"},"SetMaxSwapSize(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetMaxSwapSize",type:"event"},"SetPriceFeedContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetPriceFeedContract",type:"event"},"SetProtocolTokenAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldProtocolToken",type:"address"},{indexed:!0,internalType:"address",name:"newProtocolToken",type:"address"}],name:"SetProtocolTokenAddress",type:"event"},"SetRebatePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldRebatePercent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRebatePercent",type:"uint256"}],name:"SetRebatePercent",type:"event"},"SetRolloverBaseReward(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetRolloverBaseReward",type:"event"},"SetSovrynSwapContractRegistryAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldSovrynSwapContractRegistryAddress",type:"address"},{indexed:!0,internalType:"address",name:"newSovrynSwapContractRegistryAddress",type:"address"}],name:"SetSovrynSwapContractRegistryAddress",type:"event"},"SetSupportedTokens(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetSupportedTokens",type:"event"},"SetSwapsImplContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetSwapsImplContract",type:"event"},"SetTradingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetTradingFeePercent",type:"event"},"SetWrbtcToken(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldWethToken",type:"address"},{indexed:!0,internalType:"address",name:"newWethToken",type:"address"}],name:"SetWrbtcToken",type:"event"},"WithdrawBorrowingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawBorrowingFees",type:"event"},"WithdrawFees(address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"lendingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tradingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowingAmount",type:"uint256"}],name:"WithdrawFees",type:"event"},"WithdrawLendingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawLendingFees",type:"event"},"WithdrawTradingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawTradingFees",type:"event"}}},"contracts/events/SwapsEvents.sol:SwapsEvents":{source:"contracts/events/SwapsEvents.sol",name:"SwapsEvents",title:"The Swaps Events contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the events for swap operations.",events:{"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"}}},"contracts/feeds/BProPriceFeed.sol:BProPriceFeed":{source:"contracts/feeds/BProPriceFeed.sol",name:"BProPriceFeed",title:"The BPro Price Feed contract. * This contract gets/sets the MoC (Money on Chain) address of its state contract and queries its method bproUsdPrice to get bPro/USD valuation.",constructor:{inputs:[{internalType:"address",name:"_mocStateAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetMoCStateAddress(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mocStateAddress",type:"address"},{indexed:!1,internalType:"address",name:"changerAddress",type:"address"}],name:"SetMoCStateAddress",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"latestAnswer()":{constant:!0,inputs:[],name:"latestAnswer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"the BPro USD Price [using mocPrecision]",notice:"Get BPro USD price."},"latestTimestamp()":{constant:!0,inputs:[],name:"latestTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Always returns current block's timestamp.",notice:"Supposed to get the MoC update time, but instead get the current timestamp."},"mocStateAddress()":{constant:!0,inputs:[],name:"mocStateAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"setMoCStateAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_mocStateAddress",type:"address"}],name:"setMoCStateAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_mocStateAddress:"The MoC state address."},notice:"Set MoC state address."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/feeds/IMoCState.sol:IMoCState":{source:"contracts/feeds/IMoCState.sol",name:"IMoCState",methods:{"absoluteMaxBPro()":{constant:!0,inputs:[],name:"absoluteMaxBPro",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"bproDiscountPrice()":{constant:!0,inputs:[],name:"bproDiscountPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"bproSpotDiscountRate()":{constant:!0,inputs:[],name:"bproSpotDiscountRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"bproTecPrice()":{constant:!0,inputs:[],name:"bproTecPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"bproUsdPrice()":{constant:!0,inputs:[],name:"bproUsdPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"bucketBProTecPrice(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"bucket",type:"bytes32"}],name:"bucketBProTecPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getBucketNBPro(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"bucket",type:"bytes32"}],name:"getBucketNBPro",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getRbtcInBitPro(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"bucket",type:"bytes32"}],name:"getRbtcInBitPro",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"globalMaxBPro()":{constant:!0,inputs:[],name:"globalMaxBPro",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxBPro(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"bucket",type:"bytes32"}],name:"maxBPro",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxBProWithDiscount()":{constant:!0,inputs:[],name:"maxBProWithDiscount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/IPriceFeeds.sol:IPriceFeeds":{source:"contracts/feeds/IPriceFeeds.sol",name:"IPriceFeeds",methods:{"amountInEth(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"Token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"amountInEth",outputs:[{internalType:"uint256",name:"ethAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkPriceDisagreement(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"},{internalType:"uint256",name:"destAmount",type:"uint256"},{internalType:"uint256",name:"maxSlippage",type:"uint256"}],name:"checkPriceDisagreement",outputs:[{internalType:"uint256",name:"sourceToDestSwapRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentMargin(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMargin",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralToLoanRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentMarginAndCollateralSize(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMarginAndCollateralSize",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralInEthAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getFastGasPrice(address)":{constant:!0,inputs:[{internalType:"address",name:"payToken",type:"address"}],name:"getFastGasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getMaxDrawdown(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"}],name:"getMaxDrawdown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"queryPrecision(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryPrecision",outputs:[{internalType:"uint256",name:"precision",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"queryRate(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryRate",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"precision",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"queryReturn(address,address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"}],name:"queryReturn",outputs:[{internalType:"uint256",name:"destAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"shouldLiquidate(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"}],name:"shouldLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/IRSKOracle.sol:IRSKOracle":{source:"contracts/feeds/IRSKOracle.sol",name:"IRSKOracle",methods:{"clearOracleAddress()":{constant:!1,inputs:[],name:"clearOracleAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"getPricing()":{constant:!0,inputs:[],name:"getPricing",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setOracleAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"addr",type:"address"}],name:"setOracleAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"updatePrice(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"updatePrice",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/feeds/PriceFeedRSKOracle.sol:PriceFeedRSKOracle":{source:"contracts/feeds/PriceFeedRSKOracle.sol",name:"PriceFeedRSKOracle",notice:"The Price Feed RSK Oracle contract. * This contract implements RSK Oracle query functionality, getting the price and the last timestamp from an external oracle contract.",constructor:{inputs:[{internalType:"address",name:"_rskOracleAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetRSKOracleAddress(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"rskOracleAddress",type:"address"},{indexed:!1,internalType:"address",name:"changerAddress",type:"address"}],name:"SetRSKOracleAddress",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"latestAnswer()":{constant:!0,inputs:[],name:"latestAnswer",outputs:[{internalType:"uint256",name:"_price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The price from Oracle.",notice:"Get the oracle price."},"latestTimestamp()":{constant:!0,inputs:[],name:"latestTimestamp",outputs:[{internalType:"uint256",name:"_timestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The latest time.",notice:"Get the las time oracle updated the price."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rskOracleAddress()":{constant:!0,inputs:[],name:"rskOracleAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"setRSKOracleAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_rskOracleAddress",type:"address"}],name:"setRSKOracleAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_rskOracleAddress:"The RSK Oracle address."},notice:"Set the RSK Oracle address."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/feeds/PriceFeeds.sol:IPriceFeedsExt":{source:"contracts/feeds/PriceFeeds.sol",name:"IPriceFeedsExt",methods:{"latestAnswer()":{constant:!0,inputs:[],name:"latestAnswer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/PriceFeeds.sol:PriceFeeds":{source:"contracts/feeds/PriceFeeds.sol",name:"PriceFeeds",title:"The Price Feeds contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract queries the price feeds contracts where oracles updates token prices computing relative token prices. And besides it includes some calculations about loans such as drawdown, margin and collateral.",constructor:{inputs:[{internalType:"address",name:"_wrbtcTokenAddress",type:"address"},{internalType:"address",name:"_protocolTokenAddress",type:"address"},{internalType:"address",name:"_baseTokenAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"GlobalPricingPaused(address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPricingPaused",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"amountInEth(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"amountInEth",outputs:[{internalType:"uint256",name:"ethAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The amount of tokens to calculate price.",tokenAddress:"The address of the token to calculate price."},return:"ethAmount The amount of rBTC equivalent.",notice:"Calculate the rBTC amount equivalent to a given token amount. Native coin on RSK is rBTC. This code comes from Ethereum applications, so Eth refers to 10**18 weis of native coin, i.e.: 1 rBTC."},"baseToken()":{constant:!0,inputs:[],name:"baseToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"checkPriceDisagreement(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"},{internalType:"uint256",name:"destAmount",type:"uint256"},{internalType:"uint256",name:"maxSlippage",type:"uint256"}],name:"checkPriceDisagreement",outputs:[{internalType:"uint256",name:"sourceToDestSwapRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destAmount:"The amount of destiny tokens.",destToken:"The address of the destiny tokens.",maxSlippage:"The maximum slippage limit.",sourceAmount:"The amount of source tokens.",sourceToken:"The address of the source tokens."},return:"sourceToDestSwapRate The swap rate between tokens.",notice:"Calculate the swap rate between two tokens.\t * Regarding slippage, there is a hardcoded slippage limit of 5%, enforced by this function for all borrowing, lending and margin trading originated swaps performed in the Sovryn exchange.\t * This means all operations in the Sovryn exchange are subject to losing up to 5% from the internal swap performed."},"decimals(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentMargin(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMargin",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralToLoanRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"current margin = (total position size - loan) / loan The collateral amount passed as parameter equals the total position size.",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token."},return:"currentMargin The margin of the loan.collateralToLoanRate The price ratio between collateral and  loan tokens.",notice:"Calculate the margin of a loan."},"getCurrentMarginAndCollateralSize(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMarginAndCollateralSize",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralInEthAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token."},return:"currentMargin The margin of the loan.collateralInEthAmount The amount of collateral on rBTC.",notice:"Calculate the margin and the collateral on rBTC."},"getMaxDrawdown(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"margin",type:"uint256"}],name:"getMaxDrawdown",outputs:[{internalType:"uint256",name:"maxDrawdown",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token.",margin:"The relation between the position size and the loan.  margin = (total position size - loan) / loan"},return:"maxDrawdown The maximum drawdown.",notice:"Calculate the maximum drawdown of a loan.\t * A drawdown is commonly defined as the decline from a high peak to a pullback low of a specific investment or equity in an account.\t * Drawdown magnitude refers to the amount of value that a user loses during the drawdown period."},"globalPricingPaused()":{constant:!0,inputs:[],name:"globalPricingPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pricesFeeds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"pricesFeeds",outputs:[{internalType:"contract IPriceFeedsExt",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenEthPrice()":{constant:!0,inputs:[],name:"protocolTokenEthPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"queryPrecision(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Public wrapper for _getDecimalPrecision internal function.",params:{destToken:"The address of the destiny tokens.",sourceToken:"The address of the source tokens."},return:"The precision ratio source/dest.",notice:"Calculate the relative precision between two tokens."},"queryRate(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryRate",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"precision",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Public wrapper for _queryRate internal function.",params:{destToken:"The address of the destiny tokens.",sourceToken:"The address of the source tokens."},return:"rate The price ratio source/dest.precision The ratio precision.",notice:"Calculate the price ratio between two tokens."},"queryReturn(address,address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"}],name:"queryReturn",outputs:[{internalType:"uint256",name:"destAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly.",params:{destToken:"The address of the destiny tokens.",sourceAmount:"The amount of the source tokens.",sourceToken:"The address of the source tokens."},return:"destAmount The amount of destiny tokens equivalent in price  to the amount of source tokens.",notice:"Price conversor: Calculate the price of an amount of source tokens in destiny token units."},"setDecimals(address[])":{constant:!1,inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"setDecimals",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{tokens:"The array of tokens to loop and get values from."},notice:"Populate decimals mapping w/ values from tokens[].decimals"},"setGlobalPricingPaused(bool)":{constant:!1,inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPricingPaused",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{isPaused:"The new status of pause (true/false)."},notice:"Set flag globalPricingPaused"},"setPriceFeed(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"contract IPriceFeedsExt[]",name:"feeds",type:"address[]"}],name:"setPriceFeed",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{feeds:"The array of contract instances for every token.",tokens:"The array of tokens to loop and get addresses."},notice:"Populate pricesFeeds mapping w/ values from feeds[]"},"setProtocolTokenEthPrice(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newPrice",type:"uint256"}],name:"setProtocolTokenEthPrice",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newPrice:"The new value for protocolTokenEthPrice"},notice:"Set new value for protocolTokenEthPrice"},"shouldLiquidate(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"}],name:"shouldLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token.",maintenanceMargin:"The minimum margin before liquidation."},return:"True/false to liquidate the loan.",notice:"Get assessment about liquidating a loan."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/PriceFeedsConstants.sol:Constants":{source:"contracts/feeds/PriceFeedsConstants.sol",name:"Constants",title:"The Price Feeds Constants contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract keep the addresses of token instances for wrBTC, base token and protocol token.",methods:{"baseToken()":{constant:!0,inputs:[],name:"baseToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/USDTPriceFeed.sol:USDTPriceFeed":{source:"contracts/feeds/USDTPriceFeed.sol",name:"USDTPriceFeed",notice:"The Price Feed USDT contract. * This contract implements USDT query functionality, getting the price and the last timestamp from a trivial formula, always returning 1 and now.",methods:{"latestAnswer()":{constant:!0,inputs:[],name:"latestAnswer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Always returns the trivial rate of 1.",notice:"Get the USDT price."},"latestTimestamp()":{constant:!0,inputs:[],name:"latestTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Always trivial current block's timestamp.",notice:"Get the las time the price was updated."}}},"contracts/feeds/testnet/PriceFeedsLocal.sol:PriceFeedsLocal":{source:"contracts/feeds/testnet/PriceFeedsLocal.sol",name:"PriceFeedsLocal",title:"Price Feeds Local contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the logic of setting and getting rates between two tokens.",constructor:{inputs:[{internalType:"address",name:"_wrbtcTokenAddress",type:"address"},{internalType:"address",name:"_protocolTokenAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"GlobalPricingPaused(address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"bool",name:"isPaused",type:"bool"}],name:"GlobalPricingPaused",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"amountInEth(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"amountInEth",outputs:[{internalType:"uint256",name:"ethAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The amount of tokens to calculate price.",tokenAddress:"The address of the token to calculate price."},return:"ethAmount The amount of rBTC equivalent.",notice:"Calculate the rBTC amount equivalent to a given token amount. Native coin on RSK is rBTC. This code comes from Ethereum applications, so Eth refers to 10**18 weis of native coin, i.e.: 1 rBTC."},"baseToken()":{constant:!0,inputs:[],name:"baseToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"checkPriceDisagreement(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"},{internalType:"uint256",name:"destAmount",type:"uint256"},{internalType:"uint256",name:"maxSlippage",type:"uint256"}],name:"checkPriceDisagreement",outputs:[{internalType:"uint256",name:"sourceToDestSwapRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destAmount:"The amount of destiny tokens.",destToken:"The address of the destiny tokens.",maxSlippage:"The maximum slippage limit.",sourceAmount:"The amount of source tokens.",sourceToken:"The address of the source tokens."},return:"sourceToDestSwapRate The swap rate between tokens.",notice:"Calculate the swap rate between two tokens.\t * Regarding slippage, there is a hardcoded slippage limit of 5%, enforced by this function for all borrowing, lending and margin trading originated swaps performed in the Sovryn exchange.\t * This means all operations in the Sovryn exchange are subject to losing up to 5% from the internal swap performed."},"decimals(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentMargin(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMargin",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralToLoanRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"current margin = (total position size - loan) / loan The collateral amount passed as parameter equals the total position size.",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token."},return:"currentMargin The margin of the loan.collateralToLoanRate The price ratio between collateral and  loan tokens.",notice:"Calculate the margin of a loan."},"getCurrentMarginAndCollateralSize(address,address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"getCurrentMarginAndCollateralSize",outputs:[{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"collateralInEthAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token."},return:"currentMargin The margin of the loan.collateralInEthAmount The amount of collateral on rBTC.",notice:"Calculate the margin and the collateral on rBTC."},"getMaxDrawdown(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"margin",type:"uint256"}],name:"getMaxDrawdown",outputs:[{internalType:"uint256",name:"maxDrawdown",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token.",margin:"The relation between the position size and the loan.  margin = (total position size - loan) / loan"},return:"maxDrawdown The maximum drawdown.",notice:"Calculate the maximum drawdown of a loan.\t * A drawdown is commonly defined as the decline from a high peak to a pullback low of a specific investment or equity in an account.\t * Drawdown magnitude refers to the amount of value that a user loses during the drawdown period."},"globalPricingPaused()":{constant:!0,inputs:[],name:"globalPricingPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pricesFeeds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"pricesFeeds",outputs:[{internalType:"contract IPriceFeedsExt",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenEthPrice()":{constant:!0,inputs:[],name:"protocolTokenEthPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"queryPrecision(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Public wrapper for _getDecimalPrecision internal function.",params:{destToken:"The address of the destiny tokens.",sourceToken:"The address of the source tokens."},return:"The precision ratio source/dest.",notice:"Calculate the relative precision between two tokens."},"queryRate(address,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"}],name:"queryRate",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"precision",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Public wrapper for _queryRate internal function.",params:{destToken:"The address of the destiny tokens.",sourceToken:"The address of the source tokens."},return:"rate The price ratio source/dest.precision The ratio precision.",notice:"Calculate the price ratio between two tokens."},"queryReturn(address,address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceAmount",type:"uint256"}],name:"queryReturn",outputs:[{internalType:"uint256",name:"destAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly.",params:{destToken:"The address of the destiny tokens.",sourceAmount:"The amount of the source tokens.",sourceToken:"The address of the source tokens."},return:"destAmount The amount of destiny tokens equivalent in price  to the amount of source tokens.",notice:"Price conversor: Calculate the price of an amount of source tokens in destiny token units."},"rates(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"rates",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setDecimals(address[])":{constant:!1,inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"setDecimals",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{tokens:"The array of tokens to loop and get values from."},notice:"Populate decimals mapping w/ values from tokens[].decimals"},"setGlobalPricingPaused(bool)":{constant:!1,inputs:[{internalType:"bool",name:"isPaused",type:"bool"}],name:"setGlobalPricingPaused",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{isPaused:"The new status of pause (true/false)."},notice:"Set flag globalPricingPaused"},"setPriceFeed(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"contract IPriceFeedsExt[]",name:"feeds",type:"address[]"}],name:"setPriceFeed",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{feeds:"The array of contract instances for every token.",tokens:"The array of tokens to loop and get addresses."},notice:"Populate pricesFeeds mapping w/ values from feeds[]"},"setProtocolTokenEthPrice(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newPrice",type:"uint256"}],name:"setProtocolTokenEthPrice",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newPrice:"The new value for protocolTokenEthPrice"},notice:"Set new value for protocolTokenEthPrice"},"setRates(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"rate",type:"uint256"}],name:"setRates",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{destToken:"The address of the destiny tokens.",rate:"The price ratio source/dest.",sourceToken:"The address of the source tokens."},notice:"Owner set price ratio between two tokens."},"shouldLiquidate(address,address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanAmount",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"}],name:"shouldLiquidate",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{collateralAmount:"The amount of the collateral.",collateralToken:"The address of the collateral token.",loanAmount:"The amount of the loan.",loanToken:"The address of the loan token.",maintenanceMargin:"The minimum margin before liquidation."},return:"True/false to liquidate the loan.",notice:"Get assessment about liquidating a loan."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/testnet/PriceFeedsMoC.sol:Medianizer":{source:"contracts/feeds/testnet/PriceFeedsMoC.sol",name:"Medianizer",methods:{"peek()":{constant:!0,inputs:[],name:"peek",outputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/feeds/testnet/PriceFeedsMoC.sol:PriceFeedsMoC":{source:"contracts/feeds/testnet/PriceFeedsMoC.sol",name:"PriceFeedsMoC",title:"Price Feed of MoC (Money on Chain) contract. * This contract contains the logic to set MoC oracles and query last price update.",constructor:{inputs:[{internalType:"address",name:"_mocOracleAddress",type:"address"},{internalType:"address",name:"_rskOracleAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetMoCOracleAddress(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mocOracleAddress",type:"address"},{indexed:!1,internalType:"address",name:"changerAddress",type:"address"}],name:"SetMoCOracleAddress",type:"event"},"SetRSKOracleAddress(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"rskOracleAddress",type:"address"},{indexed:!1,internalType:"address",name:"changerAddress",type:"address"}],name:"SetRSKOracleAddress",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"latestAnswer()":{constant:!0,inputs:[],name:"latestAnswer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The latest time.",notice:"Get the las time oracle updated the price."},"mocOracleAddress()":{constant:!0,inputs:[],name:"mocOracleAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rskOracleAddress()":{constant:!0,inputs:[],name:"rskOracleAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"setMoCOracleAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_mocOracleAddress",type:"address"}],name:"setMoCOracleAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_mocOracleAddress:"The MoC Oracle address."},notice:"Set the MoC Oracle address."},"setRSKOracleAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_rskOracleAddress",type:"address"}],name:"setRSKOracleAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_rskOracleAddress:"The RSK Oracle address."},notice:"Set the RSK Oracle address."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/governance/ApprovalReceiver.sol:ApprovalReceiver":{source:"contracts/governance/ApprovalReceiver.sol",name:"ApprovalReceiver",title:"Base contract for receiving approval from SOV token.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."}}},"contracts/governance/ErrorDecoder.sol:ErrorDecoder":{source:"contracts/governance/ErrorDecoder.sol",name:"ErrorDecoder",title:"Base contract to properly handle returned data on failed calls",details:'On EVM if the return data length of a call is less than 68, then the transaction fails silently without a revert message! * As described in the Solidity documentation https://solidity.readthedocs.io/en/v0.5.17/control-structures.html#revert the revert reason is an ABI-encoded string consisting of: 0x08c379a0 // Function selector (method id) for "Error(string)" signature 0x0000000000000000000000000000000000000000000000000000000000000020 // Data offset 0x000000000000000000000000000000000000000000000000000000000000001a // String length 0x4e6f7420656e6f7567682045746865722070726f76696465642e000000000000 // String data * Another example, debug data from test:  0x08c379a0  0000000000000000000000000000000000000000000000000000000000000020  0000000000000000000000000000000000000000000000000000000000000034  54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065  7863656564206d696e696d756d2064656c61792e000000000000000000000000 * Parsed into:  Data offset: 20  Length: 34  Error message:    54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065    7863656564206d696e696d756d2064656c61792e000000000000000000000000'},"contracts/governance/FeeSharingProxy.sol:FeeSharingProxy":{source:"contracts/governance/FeeSharingProxy.sol",name:"FeeSharingProxy",title:"The FeeSharingProxy contract.",notice:"Staking is not only granting voting rights, but also access to fee sharing according to the own voting power in relation to the total. Whenever somebody decides to collect the fees from the protocol, they get transferred to a proxy contract which invests the funds in the lending pool and keeps the pool tokens. * The fee sharing proxy will be set as feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees. The fee sharing proxy holds the pool tokens and keeps track of which user owns how many tokens. In order to know how many tokens a user owns, the fee sharing proxy needs to know the user’s weighted stake in relation to the total weighted stake (aka total voting power). * Because both values are subject to change, they may be different on each fee withdrawal. To be able to calculate a user’s share of tokens when he wants to withdraw, we need checkpoints. * This contract is intended to be set as the protocol fee collector. Anybody can invoke the withdrawFees function which uses protocol.withdrawFees to obtain available fees from operations on a certain token. These fees are deposited in the corresponding loanPool. Also, the staking contract sends slashed tokens to this contract. When a user calls the withdraw function, the contract transfers the fee sharing rewards in proportion to the user’s weighted stake since the last withdrawal. * The protocol is collecting fees in all sorts of currencies and then automatically supplies them to the respective lending pools. Therefore, all fees are generating interest for the SOV holders. If one of them withdraws fees, it will get pool tokens. It is planned to add the option to convert anything to rBTC before withdrawing, but not yet implemented.",constructor:{inputs:[{internalType:"contract IProtocol",name:"_protocol",type:"address"},{internalType:"contract IStaking",name:"_staking",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"CheckpointAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CheckpointAdded",type:"event"},"FeeWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"FeeWithdrawn",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"},"UserFeeWithdrawn(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UserFeeWithdrawn",type:"event"}},methods:{"getAccumulatedFees(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_loanPoolToken",type:"address"}],name:"getAccumulatedFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_loanPoolToken:"Address of the pool token.",_user:"The address of the user or contract."},return:"The accumulated fee for the message sender.",notice:"Get the accumulated loan pool fee of the message sender."},"lastFeeWithdrawalTime(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lastFeeWithdrawalTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numTokenCheckpoints(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"numTokenCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"processedCheckpoints(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"processedCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"protocol()":{constant:!0,inputs:[],name:"protocol",outputs:[{internalType:"contract IProtocol",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tokenCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"tokenCheckpoints",outputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint32",name:"timestamp",type:"uint32"},{internalType:"uint96",name:"totalWeightedStake",type:"uint96"},{internalType:"uint96",name:"numTokens",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferTokens(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We just update amount of tokens here and write checkpoint in a separate methods in order to prevent adding checkpoints too often.",params:{_amount:"Amount to be transferred.",_token:"Address of the token."},notice:"Transfer tokens to this contract."},"unprocessedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"unprocessedAmount",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"withdraw(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_loanPoolToken:"Address of the pool token.",_maxCheckpoints:"Maximum number of checkpoints to be processed.",_receiver:"The receiver of tokens or msg.sender"},notice:"Withdraw accumulated fee to the message sender.\t * The Sovryn protocol collects fees on every trade/swap and loan. These fees will be distributed to SOV stakers based on their voting power as a percentage of total voting power. Therefore, staking more SOV and/or staking for longer will increase your share of the fees generated, meaning you will earn more from staking."},"withdrawFees(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"withdrawFees",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_token:"Address of the token"},notice:"Withdraw fees for the given token: lendingFee + tradingFee + borrowingFee"}}},"contracts/governance/FeeSharingProxy.sol:ILoanToken":{source:"contracts/governance/FeeSharingProxy.sol",name:"ILoanToken",methods:{"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/FeeSharingProxy.sol:IProtocol":{source:"contracts/governance/FeeSharingProxy.sol",name:"IProtocol",methods:{"underlyingToLoanPool(address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address,address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/GovernorAlpha.sol:GovernorAlpha":{source:"contracts/governance/GovernorAlpha.sol",name:"GovernorAlpha",title:"Governance Contract.",notice:"This is an adapted clone of compound’s governance model. In general, the process is the same: Token holders can make (executable) proposals if they possess enough voting power, vote on proposals during a predefined voting period and in the end evaluate the outcome. If successful, the proposal will be scheduled on the timelock contract. Only after sufficient time passed, it can be executed. A minimum voting power is required for making a proposal as well as a minimum quorum. * Voting power in the Bitocracy: Stakers will receive voting power in the Bitocracy in return for their staking commitment. This voting power is weighted by how much SOV is staked and for how long the staking period is - staking more SOV over longer staking periods results in higher voting power. With this voting power, users can vote for or against any SIP in bitocracy.sovryn.app.",constructor:{inputs:[{internalType:"address",name:"timelock_",type:"address"},{internalType:"address",name:"staking_",type:"address"},{internalType:"address",name:"guardian_",type:"address"},{internalType:"uint96",name:"_quorumPercentageVotes",type:"uint96"},{internalType:"uint96",name:"_majorityPercentageVotes",type:"uint96"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event"},"VoteCast(address,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"support",type:"bool"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"}],name:"VoteCast",type:"event"}},methods:{"BALLOT_TYPEHASH()":{constant:!0,inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"__abdicate()":{constant:!1,inputs:[],name:"__abdicate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Sets guardian address to zero."},"__acceptAdmin()":{constant:!1,inputs:[],name:"__acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__executeSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__executeSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__queueSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__queueSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"cancel(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"cancel",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Cancel a proposal by looping and cancelling everyone of its calls."},"castVote(uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"castVote",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",support:"Vote value, yes or no."},notice:"Casts a vote by sender."},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{proposalId:"Proposal index to access the list proposals[] from storage.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",support:"Vote value, yes or no.",v:"The recovery byte of the signature."},notice:"Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"execute(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"execute",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Execute a proposal by looping and performing everyone of its calls."},"getActions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"Arrays of the 4 call parameters: targets, values, signatures, calldatas.",notice:"Get a proposal list of its calls."},"getReceipt(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct GovernorAlpha.Receipt",name:"",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",voter:"A governance stakeholder with voting power."},return:"The voter receipt of the proposal.",notice:"Get a proposal receipt."},"guardian()":{constant:!0,inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"latestProposalIds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"majorityPercentageVotes()":{constant:!0,inputs:[],name:"majorityPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"proposalCount()":{constant:!0,inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"proposalMaxOperations()":{constant:!0,inputs:[],name:"proposalMaxOperations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The maximum number of actions that can be included in a proposal."},"proposalThreshold()":{constant:!0,inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer."},"proposals(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint32",name:"startBlock",type:"uint32"},{internalType:"uint32",name:"endBlock",type:"uint32"},{internalType:"uint96",name:"forVotes",type:"uint96"},{internalType:"uint96",name:"againstVotes",type:"uint96"},{internalType:"uint96",name:"quorum",type:"uint96"},{internalType:"uint96",name:"majorityPercentage",type:"uint96"},{internalType:"uint64",name:"eta",type:"uint64"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"},{internalType:"address",name:"proposer",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"propose(address[],uint256[],string[],bytes[],string)":{constant:!1,inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{calldatas:"Array of payloads for the calls on proposal execution.",description:"Text describing the purpose of the proposal.",signatures:"Array of function signatures to call on proposal execution.",targets:"Array of contract addresses to perform proposal execution.",values:"Array of rBTC amounts to send on proposal execution."},notice:"Create a new proposal."},"queue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"queue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Enqueue a proposal and everyone of its calls."},"quorumPercentageVotes()":{constant:!0,inputs:[],name:"quorumPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"quorumVotes()":{constant:!0,inputs:[],name:"quorumVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"state(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum GovernorAlpha.ProposalState",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"The state of the proposal: Canceled, Pending, Active, Defeated, Succeeded, Executed, Expired.",notice:"Get a proposal state."},"timelock()":{constant:!0,inputs:[],name:"timelock",outputs:[{internalType:"contract ITimelock",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"votingDelay()":{constant:!0,inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The delay before voting on a proposal may take place, once proposed."},"votingPeriod()":{constant:!0,inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The duration of voting on a proposal, in blocks."}}},"contracts/governance/GovernorAlpha.sol:StakingInterface":{source:"contracts/governance/GovernorAlpha.sol",name:"StakingInterface",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/GovernorAlpha.sol:TimelockInterface":{source:"contracts/governance/GovernorAlpha.sol",name:"TimelockInterface",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/GovernorVault.sol:GovernorVault":{source:"contracts/governance/GovernorVault.sol",name:"GovernorVault",title:"Governance Vault.",notice:"This contract stores tokens and rBTC only transfereble by owner, i.e. Sovryn governance.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Deposited(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposited",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RbtcTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RbtcTransferred",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferRbtc(address,uint256)":{constant:!1,inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferRbtc",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of RBTC."},notice:"Transfer RBTC."},"transferTokens(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of tokens.",_token:"The address of token contract."},notice:"Transfer tokens."}}},"contracts/governance/IFeeSharingProxy.sol:IFeeSharingProxy":{source:"contracts/governance/IFeeSharingProxy.sol",name:"IFeeSharingProxy",title:"Interface for contract governance/FeeSharingProxy.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"transferTokens(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"withdrawFees",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/Staking/Checkpoints.sol:Checkpoints":{source:"contracts/governance/Staking/Checkpoints.sol",name:"Checkpoints",title:"Checkpoints contract.",notice:"Increases and decreases storage values for users, delegatees and total daily stake.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Staking/IStaking.sol:IStaking":{source:"contracts/governance/Staking/IStaking.sol",name:"IStaking",title:"Interface for contract governance/Staking/Staking.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Staking/SafeMath96.sol:SafeMath96":{source:"contracts/governance/Staking/SafeMath96.sol",name:"SafeMath96",title:"SafeMath96 contract.",details:"SafeMath96 uses uint96, unsigned integers of 96 bits length, so every integer from 0 to 2^96-1 can be operated. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. SafeMath restores this intuition by reverting the transaction when an operation overflows. * Using this contract instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",notice:"Improved Solidity's arithmetic operations with added overflow checks."},"contracts/governance/Staking/Staking.sol:Staking":{source:"contracts/governance/Staking/Staking.sol",name:"Staking",title:"Staking contract.",notice:"Pay-in and pay-out function for staking and withdrawing tokens. Staking is delegated and vested: To gain voting power, SOV holders must stake their SOV for a given period of time. Aside from Bitocracy participation, there's a financially-rewarding reason for staking SOV. Tokenholders who stake their SOV receive staking rewards, a pro-rata share of the revenue that the platform generates from various transaction fees plus revenues from stakers who have a portion of their SOV slashed for early unstaking.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint96",name:"balance",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Iterate checkpoints adding up stakes.",params:{account:"The address of the account to get the balance of."},return:"The number of tokens held.",notice:"Get the number of staked tokens held by the user account."},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},notice:"Compute the weight for a specific date."},"delegate(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to.",lockDate:"the date if the position to delegate."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{delegatee:"The address to delegate votes to.",expiry:"The time at which to expire the signature.",lockDate:"The date until which the position is locked.",nonce:"The contract state required to match the signature.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",v:"The recovery byte of the signature."},notice:"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"extendStakingDuration(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"previousLock",type:"uint256"},{internalType:"uint256",name:"until",type:"uint256"}],name:"extendStakingDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{previousLock:"The old unlocking timestamp.",until:"The new unlocking timestamp in seconds."},notice:"Extend the staking duration until the specified date."},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentStakedUntil(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"lockedTS",type:"uint256"}],name:"getCurrentStakedUntil",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{lockedTS:"The timestamp to get the staked tokens for."},notice:"Get the current number of tokens staked for a day."},"getCurrentVotes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",params:{account:"The address to get votes balance."},return:"The number of current votes for a user account.",notice:"Get the current votes balance for a user account."},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"getStakes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getStakes",outputs:[{internalType:"uint256[]",name:"dates",type:"uint256[]"},{internalType:"uint96[]",name:"stakes",type:"uint96[]"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The address to get stakes."},return:"The arrays of dates and stakes.",notice:"Get list of stakes for a user account."},"getWithdrawAmounts(uint96,uint256)":{constant:!0,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"}],name:"getWithdrawAmounts",outputs:[{internalType:"uint96",name:"",type:"uint96"},{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The number of tokens to withdraw.",until:"The date until which the tokens were staked."},notice:"Get available and punished amount for withdrawing."},"governanceWithdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens."},"governanceWithdrawVesting(address,address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.",params:{receiver:"The receiver of the tokens. If not specified, send to the msg.sender",vesting:"The address of Vesting contract."},notice:"Withdraw tokens for vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.",notice:"Allow a staker to migrate his positions to the new staking contract."},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"setFeeSharing(address)":{constant:!1,inputs:[{internalType:"address",name:"_feeSharing",type:"address"}],name:"setFeeSharing",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_feeSharing:"The address of FeeSharingProxy contract."},notice:"Allow the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."},"setNewStakingContract(address)":{constant:!1,inputs:[{internalType:"address",name:"_newStakingContract",type:"address"}],name:"setNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",params:{_newStakingContract:"The address of the new staking contract."},notice:"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."},"setWeightScaling(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_weightScaling",type:"uint96"}],name:"setWeightScaling",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_weightScaling:"The weight scaling."},notice:"Allow the owner to set weight scaling. We need it for unstaking with slashing."},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakeWithApproval(address,uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakeWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",sender:"The sender of SOV.approveAndCall",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to stake.",cliff:"The time interval to the first withdraw.",delegatee:"The address of the delegatee or 0x0 if there is none.",duration:"The staking duration.",intervalLength:"The length of each staking interval when cliff passed.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself."},notice:"Stake tokens according to the vesting schedule."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockAllTokens()":{constant:!1,inputs:[],name:"unlockAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Last resort.",notice:"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."},"withdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens if they are unlocked."}}},"contracts/governance/Staking/StakingProxy.sol:StakingProxy":{source:"contracts/governance/Staking/StakingProxy.sol",name:"StakingProxy",title:"Staking Proxy contract.",details:"Staking contract should be upgradable, use UpgradableProxy. StakingStorage is deployed with the upgradable functionality by using this contract instead, that inherits from UpgradableProxy the possibility of being enhanced and re-deployed.",constructor:{inputs:[{internalType:"address",name:"SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Staking/StakingStorage.sol:StakingStorage":{source:"contracts/governance/Staking/StakingStorage.sol",name:"StakingStorage",title:"Staking Storage contact.",notice:"Just the storage part of stacking contract, no functions, only constant, variables and required structures (mappings). Used by StackingProxy and Checkpoints contracts. * What is SOV staking? The purpose of the SOV token is to provide a pseudonymous, censorship-resistant mechanism for governing the parameters of the Sovryn protocol, while aligning the incentives of protocol governors with the long-term success of the protocol. Any SOV token holder can choose to stake (lock up) their tokens for a fixed period of time in return for voting rights in the Bitocracy. Stakers are further incentivised through fee and slashing rewards.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Staking/WeightedStaking.sol:WeightedStaking":{source:"contracts/governance/Staking/WeightedStaking.sol",name:"WeightedStaking",title:"Weighted Staking contract.",notice:"Computation of power and votes used by FeeSharingProxy and GovernorAlpha and Staking contracts w/ mainly 3 public functions:  + getPriorTotalVotingPower => Total voting power.  + getPriorVotes  => Delegatee voting power.  + getPriorWeightedStake  => User Weighted Stake. Staking contract inherits WeightedStaking. FeeSharingProxy and GovernorAlpha invoke Staking instance functions.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},notice:"Compute the weight for a specific date."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."}}},"contracts/governance/Timelock.sol:ITimelock":{source:"contracts/governance/Timelock.sol",name:"ITimelock",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Timelock.sol:Timelock":{source:"contracts/governance/Timelock.sol",name:"Timelock",title:"Sovryn Protocol Timelock contract, based on Compound system.",notice:"This contract lets Sovryn governance system set up its own Time Lock instance to execute transactions proposed through the GovernorAlpha contract instance. * The Timelock contract allows its admin (Sovryn governance on GovernorAlpha contract) to add arbitrary function calls to a queue. This contract can only execute a function call if the function call has been in the queue for at least 3 hours. * Anytime the Timelock contract makes a function call, it must be the case that the function call was first made public by having been publicly added to the queue at least 3 hours prior. * The intention is to provide GovernorAlpha contract the functionality to queue proposal actions. This would mean that any changes made by Sovryn governance of any contract would necessarily come with at least an advanced warning. This makes the Sovryn system follow a “time-delayed, opt-out” upgrade pattern (rather than an “instant, forced” upgrade pattern). * Time-delaying admin actions gives users a chance to exit system if its admins become malicious or compromised (or make a change that the users do not like). Downside is that honest admins would be unable to lock down functionality to protect users if a critical bug was found. * Delayed transactions reduce the amount of trust required by users of Sovryn and the overall risk for contracts building on top of it, as GovernorAlpha.",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/governance/Vesting/DevelopmentFund.sol:DevelopmentFund":{source:"contracts/governance/Vesting/DevelopmentFund.sol",name:"DevelopmentFund",title:"A holding contract for Sovryn Development Fund.",author:"Franklin Richards",notice:"You can use this contract for timed token release from Dev Fund.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_lockedTokenOwner",type:"address"},{internalType:"address",name:"_safeVault",type:"address"},{internalType:"address",name:"_unlockedTokenOwner",type:"address"},{internalType:"uint256",name:"_lastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"DevelopmentFundActivated()":{anonymous:!1,inputs:[],name:"DevelopmentFundActivated",type:"event"},"DevelopmentFundExpired()":{anonymous:!1,inputs:[],name:"DevelopmentFundExpired",type:"event"},"LockedTokenTransferByLockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByLockedOwner",type:"event"},"LockedTokenTransferByUnlockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByUnlockedOwner",type:"event"},"NewLockedOwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerAdded",type:"event"},"NewLockedOwnerApproved(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldLockedOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerApproved",type:"event"},"TokenDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDeposit",type:"event"},"TokenReleaseChanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"TokenReleaseChanged",type:"event"},"UnlockedOwnerUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newUnlockedOwner",type:"address"}],name:"UnlockedOwnerUpdated",type:"event"},"UnlockedTokenWithdrawalByUnlockedOwner(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"UnlockedTokenWithdrawalByUnlockedOwner",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"approveLockedTokenOwner()":{constant:!1,inputs:[],name:"approveLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This approval is an added security to avoid development fund takeover by a compromised locked token owner.",notice:"Approve Locked Token Owner."},"changeTokenReleaseSchedule(uint256,uint256[],uint256[])":{constant:!1,inputs:[{internalType:"uint256",name:"_newLastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],name:"changeTokenReleaseSchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"_releaseDuration and _releaseTokenAmount should be specified in reverse order of release.",params:{_newLastReleaseTime:"If the last release time is to be changed, zero if no change required.",_releaseDuration:"The time duration between each release calculated from `lastReleaseTime` in seconds.",_releaseTokenAmount:"The amount of token to be released in each duration/interval."},notice:"Change the Token release schedule. It creates a completely new schedule, and does not append on the previous one."},"depositTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These tokens can be withdrawn/transferred any time by the lockedTokenOwner.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract."},"getReleaseDuration()":{constant:!0,inputs:[],name:"getReleaseDuration",outputs:[{internalType:"uint256[]",name:"_releaseTokenDuration",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseDuration The current release duration.",notice:"Function to read the current token release duration."},"getReleaseTokenAmount()":{constant:!0,inputs:[],name:"getReleaseTokenAmount",outputs:[{internalType:"uint256[]",name:"_currentReleaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseTokenAmount The current release token amount.",notice:"Function to read the current token release amount."},"init()":{constant:!1,inputs:[],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Without calling this function, the contract will not work.",notice:"This function is called once after deployment for token transfer based on schedule."},"lastReleaseTime()":{constant:!0,inputs:[],name:"lastReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lockedTokenOwner()":{constant:!0,inputs:[],name:"lockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"newLockedTokenOwner()":{constant:!0,inputs:[],name:"newLockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"releaseDuration(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"releaseTokenAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseTokenAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"safeVault()":{constant:!0,inputs:[],name:"safeVault",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"status()":{constant:!0,inputs:[],name:"status",outputs:[{internalType:"enum DevelopmentFund.Status",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"transferTokensByLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"transferTokensByLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when the current development fund has to be upgraded.",params:{_receiver:"The address which receives this token transfer."},notice:"Transfers all of the remaining tokens by the owner maybe for an upgrade."},"transferTokensByUnlockedTokenOwner()":{constant:!1,inputs:[],name:"transferTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when governance or development fund might be compromised.",notice:"Transfers all of the remaining tokens in an emergency situation."},"unlockedTokenOwner()":{constant:!0,inputs:[],name:"unlockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"updateLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newLockedTokenOwner",type:"address"}],name:"updateLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newLockedTokenOwner:"The owner of the locked tokens & contract."},notice:"Update Locked Token Owner."},"updateUnlockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newUnlockedTokenOwner",type:"address"}],name:"updateUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newUnlockedTokenOwner:"The new unlocked token owner."},notice:"Update Unlocked Token Owner."},"withdrawTokensByUnlockedTokenOwner(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be withdrawn."},notice:"Withdraws all unlocked/released token."}}},"contracts/governance/Vesting/ITeamVesting.sol:ITeamVesting":{source:"contracts/governance/Vesting/ITeamVesting.sol",name:"ITeamVesting",title:"Interface for TeamVesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by Staking contract to call governanceWithdrawTokens function having the vesting contract instance address.",methods:{"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/Vesting/IVesting.sol:IVesting":{source:"contracts/governance/Vesting/IVesting.sol",name:"IVesting",title:"Interface for Vesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingLogic contract to implement stakeTokens function and on VestingRegistry contract to call IVesting(vesting).stakeTokens function at a vesting instance.",methods:{"duration()":{constant:!1,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"endDate()":{constant:!1,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/Vesting/IVestingFactory.sol:IVestingFactory":{source:"contracts/governance/Vesting/IVestingFactory.sol",name:"IVestingFactory",title:"Interface for Vesting Factory contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingFactory contract to override empty implemention of deployVesting and deployTeamVesting functions and on VestingRegistry contract to use an instance of VestingFactory.",methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/governance/Vesting/OriginInvestorsClaim.sol:OriginInvestorsClaim":{source:"contracts/governance/Vesting/OriginInvestorsClaim.sol",name:"OriginInvestorsClaim",title:"Origin investors claim vested cSOV tokens.",notice:"// TODO: fund this contract with a total amount of SOV needed to distribute.",constructor:{inputs:[{internalType:"address",name:"vestingRegistryAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ClaimTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"investor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimTransferred",type:"event"},"ClaimVested(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"investor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimVested",type:"event"},"InvestorsAmountsListAppended(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"qty",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"InvestorsAmountsListAppended",type:"event"},"InvestorsAmountsListInitialized(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"qty",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"InvestorsAmountsListInitialized",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"SOV_VESTING_CLIFF()":{constant:!0,inputs:[],name:"SOV_VESTING_CLIFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"appendInvestorsAmountsList(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"investors",type:"address[]"},{internalType:"uint256[]",name:"claimAmounts",type:"uint256[]"}],name:"appendInvestorsAmountsList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{claimAmounts:"The list of amounts for investors investors[i] will receive claimAmounts[i] of SOV.",investors:"The list of investors addresses to add to the list. Duplicates will be skipped."},notice:"The contract should be approved or transferred necessary amount of SOV prior to calling the function."},"authorizedBalanceWithdraw(address)":{constant:!1,inputs:[{internalType:"address",name:"toAddress",type:"address"}],name:"authorizedBalanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{toAddress:"The recipient address of all this contract tokens."},notice:"In case we have unclaimed tokens or in emergency case this function transfers all SOV tokens to a given address."},"claim()":{constant:!1,inputs:[],name:"claim",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Claim tokens from this contract. If vestingTerm is not yet achieved a vesting is created. Otherwise tokens are tranferred."},"investorsAmountsList(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"investorsAmountsList",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"investorsListInitialized()":{constant:!0,inputs:[],name:"investorsListInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"investorsQty()":{constant:!0,inputs:[],name:"investorsQty",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setInvestorsAmountsListInitialized()":{constant:!1,inputs:[],name:"setInvestorsAmountsListInitialized",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Should be called after the investors list setup completed. This function checks whether the SOV token balance of the contract is enough and sets status list to initialized."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"totalAmount()":{constant:!0,inputs:[],name:"totalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract VestingRegistry",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingTerm()":{constant:!0,inputs:[],name:"vestingTerm",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Vesting/OrigingVestingCreator.sol:OrigingVestingCreator":{source:"contracts/governance/Vesting/OrigingVestingCreator.sol",name:"OrigingVestingCreator",title:"Temp contract for checking address, creating and staking tokens.",notice:"It casts an instance of vestingRegistry and by using createVesting function it creates a vesting, gets it and stakes some tokens w/ this vesting.",constructor:{inputs:[{internalType:"address",name:"_vestingRegistry",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be vested.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create a vesting, get it and stake some tokens w/ this vesting."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract VestingRegistry",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Vesting/RSOV.sol:RSOV":{source:"contracts/governance/Vesting/RSOV.sol",name:"RSOV",title:"Sovryn Reward Token.",notice:"The RSOV token (Sovryn Reward Token) goal is to allow users to get rewards through the generation of protocol fees. The mint function accepts SOV tokens and mints the same amount of RSOV tokens. When burning RSOV tokens, the user gets 1/14th of the tokens sent back to him and the rest get staked in the user’s behalf with a schedule of 4 weeks cliff and period 1 year duration.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20_",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_amount",type:"uint96"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be burnt."},notice:"Burn RSOV tokens and stakes the respective amount SOV tokens in the user's behalf."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).\t * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.\t * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be mint."},notice:"Hold SOV tokens and mint the respective amount of RSOV tokens."},"mintWithApproval(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mintWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApproval.SOV.approveAndCall -> this.receiveApproval -> this.mintWithApproval",params:{_amount:"The amount of tokens to be mint.",_sender:"The sender of SOV.approveAndCall"},notice:"Hold SOV tokens and mint the respective amount of RSOV tokens."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/governance/Vesting/TeamVesting.sol:TeamVesting":{source:"contracts/governance/Vesting/TeamVesting.sol",name:"TeamVesting",title:"Team Vesting Contract.",details:"Vesting contracts shouldn't be upgradable, use Proxy instead of UpgradableProxy.",notice:"A regular vesting contract, but the owner (governance) is able to withdraw earlier without a slashing.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharingProxy",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/governance/Vesting/TokenSender.sol:TokenSender":{source:"contracts/governance/Vesting/TokenSender.sol",name:"TokenSender",title:"SOV Token sender contract.",details:"TODO: Maybe this token transfer functionality should be included in the SOV token contract, because other contracts are requiring it too: VestingRegistry.sol and VestingRegistry2.sol",notice:"This contract includes functions to transfer SOV tokens to a recipient or to several recipients in a list. There is an ACL control check by modifier.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"transferSOVusingList(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_receivers",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"transferSOVusingList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amounts:"The amounts to be transferred.",_receivers:"The addresses of the SOV receivers."},notice:"Transfer given amounts of SOV to the given addresses."}}},"contracts/governance/Vesting/Vesting.sol:Vesting":{source:"contracts/governance/Vesting/Vesting.sol",name:"Vesting",title:"Vesting Contract.",details:"TODO add tests for governanceWithdrawTokens.",notice:"Team tokens and investor tokens are vested. Therefore, a smart contract needs to be developed to enforce the vesting schedule.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharingProxy",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need to add this implementation to prevent proxy call VestingLogic.governanceWithdrawTokens",params:{receiver:"The receiver of the token withdrawal."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/governance/Vesting/VestingFactory.sol:VestingFactory":{source:"contracts/governance/Vesting/VestingFactory.sol",name:"VestingFactory",title:"Vesting Factory: Contract to deploy vesting contracts of two types: vesting (TokenHolder) and team vesting (Multisig).",notice:"Factory pattern allows to create multiple instances of the same contract and keep track of them easier.",constructor:{inputs:[{internalType:"address",name:"_vestingLogic",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"The address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Team Vesting contract."},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"the address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingLogic()":{constant:!0,inputs:[],name:"vestingLogic",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Vesting/VestingLogic.sol:VestingLogic":{source:"contracts/governance/Vesting/VestingLogic.sol",name:"VestingLogic",title:"Vesting Logic contract.",details:"Deployed by a VestingFactory contract.",notice:"Staking, delegating and withdrawal functionality.",events:{"DividendsCollected(address,address,address,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"loanPoolToken",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint32",name:"maxCheckpoints",type:"uint32"}],name:"DividendsCollected",type:"event"},"MigratedToNewStakingContract(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"newStakingContract",type:"address"}],name:"MigratedToNewStakingContract",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"TokensWithdrawn",type:"event"},"VotesDelegated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"delegatee",type:"address"}],name:"VotesDelegated",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"collectDividends(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"collectDividends",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_loanPoolToken:"The loan pool token address.",_maxCheckpoints:"Maximum number of checkpoints to be processed.",_receiver:"The receiver of tokens or msg.sender"},notice:"Collect dividends from fee sharing proxy."},"delegate(address)":{constant:!1,inputs:[{internalType:"address",name:"_delegatee",type:"address"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_delegatee:"The address to delegate votes to."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be called only by owner.",params:{receiver:"The receiving address."},notice:"Withdraws all tokens from the staking contract and forwards them to an address specified by the token owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Allows the owners to migrate the positions to a new staking contract."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake."},notice:"Stakes tokens according to the vesting schedule."},"stakeTokensWithApproval(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokensWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApproval.SOV.approveAndCall -> this.receiveApproval -> this.stakeTokensWithApproval",params:{_amount:"The amount of tokens to stake.",_sender:"The sender of SOV.approveAndCall"},notice:"Stakes tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The receiving address."},notice:"Withdraws unlocked tokens from the staking contract and forwards them to an address specified by the token owner."}}},"contracts/governance/Vesting/VestingRegistry.sol:VestingRegistry":{source:"contracts/governance/Vesting/VestingRegistry.sol",name:"VestingRegistry",title:"Vesting Registry contract.",notice:"On January 25, 2020, Sovryn launched the Genesis Reservation system. Sovryn community members who controlled a special NFT were granted access to stake BTC or rBTC for cSOV tokens at a rate of 2500 satoshis per cSOV. Per SIP-0003, up to 2,000,000 cSOV were made available in the Genesis event, which will be redeemable on a 1:1 basis for cSOV, subject to approval by existing SOV holders. * On 15 Feb 2021 Sovryn is taking another step in its journey to decentralized financial sovereignty with the vote on SIP 0005. This proposal will enable participants of the Genesis Reservation system to redeem their reserved cSOV tokens for SOV. They will also have the choice to redeem cSOV for rBTC if they decide to exit the system. * This contract deals with the vesting and redemption of cSOV tokens.",constructor:{inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address[]",name:"_CSOVtokens",type:"address[]"},{internalType:"uint256",name:"_priceSats",type:"uint256"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharingProxy",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"CSOVReImburse(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"CSOVamount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reImburseAmount",type:"uint256"}],name:"CSOVReImburse",type:"event"},"CSOVTokensExchanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CSOVTokensExchanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"CSOV_VESTING_CLIFF()":{constant:!0,inputs:[],name:"CSOV_VESTING_CLIFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOV_VESTING_DURATION()":{constant:!0,inputs:[],name:"CSOV_VESTING_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOVtokens(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"CSOVtokens",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"FOUR_WEEKS()":{constant:!0,inputs:[],name:"FOUR_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"blacklist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"blacklist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"budget()":{constant:!0,inputs:[],name:"budget",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The token balance of the contract.",notice:"Get contract balance."},"createTeamVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Team Vesting contract."},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Vesting contract."},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function",notice:"Deposit function to receiving value (rBTC)."},"exchangeAllCSOV()":{constant:!1,inputs:[],name:"exchangeAllCSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Exchange cSOV to SOV with 1:1 rate"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The team vesting contract address for the given token owner.",notice:"Query the team vesting contract for an account."},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The vesting contract address for the given token owner.",notice:"Query the vesting contract for an account."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lockedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceSats()":{constant:!0,inputs:[],name:"priceSats",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"processedList(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"processedList",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"reImburse()":{constant:!1,inputs:[],name:"reImburse",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"cSOV payout to sender with rBTC currency. 1.- Check holder cSOV balance by adding up every cSOV token balance. 2.- ReImburse rBTC if funds available. 3.- And store holder address in processedList."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setBlacklistFlag(address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_blacklisted",type:"bool"}],name:"setBlacklistFlag",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address to be blacklisted.",_blacklisted:"The flag to add/remove to/from a blacklist."},notice:"Set blacklist flag (true/false)."},"setCSOVtokens(address[])":{constant:!1,inputs:[{internalType:"address[]",name:"_CSOVtokens",type:"address[]"}],name:"setCSOVtokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_CSOVtokens:"The array of cSOV tokens."},notice:"Sets cSOV tokens array. High level endpoint."},"setLockedAmount(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setLockedAmount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address with locked amount.",_amount:"The amount to be locked."},notice:"Set amount to be subtracted from user token balance."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Splitting code on two functions: high level and low level is a pattern that makes easy to extend functionality in a readable way, without accidentally breaking the actual action being performed. For example, checks should be done on high level endpoint, while core functionality should be coded on the low level function.",params:{_vestingFactory:"The address of vesting factory contract."},notice:"Sets vesting factory address. High level endpoint."},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake.",_vesting:"The address of Vesting contract."},notice:"Stake tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is a wrapper for ERC-20 transfer function w/ additional checks and triggering an event.",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"vestingContracts(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingContracts",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAll(address)":{constant:!1,inputs:[{internalType:"address payable",name:"to",type:"address"}],name:"withdrawAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{to:"The account address to send the balance to."},notice:"Send all contract balance to an account."}}},"contracts/governance/Vesting/VestingRegistry2.sol:VestingRegistry2":{source:"contracts/governance/Vesting/VestingRegistry2.sol",name:"VestingRegistry2",title:"VestingRegistry 2 contract.",notice:"One time contract needed to distribute tokens to origin sales investors.",constructor:{inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address[]",name:"_CSOVtokens",type:"address[]"},{internalType:"uint256",name:"_priceSats",type:"uint256"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharingProxy",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"CSOVTokensExchanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CSOVTokensExchanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"CSOV_VESTING_CLIFF()":{constant:!0,inputs:[],name:"CSOV_VESTING_CLIFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOV_VESTING_DURATION()":{constant:!0,inputs:[],name:"CSOV_VESTING_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOVtokens(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"CSOVtokens",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"FOUR_WEEKS()":{constant:!0,inputs:[],name:"FOUR_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"blacklist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"blacklist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"budget()":{constant:!0,inputs:[],name:"budget",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The token balance of the contract.",notice:"Get contract balance."},"createTeamVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Team Vesting contract."},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Vesting contract."},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function",notice:"Deposit function to receiving value (rBTC)."},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The team vesting contract address for the given token owner.",notice:"Query the team vesting contract for an account."},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The vesting contract address for the given token owner.",notice:"Query the vesting contract for an account."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lockedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceSats()":{constant:!0,inputs:[],name:"priceSats",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"processedList(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"processedList",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"setBlacklistFlag(address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_blacklisted",type:"bool"}],name:"setBlacklistFlag",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address to be blacklisted.",_blacklisted:"The flag to add/remove to/from a blacklist."},notice:"Set blacklist flag (true/false)."},"setCSOVtokens(address[])":{constant:!1,inputs:[{internalType:"address[]",name:"_CSOVtokens",type:"address[]"}],name:"setCSOVtokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_CSOVtokens:"The array of cSOV tokens."},notice:"Sets cSOV tokens array. High level endpoint."},"setLockedAmount(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setLockedAmount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address with locked amount.",_amount:"The amount to be locked."},notice:"Set amount to be subtracted from user token balance."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Splitting code on two functions: high level and low level is a pattern that makes easy to extend functionality in a readable way, without accidentally breaking the actual action being performed. For example, checks should be done on high level endpoint, while core functionality should be coded on the low level function.",params:{_vestingFactory:"The address of vesting factory contract."},notice:"Sets vesting factory address. High level endpoint."},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to stake",_vesting:"the address of Vesting contract"},notice:"Stake tokens according to the vesting schedule"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is a wrapper for ERC-20 transfer function w/ additional checks and triggering an event.",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"vestingContracts(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingContracts",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAll(address)":{constant:!1,inputs:[{internalType:"address payable",name:"to",type:"address"}],name:"withdrawAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{to:"The account address to send the balance to."},notice:"Send all contract balance to an account."}}},"contracts/governance/Vesting/VestingRegistry3.sol:VestingRegistry3":{source:"contracts/governance/Vesting/VestingRegistry3.sol",name:"VestingRegistry3",constructor:{inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharingProxy",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"createTeamVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Team Vesting contract"},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Vesting contract"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"the owner of the tokens"},notice:"returns team vesting contract address for the given token owner"},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"the owner of the tokens"},notice:"returns vesting contract address for the given token owner"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingFactory:"the address of vesting factory contract"},notice:"sets vesting factory address"},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to stake",_vesting:"the address of Vesting contract"},notice:"stakes tokens according to the vesting schedule"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be transferred",_receiver:"the address of the SOV receiver"},notice:"transfers SOV tokens to given address"},"vestingContracts(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingContracts",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/governance/Vesting/VestingStorage.sol:VestingStorage":{source:"contracts/governance/Vesting/VestingStorage.sol",name:"VestingStorage",title:"Vesting Storage Contract.",details:"Use Ownable as a parent to align storage structure for Logic and Proxy contracts.",notice:"This contract is just the storage required for vesting. It is parent of VestingLogic and TeamVesting.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/interfaces/IChai.sol:IChai":{source:"contracts/interfaces/IChai.sol",name:"IChai",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"draw(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"draw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"exit(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"exit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"join(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"join",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"move(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"move",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/interfaces/IChai.sol:IPot":{source:"contracts/interfaces/IChai.sol",name:"IPot",methods:{"chi()":{constant:!0,inputs:[],name:"chi",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"dsr()":{constant:!0,inputs:[],name:"dsr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rho()":{constant:!0,inputs:[],name:"rho",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/interfaces/IERC20.sol:IERC20":{source:"contracts/interfaces/IERC20.sol",name:"IERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/interfaces/ILoanPool.sol:ILoanPool":{source:"contracts/interfaces/ILoanPool.sol",name:"ILoanPool",methods:{"borrowInterestRate()":{constant:!0,inputs:[],name:"borrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenPrice()":{constant:!0,inputs:[],name:"tokenPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalAssetSupply()":{constant:!0,inputs:[],name:"totalAssetSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/interfaces/ISovryn.sol:ISovryn":{source:"contracts/interfaces/ISovryn.sol",name:"ISovryn",events:{"Borrow(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"newPrincipal",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Borrow",type:"event"},"CloseWithDeposit(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"CloseWithDeposit",type:"event"},"CloseWithSwap(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"uint256",name:"positionCloseSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"exitPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"CloseWithSwap",type:"event"},"DelegatedManagerSet(bytes32,address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"delegated",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"DelegatedManagerSet",type:"event"},"DepositCollateral(bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"depositAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"DepositCollateral",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"Liquidate(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"lender",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Liquidate",type:"event"},"LoanParamsDisabled(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsDisabled",type:"event"},"LoanParamsIdDisabled(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdDisabled",type:"event"},"LoanParamsIdSetup(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdSetup",type:"event"},"LoanParamsSetup(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsSetup",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAffiliateFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetAffiliateFeePercent",type:"event"},"SetBorrowingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetBorrowingFeePercent",type:"event"},"SetFeesController(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldController",type:"address"},{indexed:!0,internalType:"address",name:"newController",type:"address"}],name:"SetFeesController",type:"event"},"SetLendingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLendingFeePercent",type:"event"},"SetLiquidationIncentivePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLiquidationIncentivePercent",type:"event"},"SetLoanPool(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"loanPool",type:"address"},{indexed:!0,internalType:"address",name:"underlying",type:"address"}],name:"SetLoanPool",type:"event"},"SetMaxSwapSize(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetMaxSwapSize",type:"event"},"SetPriceFeedContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetPriceFeedContract",type:"event"},"SetProtocolTokenAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldProtocolToken",type:"address"},{indexed:!0,internalType:"address",name:"newProtocolToken",type:"address"}],name:"SetProtocolTokenAddress",type:"event"},"SetRebatePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldRebatePercent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRebatePercent",type:"uint256"}],name:"SetRebatePercent",type:"event"},"SetRolloverBaseReward(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetRolloverBaseReward",type:"event"},"SetSovrynSwapContractRegistryAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldSovrynSwapContractRegistryAddress",type:"address"},{indexed:!0,internalType:"address",name:"newSovrynSwapContractRegistryAddress",type:"address"}],name:"SetSovrynSwapContractRegistryAddress",type:"event"},"SetSupportedTokens(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetSupportedTokens",type:"event"},"SetSwapsImplContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetSwapsImplContract",type:"event"},"SetTradingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetTradingFeePercent",type:"event"},"SetWrbtcToken(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldWethToken",type:"address"},{indexed:!0,internalType:"address",name:"newWethToken",type:"address"}],name:"SetWrbtcToken",type:"event"},"Trade(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"positionSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryLeverage",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"Trade",type:"event"},"WithdrawBorrowingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawBorrowingFees",type:"event"},"WithdrawFees(address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"lendingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tradingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowingAmount",type:"uint256"}],name:"WithdrawFees",type:"event"},"WithdrawLendingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawLendingFees",type:"event"},"WithdrawTradingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawTradingFees",type:"event"},"swapExcess(bool,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"shouldRefund",type:"bool"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountInRbtc",type:"uint256"},{indexed:!1,internalType:"uint256",name:"threshold",type:"uint256"}],name:"swapExcess",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowOrTradeFromPool(bytes32,bytes32,bool,uint256,address[4],uint256[5],bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"bool",name:"isTorqueLoan",type:"bool"},{internalType:"uint256",name:"initialMargin",type:"uint256"},{internalType:"address[4]",name:"sentAddresses",type:"address[4]"},{internalType:"uint256[5]",name:"sentValues",type:"uint256[5]"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"borrowOrTradeFromPool",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",notice:"/// Loan Openings //////"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"closeWithDeposit(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"closeWithDeposit",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"address",name:"withdrawToken",type:"address"}],payable:!0,stateMutability:"payable",type:"function"},"closeWithSwap(bytes32,address,uint256,bool,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"swapAmount",type:"uint256"},{internalType:"bool",name:"returnTokenIsCollateral",type:"bool"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"closeWithSwap",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"address",name:"withdrawToken",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"depositCollateral(bytes32,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"depositCollateral",outputs:[],payable:!0,stateMutability:"payable",type:"function",notice:"/// Loan Maintenance //////"},"depositProtocolToken(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"depositProtocolToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"disableLoanParams(bytes32[])":{constant:!1,inputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"extendLoanByInterest(bytes32,address,uint256,bool,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"payer",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"bool",name:"useCollateral",type:"bool"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"extendLoanByInterest",outputs:[{internalType:"uint256",name:"secondsExtended",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getActiveLoans(uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"bool",name:"unsafeOnly",type:"bool"}],name:"getActiveLoans",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct ISovryn.LoanReturnData[]",name:"loansData",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function"},"getBorrowAmount(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralTokenAmount",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getBorrowAmount",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getEstimatedMarginExposure(address,address,uint256,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"newPrincipal",type:"uint256"}],name:"getEstimatedMarginExposure",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getLegacyOracle(address)":{constant:!0,inputs:[{internalType:"address",name:"ref",type:"address"}],name:"getLegacyOracle",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getLenderInterestData(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getLenderInterestData",outputs:[{internalType:"uint256",name:"interestPaid",type:"uint256"},{internalType:"uint256",name:"interestPaidDate",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestUnPaid",type:"uint256"},{internalType:"uint256",name:"interestFeePercent",type:"uint256"},{internalType:"uint256",name:"principalTotal",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getLoan(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"}],name:"getLoan",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct ISovryn.LoanReturnData",name:"loanData",type:"tuple"}],payable:!1,stateMutability:"view",type:"function"},"getLoanInterestData(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"}],name:"getLoanInterestData",outputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositTotal",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getLoanParams(bytes32[])":{constant:!0,inputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],name:"getLoanParams",outputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function"},"getLoanParamsList(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getLoanParamsList",outputs:[{internalType:"bytes32[]",name:"loanParamsList",type:"bytes32[]"}],payable:!1,stateMutability:"view",type:"function"},"getLoanPoolsList(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getLoanPoolsList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"getRequiredCollateral(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"newPrincipal",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getRequiredCollateral",outputs:[{internalType:"uint256",name:"collateralAmountRequired",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getTarget(string)":{constant:!0,inputs:[{internalType:"string",name:"sig",type:"string"}],name:"getTarget",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTotalPrincipal(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getTotalPrincipal",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getUserLoans(address,uint256,uint256,uint256,bool,bool)":{constant:!0,inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"loanType",type:"uint256"},{internalType:"bool",name:"isLender",type:"bool"},{internalType:"bool",name:"unsafeOnly",type:"bool"}],name:"getUserLoans",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct ISovryn.LoanReturnData[]",name:"loansData",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function"},"isLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"loanPool",type:"address"}],name:"isLoanPool",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidate(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"closeAmount",type:"uint256"}],name:"liquidate",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"seizedAmount",type:"uint256"},{internalType:"address",name:"seizedToken",type:"address"}],payable:!0,stateMutability:"payable",type:"function",notice:"/// Loan Closings //////"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"reduceLoanByInterest(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"}],name:"reduceLoanByInterest",outputs:[{internalType:"uint256",name:"secondsReduced",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"replaceContract(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"replaceContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"/// Protocol //////"},"rollover(bytes32,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"rollover",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAffiliateFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setAffiliateFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setBorrowingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setBorrowingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setDelegatedManager(bytes32,address,bool)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"delegated",type:"address"},{internalType:"bool",name:"toggle",type:"bool"}],name:"setDelegatedManager",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setFeesController(address)":{constant:!1,inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setFeesController",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setLegacyOracles(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"refs",type:"address[]"},{internalType:"address[]",name:"oracles",type:"address[]"}],name:"setLegacyOracles",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"/// Protocol Migration //////"},"setLendingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setLendingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setLiquidationIncentivePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newAmount",type:"uint256"}],name:"setLiquidationIncentivePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setLoanPool(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"pools",type:"address[]"},{internalType:"address[]",name:"assets",type:"address[]"}],name:"setLoanPool",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setMaxDisagreement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newAmount",type:"uint256"}],name:"setMaxDisagreement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setMaxSwapSize(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newAmount",type:"uint256"}],name:"setMaxSwapSize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setPriceFeedContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setPriceFeedContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"/// Protocol Settings //////"},"setProtocolTokenAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_protocolTokenAddress",type:"address"}],name:"setProtocolTokenAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setRebatePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"rebatePercent",type:"uint256"}],name:"setRebatePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setRolloverBaseReward(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionCost",type:"uint256"}],name:"setRolloverBaseReward",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setSourceBuffer(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newAmount",type:"uint256"}],name:"setSourceBuffer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setSovrynSwapContractRegistryAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"registryAddress",type:"address"}],name:"setSovrynSwapContractRegistryAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setSupportedTokens(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"addrs",type:"address[]"},{internalType:"bool[]",name:"toggles",type:"bool[]"}],name:"setSupportedTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setSwapsImplContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setSwapsImplContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setTargets(string[],address[])":{constant:!1,inputs:[{internalType:"string[]",name:"sigsArr",type:"string[]"},{internalType:"address[]",name:"targetsArr",type:"address[]"}],name:"setTargets",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setTradingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setTradingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setWrbtcToken(address)":{constant:!1,inputs:[{internalType:"address",name:"wrbtcTokenAddress",type:"address"}],name:"setWrbtcToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[])":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"}],name:"setupLoanParams",outputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],payable:!1,stateMutability:"nonpayable",type:"function",notice:"/// Loan Settings //////"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAccruedInterest(address)":{constant:!1,inputs:[{internalType:"address",name:"loanToken",type:"address"}],name:"withdrawAccruedInterest",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawBorrowingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawBorrowingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawCollateral(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"}],name:"withdrawCollateral",outputs:[{internalType:"uint256",name:"actualWithdrawAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address,address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawLendingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawLendingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawProtocolToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawProtocolToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawTradingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawTradingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/interfaces/IWrbtc.sol:IWrbtc":{source:"contracts/interfaces/IWrbtc.sol",name:"IWrbtc",methods:{"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/interfaces/IWrbtcERC20.sol:IWrbtcERC20":{source:"contracts/interfaces/IWrbtcERC20.sol",name:"IWrbtcERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/locked/ILockedSOV.sol:ILockedSOV":{source:"contracts/locked/ILockedSOV.sol",name:"ILockedSOV",title:"The Locked SOV Interface.",author:"Franklin Richards - powerhousefrank@protonmail.com",details:"Only use it if you know what you are doing.",notice:"This interface is an incomplete yet useful for future migration of LockedSOV Contract.",methods:{"depositSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_sovAmount",type:"uint256"}],name:"depositSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_sovAmount:"The amount of SOV to be added to the locked balance.",_userAddress:"The user whose locked balance has to be updated with _sovAmount."},notice:"Adds SOV to the locked balance of a user."}}},"contracts/locked/LockedSOV.sol:LockedSOV":{source:"contracts/locked/LockedSOV.sol",name:"LockedSOV",title:"The Locked SOV Contract.",author:"Franklin Richards - powerhousefrank@protonmail.com",notice:"This contract is used to receive reward from other contracts, Create Vesting and Stake Tokens.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_vestingRegistry",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address[]",name:"_admins",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newAdmin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_removedAdmin",type:"address"}],name:"AdminRemoved",type:"event"},"Deposited(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_sovAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_basisPoint",type:"uint256"}],name:"Deposited",type:"event"},"MigrationStarted(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedSOV",type:"address"}],name:"MigrationStarted",type:"event"},"RegistryCliffAndDurationUpdated(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_vestingRegistry",type:"address"},{indexed:!1,internalType:"uint256",name:"_cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_duration",type:"uint256"}],name:"RegistryCliffAndDurationUpdated",type:"event"},"TokenStaked(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenStaked",type:"event"},"UserTransfered(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"UserTransfered",type:"event"},"VestingCreated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_vesting",type:"address"}],name:"VestingCreated",type:"event"},"Withdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_sovAmount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_newAdmin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_newAdmin:"The address of the new admin."},notice:"The function to add a new admin."},"adminStatus(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"adminStatus",outputs:[{internalType:"bool",name:"_status",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the admin status."},return:"_status True if admin, False otherwise.",notice:"The function to check is an address is admin or not."},"changeRegistryCliffAndDuration(address,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vestingRegistry",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"changeRegistryCliffAndDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"IMPORTANT 1: You have to change Vesting Registry if you want to change Duration and/or Cliff. IMPORTANT 2: `_cliff` and `_duration` is multiplied by 4 weeks in this function.",params:{_cliff:"The time period after which the tokens begin to unlock.",_duration:"The time period after all tokens will have been unlocked.",_vestingRegistry:"The Vesting Registry Address."},notice:"The function to update the Vesting Registry, Duration and Cliff."},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"createVesting()":{constant:!1,inputs:[],name:"createVesting",outputs:[{internalType:"address",name:"_vestingAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",return:"_vestingAddress The New Vesting Contract Created.",notice:"Creates vesting contract (if it hasn't been created yet) for the calling user."},"createVestingAndStake()":{constant:!1,inputs:[],name:"createVestingAndStake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only use this function if the `duration` is small.",notice:"Creates vesting if not already created and Stakes tokens for a user."},"deposit(address,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_sovAmount",type:"uint256"},{internalType:"uint256",name:"_basisPoint",type:"uint256"}],name:"deposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_basisPoint:"The % (in Basis Point)which determines how much will be unlocked immediately.",_sovAmount:"The amount of SOV to be added to the locked and/or unlocked balance.",_userAddress:"The user whose locked balance has to be updated with `_sovAmount`."},notice:"Adds SOV to the user balance (Locked and Unlocked Balance based on `_basisPoint`)."},"depositSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_sovAmount",type:"uint256"}],name:"depositSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is here because there are dependency with other contracts.",params:{_sovAmount:"The amount of SOV to be added to the locked balance.",_userAddress:"The user whose locked balance has to be updated with _sovAmount."},notice:"Adds SOV to the locked balance of a user."},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getLockedBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getLockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the locked balance."},return:"_balance The locked balance of the address `_addr`.",notice:"The function to get the locked balance of a user."},"getUnlockedBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getUnlockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the unlocked balance."},return:"_balance The unlocked balance of the address `_addr`.",notice:"The function to get the unlocked balance of a user."},"migration()":{constant:!0,inputs:[],name:"migration",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"newLockedSOV()":{constant:!0,inputs:[],name:"newLockedSOV",outputs:[{internalType:"contract ILockedSOV",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_adminToRemove",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Only callable by an Admin.",params:{_adminToRemove:"The address of the admin which should be removed."},notice:"The function to remove an admin."},"stakeTokens()":{constant:!1,inputs:[],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.",notice:"Stakes tokens for a user who already have a vesting created."},"startMigration(address)":{constant:!1,inputs:[{internalType:"address",name:"_newLockedSOV",type:"address"}],name:"startMigration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newLockedSOV:"The new locked sov contract address."},notice:"Function to start the process of migration to new contract."},"transfer()":{constant:!1,inputs:[],name:"transfer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Address is not specified to discourage selling lockedSOV to other address.",notice:"Function to transfer the locked balance from this contract to new LockedSOV Contract."},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract VestingRegistry",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdraw(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"A function to withdraw the unlocked balance."},"withdrawAndStakeTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiverAddress",type:"address"}],name:"withdrawAndStakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The user should already have a vesting created, else this function will throw error.",params:{_receiverAddress:"If specified, the unlocked balance will go to this address, else to msg.sender."},notice:"Withdraws unlocked tokens and Stakes Locked tokens for a user who already have a vesting created."}}},"contracts/mixins/EnumerableBytes32Set.sol:EnumerableBytes32Set":{source:"contracts/mixins/EnumerableBytes32Set.sol",name:"EnumerableBytes32Set",title:"Library for managing loan sets.",notice:"Sets have the following properties: * - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. * Include with `using EnumerableBytes32Set for EnumerableBytes32Set.Bytes32Set;`."},"contracts/mixins/FeesHelper.sol:FeesHelper":{source:"contracts/mixins/FeesHelper.sol",name:"FeesHelper",title:"The Fees Helper contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract calculates and pays lending/borrow fees and rewards.",events:{"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mixins/InterestUser.sol:InterestUser":{source:"contracts/mixins/InterestUser.sol",name:"InterestUser",title:"The Interest User contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract pays loan interests.",events:{"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mixins/LiquidationHelper.sol:LiquidationHelper":{source:"contracts/mixins/LiquidationHelper.sol",name:"LiquidationHelper",title:"The Liquidation Helper contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract computes the liquidation amount.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mixins/ProtocolTokenHandler.sol:ProtocolTokenHandler":{source:"contracts/mixins/ProtocolTokenHandler.sol",name:"ProtocolTokenHandler",constructor:{inputs:[{internalType:"address",name:"protocolTokenAddress_",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AddSigner(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"}],name:"AddSigner",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RemoveSigner(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"}],name:"RemoveSigner",type:"event"},"SetRequiredCount(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"requiredCount",type:"uint256"}],name:"SetRequiredCount",type:"event"},"Withdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"addSigner(address)":{constant:!1,inputs:[{internalType:"address",name:"_signer",type:"address"}],name:"addSigner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_signer:"The address of signer added."},notice:"Owner function to add a signer."},"deposit(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Before calling this function to deposit protocol tokens, users need approve this contract to be able to spend or transfer their protocol tokens.",params:{_amount:"The amount of protocol tokens deposited to this contract."},notice:"Deposit an amount of protocol tokens into this contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isSigner(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"removeSigner(address)":{constant:!1,inputs:[{internalType:"address",name:"_signer",type:"address"}],name:"removeSigner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_signer:"The address of signer removed."},notice:"Owner function to remove a signer."},"requiredCount()":{constant:!0,inputs:[],name:"requiredCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setRequiredCount(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"requiredCount_",type:"uint256"}],name:"setRequiredCount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{requiredCount_:"The required amount of signs provided by users."},notice:"Owner function to set the required number of signers."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"userNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"withdraw(address,uint256,uint256,bytes[])":{constant:!1,inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_nonce",type:"uint256"},{internalType:"bytes[]",name:"_signs",type:"bytes[]"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be withdrawn.",_nonce:"The nonce to avoid replay attacks.",_recipient:"The address of recipient.",_signs:"The array including signs from authorized signers, amount/length should equal to requiredCount."},notice:"Withdraw protocol tokens from this contract with signers verification."}}},"contracts/mixins/ProtocolTokenUser.sol:ProtocolTokenUser":{source:"contracts/mixins/ProtocolTokenUser.sol",name:"ProtocolTokenUser",title:"The Protocol Token User contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract implements functionality to withdraw protocol tokens.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mixins/RewardHelper.sol:RewardHelper":{source:"contracts/mixins/RewardHelper.sol",name:"RewardHelper",title:"The Reward Helper contract.",notice:"This contract calculates the reward for rollover transactions. * A rollover is a renewal of a deposit. Instead of liquidating a deposit on maturity, you can roll it over into a new deposit. The outstanding principal of the old deposit is rolled over with or without the interest outstanding on it.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mixins/VaultController.sol:VaultController":{source:"contracts/mixins/VaultController.sol",name:"VaultController",title:"The Vault Controller contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract implements functionality to deposit and withdraw wrBTC and other tokens from the vault.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/BProPriceFeedMockup.sol:BProPriceFeedMockup":{source:"contracts/mockup/BProPriceFeedMockup.sol",name:"BProPriceFeedMockup",methods:{"bproUsdPrice()":{constant:!0,inputs:[],name:"bproUsdPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"BPro USD PRICE",return:"the BPro USD Price [using mocPrecision]"},"setValue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_value",type:"uint256"}],name:"setValue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"value()":{constant:!0,inputs:[],name:"value",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/DummyContract.sol:DummyContract":{source:"contracts/mockup/DummyContract.sol",name:"DummyContract",methods:{"approveTokens(address,address,address)":{constant:!1,inputs:[{internalType:"address",name:"cSOV1",type:"address"},{internalType:"address",name:"cSOV2",type:"address"},{internalType:"address",name:"SOV",type:"address"}],name:"approveTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mockup/FeeSharingProxyMockup.sol:FeeSharingProxyMockup":{source:"contracts/mockup/FeeSharingProxyMockup.sol",name:"FeeSharingProxyMockup",constructor:{inputs:[{internalType:"contract IProtocol",name:"_protocol",type:"address"},{internalType:"contract IStaking",name:"_staking",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"CheckpointAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CheckpointAdded",type:"event"},"FeeWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"FeeWithdrawn",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"},"UserFeeWithdrawn(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UserFeeWithdrawn",type:"event"}},methods:{"getAccumulatedFees(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_loanPoolToken",type:"address"}],name:"getAccumulatedFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_loanPoolToken:"Address of the pool token.",_user:"The address of the user or contract."},return:"The accumulated fee for the message sender.",notice:"Get the accumulated loan pool fee of the message sender."},"lastFeeWithdrawalTime(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lastFeeWithdrawalTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numTokenCheckpoints(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"numTokenCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"processedCheckpoints(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"processedCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"protocol()":{constant:!0,inputs:[],name:"protocol",outputs:[{internalType:"contract IProtocol",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"testData()":{constant:!0,inputs:[],name:"testData",outputs:[{internalType:"address",name:"loanPoolToken",type:"address"},{internalType:"uint32",name:"maxCheckpoints",type:"uint32"},{internalType:"address",name:"receiver",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tokenCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"tokenCheckpoints",outputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint32",name:"timestamp",type:"uint32"},{internalType:"uint96",name:"totalWeightedStake",type:"uint96"},{internalType:"uint96",name:"numTokens",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferTokens(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We just update amount of tokens here and write checkpoint in a separate methods in order to prevent adding checkpoints too often.",params:{_amount:"Amount to be transferred.",_token:"Address of the token."},notice:"Transfer tokens to this contract."},"unprocessedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"unprocessedAmount",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"withdraw(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"withdrawFees",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_token:"Address of the token"},notice:"Withdraw fees for the given token: lendingFee + tradingFee + borrowingFee"}}},"contracts/mockup/GovernorAlphaMockup.sol:GovernorAlphaMockup":{source:"contracts/mockup/GovernorAlphaMockup.sol",name:"GovernorAlphaMockup",constructor:{inputs:[{internalType:"address",name:"timelock_",type:"address"},{internalType:"address",name:"staking_",type:"address"},{internalType:"address",name:"guardian_",type:"address"},{internalType:"uint96",name:"quorumVotes_",type:"uint96"},{internalType:"uint96",name:"_minPercentageVotes",type:"uint96"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event"},"VoteCast(address,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"support",type:"bool"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"}],name:"VoteCast",type:"event"}},methods:{"BALLOT_TYPEHASH()":{constant:!0,inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"__abdicate()":{constant:!1,inputs:[],name:"__abdicate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Sets guardian address to zero."},"__acceptAdmin()":{constant:!1,inputs:[],name:"__acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__executeSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__executeSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__queueSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__queueSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"cancel(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"cancel",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Cancel a proposal by looping and cancelling everyone of its calls."},"castVote(uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"castVote",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",support:"Vote value, yes or no."},notice:"Casts a vote by sender."},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{proposalId:"Proposal index to access the list proposals[] from storage.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",support:"Vote value, yes or no.",v:"The recovery byte of the signature."},notice:"Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"execute(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"execute",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Execute a proposal by looping and performing everyone of its calls."},"getActions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"Arrays of the 4 call parameters: targets, values, signatures, calldatas.",notice:"Get a proposal list of its calls."},"getReceipt(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct GovernorAlpha.Receipt",name:"",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",voter:"A governance stakeholder with voting power."},return:"The voter receipt of the proposal.",notice:"Get a proposal receipt."},"guardian()":{constant:!0,inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"latestProposalIds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"majorityPercentageVotes()":{constant:!0,inputs:[],name:"majorityPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"proposalCount()":{constant:!0,inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"proposalMaxOperations()":{constant:!0,inputs:[],name:"proposalMaxOperations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The maximum number of actions that can be included in a proposal."},"proposalThreshold()":{constant:!0,inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer."},"proposals(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint32",name:"startBlock",type:"uint32"},{internalType:"uint32",name:"endBlock",type:"uint32"},{internalType:"uint96",name:"forVotes",type:"uint96"},{internalType:"uint96",name:"againstVotes",type:"uint96"},{internalType:"uint96",name:"quorum",type:"uint96"},{internalType:"uint96",name:"majorityPercentage",type:"uint96"},{internalType:"uint64",name:"eta",type:"uint64"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"},{internalType:"address",name:"proposer",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"propose(address[],uint256[],string[],bytes[],string)":{constant:!1,inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{calldatas:"Array of payloads for the calls on proposal execution.",description:"Text describing the purpose of the proposal.",signatures:"Array of function signatures to call on proposal execution.",targets:"Array of contract addresses to perform proposal execution.",values:"Array of rBTC amounts to send on proposal execution."},notice:"Create a new proposal."},"queue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"queue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Enqueue a proposal and everyone of its calls."},"quorumPercentageVotes()":{constant:!0,inputs:[],name:"quorumPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"quorumVotes()":{constant:!0,inputs:[],name:"quorumVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"state(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum GovernorAlpha.ProposalState",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"The state of the proposal: Canceled, Pending, Active, Defeated, Succeeded, Executed, Expired.",notice:"Get a proposal state."},"timelock()":{constant:!0,inputs:[],name:"timelock",outputs:[{internalType:"contract ITimelock",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"votingDelay()":{constant:!0,inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The delay before voting on a proposal may take place, once proposed."},"votingPeriod()":{constant:!0,inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"}}},"contracts/mockup/LockedSOVMockup.sol:LockedSOVMockup":{source:"contracts/mockup/LockedSOVMockup.sol",name:"LockedSOVMockup",title:"An mockup for the Locked SOV Contract.",author:"Franklin Richards - powerhousefrank@protonmail.com",details:"This is not a complete mockup of the Locked SOV Contract.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address[]",name:"_admins",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newAdmin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_removedAdmin",type:"address"}],name:"AdminRemoved",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_newAdmin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newAdmin:"The address of the new admin."},notice:"The function to add a new admin."},"depositSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_sovAmount",type:"uint256"}],name:"depositSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_sovAmount:"The amount of SOV to be added to the locked balance.",_userAddress:"The user whose locked balance has to be updated with _sovAmount."},notice:"Adds SOV to the locked balance of a user."},"getLockedBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"getLockedBalance",outputs:[{internalType:"uint256",name:"_balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_addr:"The address of the user to check the locked balance."},return:"_balance The locked balance of the address `_addr`.",notice:"The function to get the locked balance of a user."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_adminToRemove",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_adminToRemove:"The address of the admin which should be removed."},notice:"The function to remove an admin."}}},"contracts/mockup/PriceFeedRSKOracleMockup.sol:PriceFeedRSKOracleMockup":{source:"contracts/mockup/PriceFeedRSKOracleMockup.sol",name:"PriceFeedRSKOracleMockup",methods:{"getPricing()":{constant:!0,inputs:[],name:"getPricing",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"has()":{constant:!0,inputs:[],name:"has",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setHas(bool)":{constant:!1,inputs:[{internalType:"bool",name:"_has",type:"bool"}],name:"setHas",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setValue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_value",type:"uint256"}],name:"setValue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"value()":{constant:!0,inputs:[],name:"value",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/PriceFeedsMoCMockup.sol:PriceFeedsMoCMockup":{source:"contracts/mockup/PriceFeedsMoCMockup.sol",name:"PriceFeedsMoCMockup",methods:{"has()":{constant:!0,inputs:[],name:"has",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"peek()":{constant:!0,inputs:[],name:"peek",outputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setHas(bool)":{constant:!1,inputs:[{internalType:"bool",name:"_has",type:"bool"}],name:"setHas",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setValue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_value",type:"uint256"}],name:"setValue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"value()":{constant:!0,inputs:[],name:"value",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/ProtocolSettingsMockup.sol:ProtocolSettingsMockup":{source:"contracts/mockup/ProtocolSettingsMockup.sol",name:"ProtocolSettingsMockup",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAffiliateFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetAffiliateFeePercent",type:"event"},"SetBorrowingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetBorrowingFeePercent",type:"event"},"SetFeesController(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldController",type:"address"},{indexed:!0,internalType:"address",name:"newController",type:"address"}],name:"SetFeesController",type:"event"},"SetLendingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLendingFeePercent",type:"event"},"SetLiquidationIncentivePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLiquidationIncentivePercent",type:"event"},"SetLoanPool(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"loanPool",type:"address"},{indexed:!0,internalType:"address",name:"underlying",type:"address"}],name:"SetLoanPool",type:"event"},"SetMaxSwapSize(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetMaxSwapSize",type:"event"},"SetPriceFeedContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetPriceFeedContract",type:"event"},"SetProtocolTokenAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldProtocolToken",type:"address"},{indexed:!0,internalType:"address",name:"newProtocolToken",type:"address"}],name:"SetProtocolTokenAddress",type:"event"},"SetRebatePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldRebatePercent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRebatePercent",type:"uint256"}],name:"SetRebatePercent",type:"event"},"SetRolloverBaseReward(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetRolloverBaseReward",type:"event"},"SetSovrynSwapContractRegistryAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldSovrynSwapContractRegistryAddress",type:"address"},{indexed:!0,internalType:"address",name:"newSovrynSwapContractRegistryAddress",type:"address"}],name:"SetSovrynSwapContractRegistryAddress",type:"event"},"SetSupportedTokens(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetSupportedTokens",type:"event"},"SetSwapsImplContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetSwapsImplContract",type:"event"},"SetTradingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetTradingFeePercent",type:"event"},"SetWrbtcToken(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldWethToken",type:"address"},{indexed:!0,internalType:"address",name:"newWethToken",type:"address"}],name:"SetWrbtcToken",type:"event"},"WithdrawBorrowingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawBorrowingFees",type:"event"},"WithdrawFees(address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"lendingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tradingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowingAmount",type:"uint256"}],name:"WithdrawFees",type:"event"},"WithdrawLendingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawLendingFees",type:"event"},"WithdrawTradingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawTradingFees",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"depositProtocolToken(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"depositProtocolToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The tokens of fees to send."},notice:"The owner calls this function to deposit protocol tokens."},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getLoanPoolsList(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getLoanPoolsList",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],payable:!1,stateMutability:"view",type:"function",params:{count:"The limit.",start:"The offset."},return:"The array of loan pools.",notice:"Get a list of loan pools."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"loanPool",type:"address"}],name:"isLoanPool",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"By querying its underlying token.",params:{loanPool:"The token address to check."},notice:"Check whether a token is a pool token."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAffiliateFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setAffiliateFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for affiliateFeePercent."},notice:"Set the value of affiliateFeePercent storage variable."},"setBorrowingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setBorrowingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for borrowingFeePercent."},notice:"Set the value of borrowingFeePercent storage variable."},"setBorrowingFeeTokensHeld(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amout",type:"uint256"}],name:"setBorrowingFeeTokensHeld",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setFeesController(address)":{constant:!1,inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setFeesController",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The fee sharing proxy must be the feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees.",params:{newController:"The new address of the feesController."},notice:"Set the address of the feesController instance."},"setLendingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setLendingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for lendingFeePercent."},notice:"Set the value of lendingFeePercent storage variable."},"setLendingFeeTokensHeld(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amout",type:"uint256"}],name:"setLendingFeeTokensHeld",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setLiquidationIncentivePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setLiquidationIncentivePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for liquidationIncentivePercent."},notice:"Set the value of liquidationIncentivePercent storage variable."},"setLoanPool(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"pools",type:"address[]"},{internalType:"address[]",name:"assets",type:"address[]"}],name:"setLoanPool",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{assets:"The array of addresses of the corresponding underlying tokens.",pools:"The array of addresses of new loan pool instances."},notice:"Set a list of loan pools and its tokens."},"setMaxDisagreement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setMaxDisagreement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for maxDisagreement."},notice:"Set the value of the maximum swap spread."},"setMaxSwapSize(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setMaxSwapSize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for the maximum swap size."},notice:"Set the value of the swap size limit."},"setPriceFeedContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setPriceFeedContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newContract:"The address of the Price Feed new instance."},notice:"Set the address of the Price Feed instance."},"setProtocolTokenAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_protocolTokenAddress",type:"address"}],name:"setProtocolTokenAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_protocolTokenAddress:"The address of the protocol token contract."},notice:"Set the protocol token contract address."},"setRebatePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"rebatePercent",type:"uint256"}],name:"setRebatePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{rebatePercent:"The fee rebate percent."},notice:"Set the fee rebate percent."},"setRolloverBaseReward(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"baseRewardValue",type:"uint256"}],name:"setRolloverBaseReward",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{baseRewardValue:"The base reward."},notice:"Set rollover base reward. It should be denominated in wrBTC."},"setSourceBuffer(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setSourceBuffer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"To avoid rounding issues on the swap rate a small buffer is implemented.",params:{newValue:"The new value for the maximum source buffer."},notice:"Set the value of the maximum source buffer."},"setSovrynSwapContractRegistryAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"registryAddress",type:"address"}],name:"setSovrynSwapContractRegistryAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{registryAddress:"the address of the registry contract."},notice:"Set the contract registry address of the SovrynSwap network."},"setSupportedTokens(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"addrs",type:"address[]"},{internalType:"bool[]",name:"toggles",type:"bool[]"}],name:"setSupportedTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addrs:"The array of addresses of the tokens.",toggles:"The array of flags indicating whether  the corresponding token is supported or not."},notice:"Set a list of supported tokens by populating the  storage supportedTokens mapping."},"setSwapsImplContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setSwapsImplContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newContract:"The address of the asset swapper new instance."},notice:"Set the address of the asset swapper instance."},"setTradingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setTradingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for tradingFeePercent."},notice:"Set the value of tradingFeePercent storage variable."},"setTradingFeeTokensHeld(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amout",type:"uint256"}],name:"setTradingFeeTokensHeld",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setWrbtcToken(address)":{constant:!1,inputs:[{internalType:"address",name:"wrbtcTokenAddress",type:"address"}],name:"setWrbtcToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{wrbtcTokenAddress:"The address of the wrBTC contract."},notice:"Set the wrBTC contract address."},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawBorrowingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawBorrowingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from borrowing operations."},"withdrawFees(address,address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"The withdrawn amount.",notice:"The feesController calls this function to withdraw fees from three sources: lending, trading and borrowing."},"withdrawLendingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawLendingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from lending operations."},"withdrawProtocolToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawProtocolToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for ProtocolTokenUser::_withdrawProtocolToken internal function.",params:{amount:"The amount of tokens to get.",receiver:"The address of the withdrawal recipient."},return:"The protocol token address.Withdrawal success (true/false).",notice:"The owner calls this function to withdraw protocol tokens."},"withdrawTradingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawTradingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from trading operations."},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/StakingMockup.sol:StakingMockup":{source:"contracts/mockup/StakingMockup.sol",name:"StakingMockup",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"MOCK_priorTotalVotingPower(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_priorTotalVotingPower",type:"uint96"}],name:"MOCK_priorTotalVotingPower",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"MOCK_priorWeightedStake(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_priorWeightedStake",type:"uint96"}],name:"MOCK_priorWeightedStake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint96",name:"balance",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Iterate checkpoints adding up stakes.",params:{account:"The address of the account to get the balance of."},return:"The number of tokens held.",notice:"Get the number of staked tokens held by the user account."},"balanceOf_MultipliedByTwo(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf_MultipliedByTwo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"calculatePriorWeightedStake(address,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"calculatePriorWeightedStake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},notice:"Compute the weight for a specific date."},"delegate(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to.",lockDate:"the date if the position to delegate."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{delegatee:"The address to delegate votes to.",expiry:"The time at which to expire the signature.",lockDate:"The date until which the position is locked.",nonce:"The contract state required to match the signature.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",v:"The recovery byte of the signature."},notice:"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"extendStakingDuration(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"previousLock",type:"uint256"},{internalType:"uint256",name:"until",type:"uint256"}],name:"extendStakingDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{previousLock:"The old unlocking timestamp.",until:"The new unlocking timestamp in seconds."},notice:"Extend the staking duration until the specified date."},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentStakedUntil(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"lockedTS",type:"uint256"}],name:"getCurrentStakedUntil",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{lockedTS:"The timestamp to get the staked tokens for."},notice:"Get the current number of tokens staked for a day."},"getCurrentVotes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",params:{account:"The address to get votes balance."},return:"The number of current votes for a user account.",notice:"Get the current votes balance for a user account."},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getStakes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getStakes",outputs:[{internalType:"uint256[]",name:"dates",type:"uint256[]"},{internalType:"uint96[]",name:"stakes",type:"uint96[]"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The address to get stakes."},return:"The arrays of dates and stakes.",notice:"Get list of stakes for a user account."},"getWithdrawAmounts(uint96,uint256)":{constant:!0,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"}],name:"getWithdrawAmounts",outputs:[{internalType:"uint96",name:"",type:"uint96"},{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The number of tokens to withdraw.",until:"The date until which the tokens were staked."},notice:"Get available and punished amount for withdrawing."},"governanceWithdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens."},"governanceWithdrawVesting(address,address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.",params:{receiver:"The receiver of the tokens. If not specified, send to the msg.sender",vesting:"The address of Vesting contract."},notice:"Withdraw tokens for vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.",notice:"Allow a staker to migrate his positions to the new staking contract."},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"setFeeSharing(address)":{constant:!1,inputs:[{internalType:"address",name:"_feeSharing",type:"address"}],name:"setFeeSharing",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_feeSharing:"The address of FeeSharingProxy contract."},notice:"Allow the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."},"setNewStakingContract(address)":{constant:!1,inputs:[{internalType:"address",name:"_newStakingContract",type:"address"}],name:"setNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",params:{_newStakingContract:"The address of the new staking contract."},notice:"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."},"setWeightScaling(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_weightScaling",type:"uint96"}],name:"setWeightScaling",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_weightScaling:"The weight scaling."},notice:"Allow the owner to set weight scaling. We need it for unstaking with slashing."},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakeWithApproval(address,uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakeWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",sender:"The sender of SOV.approveAndCall",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to stake.",cliff:"The time interval to the first withdraw.",delegatee:"The address of the delegatee or 0x0 if there is none.",duration:"The staking duration.",intervalLength:"The length of each staking interval when cliff passed.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself."},notice:"Stake tokens according to the vesting schedule."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockAllTokens()":{constant:!1,inputs:[],name:"unlockAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Last resort.",notice:"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."},"withdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens if they are unlocked."}}},"contracts/mockup/TimelockHarness.sol:Administered":{source:"contracts/mockup/TimelockHarness.sol",name:"Administered",methods:{"_acceptAdmin()":{constant:!1,inputs:[],name:"_acceptAdmin",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mockup/TimelockHarness.sol:TimelockHarness":{source:"contracts/mockup/TimelockHarness.sol",name:"TimelockHarness",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"harnessSetAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"admin_",type:"address"}],name:"harnessSetAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"harnessSetPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"harnessSetPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setDelayWithoutChecking(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelayWithoutChecking",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/mockup/TimelockHarness.sol:TimelockTest":{source:"contracts/mockup/TimelockHarness.sol",name:"TimelockTest",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"harnessAcceptAdmin(address)":{constant:!1,inputs:[{internalType:"contract Administered",name:"administered",type:"address"}],name:"harnessAcceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"harnessSetAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"admin_",type:"address"}],name:"harnessSetAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/mockup/previousLoanToken/PreviousLoanToken.sol:PreviousLoanToken":{source:"contracts/mockup/previousLoanToken/PreviousLoanToken.sol",name:"PreviousLoanToken",constructor:{inputs:[{internalType:"address",name:"_newOwner",type:"address"},{internalType:"address",name:"_newTarget",type:"address"},{internalType:"address",name:"_sovrynContractAddress",type:"address"},{internalType:"address",name:"_wrbtcTokenAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address,string,string)":{constant:!1,inputs:[{internalType:"address",name:"_loanTokenAddress",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setTarget(address)":{constant:!1,inputs:[{internalType:"address",name:"_newTarget",type:"address"}],name:"setTarget",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/previousLoanToken/PreviousLoanTokenSettingsLowerAdmin.sol:PreviousLoanTokenSettingsLowerAdmin":{source:"contracts/mockup/previousLoanToken/PreviousLoanTokenSettingsLowerAdmin.sol",name:"PreviousLoanTokenSettingsLowerAdmin",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetTransactionLimits(address[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"addresses",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"SetTransactionLimits",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"collateralTokens",type:"address[]"},{internalType:"bool[]",name:"isTorqueLoans",type:"bool[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"init(address,string,string)":{constant:!1,inputs:[{internalType:"address",name:"_loanTokenAddress",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setDemandCurve(uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_baseRate",type:"uint256"},{internalType:"uint256",name:"_rateMultiplier",type:"uint256"},{internalType:"uint256",name:"_lowUtilBaseRate",type:"uint256"},{internalType:"uint256",name:"_lowUtilRateMultiplier",type:"uint256"},{internalType:"uint256",name:"_targetLevel",type:"uint256"},{internalType:"uint256",name:"_kinkLevel",type:"uint256"},{internalType:"uint256",name:"_maxScaleRate",type:"uint256"}],name:"setDemandCurve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setTransactionLimits(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"addresses",type:"address[]"},{internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"setTransactionLimits",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addresses:"the token addresses",limits:"the limit denominated in the currency of the token address"},notice:"sets the transaction limit per token address"},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[],bool)":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"},{internalType:"bool",name:"areTorqueLoans",type:"bool"}],name:"setupLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"toggleFunctionPause(string,bool)":{constant:!1,inputs:[{internalType:"string",name:"funcId",type:"string"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"toggleFunctionPause",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mockup/proxy/ImplementationMockup.sol:ImplementationMockup":{source:"contracts/mockup/proxy/ImplementationMockup.sol",name:"ImplementationMockup",events:{"ValueChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"ValueChanged",type:"event"}},methods:{"getValue()":{constant:!0,inputs:[],name:"getValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setValue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_value",type:"uint256"}],name:"setValue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mockup/proxy/ProxyMockup.sol:ProxyMockup":{source:"contracts/mockup/proxy/ProxyMockup.sol",name:"ProxyMockup",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"ValueChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"ValueChanged",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."}}},"contracts/mockup/proxy/StorageMockup.sol:StorageMockup":{source:"contracts/mockup/proxy/StorageMockup.sol",name:"StorageMockup",events:{"ValueChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"ValueChanged",type:"event"}}},"contracts/mockup/setGet.sol:setGet":{source:"contracts/mockup/setGet.sol",name:"setGet",title:"A simple smart contract for setting and getting values.",author:"Franklin Richards",details:"This is going to be used for testing purposes.",events:{"valueSet(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"_value",type:"uint256"}],name:"valueSet",type:"event"}},methods:{"get()":{constant:!1,inputs:[],name:"get",outputs:[{internalType:"uint256",name:"_value",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",return:"_value The value.",notice:"To get the `value`."},"set(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_value",type:"uint256"}],name:"set",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_value:"The value."},notice:"To set the `value`."},"value()":{constant:!0,inputs:[],name:"value",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/LoanClosingsBase.sol:LoanClosingsBase":{source:"contracts/modules/LoanClosingsBase.sol",name:"LoanClosingsBase",title:"LoanClosingsBase contract.",notice:"Ways to close a loan: liquidation, rollover. Margin trade  positions are always closed with a swap. * Loans are liquidated if the position goes below margin maintenance.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"CloseWithDeposit(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"CloseWithDeposit",type:"event"},"CloseWithSwap(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"uint256",name:"positionCloseSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"exitPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"CloseWithSwap",type:"event"},"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"Liquidate(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"lender",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Liquidate",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"},"swapExcess(bool,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"shouldRefund",type:"bool"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountInRbtc",type:"uint256"},{indexed:!1,internalType:"uint256",name:"threshold",type:"uint256"}],name:"swapExcess",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidate(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"closeAmount",type:"uint256"}],name:"liquidate",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"seizedAmount",type:"uint256"},{internalType:"address",name:"seizedToken",type:"address"}],payable:!0,stateMutability:"payable",type:"function",details:"Public wrapper for _liquidate internal function.\t * The caller needs to approve the closeAmount prior to calling. Will not liquidate more than is needed to restore the desired margin (maintenance +5%).\t * Whenever the current margin of a loan falls below maintenance margin, it needs to be liquidated. Anybody can initiate a liquidation and buy the collateral tokens at a discounted rate (5%).",params:{closeAmount:"The amount to close in loanTokens.",loanId:"The ID of the loan to liquidate.  loanId is the ID of the loan, which is created on loan opening.  It can be obtained either by parsing the Trade event or by reading  the open loans from the contract by calling getActiveLoans or getUserLoans.",receiver:"The receiver of the seized amount."},return:"loanCloseAmount The amount of the collateral token of the loan.seizedAmount The seized amount in the collateral token.seizedToken The loan token address.",notice:"Liquidate an unhealty loan."},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paySwapExcessToBorrowerThreshold()":{constant:!0,inputs:[],name:"paySwapExcessToBorrowerThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rollover(bytes32,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"bytes",name:"",type:"bytes"}],name:"rollover",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Public wrapper for _rollover internal function.\t * Each loan has a duration. In case of a margin trade it is set to 28 days, in case of borrowing, it can be set by the user. On loan openning, the user pays the interest for this duration in advance. If closing early, he gets the excess refunded. If it is not closed before the end date, it needs to be rolled over. On rollover the interest is paid for the next period. In case of margin trading it's 28 days, in case of borrowing it's a month.\t * The function rollover on the protocol contract extends the loan duration by the maximum term (28 days for margin trades at the moment of writing), pays the interest to the lender and refunds the caller for the gas cost by sending 2 * the gas cost using the fast gas price as base for the calculation.",params:{loanId:"The ID of the loan to roll over. // param calldata The payload for the call. These loan DataBytes are additional loan data (not in use for token swaps)."},notice:"Roll over a loan."},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/LoanClosingsWith.sol:LoanClosingsWith":{source:"contracts/modules/LoanClosingsWith.sol",name:"LoanClosingsWith",title:"LoanClosingsWith contract.",notice:"Close a loan w/deposit, close w/swap. There are 2 functions for ending a loan on the  protocol contract: closeWithSwap and closeWithDeposit. Margin trade  positions are always closed with a swap. * Loans are liquidated if the position goes below margin maintenance.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"CloseWithDeposit(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"CloseWithDeposit",type:"event"},"CloseWithSwap(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"uint256",name:"positionCloseSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"exitPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"CloseWithSwap",type:"event"},"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"Liquidate(address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"liquidator",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"lender",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"repayAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralWithdrawAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Liquidate",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"},"swapExcess(bool,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"shouldRefund",type:"bool"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountInRbtc",type:"uint256"},{indexed:!1,internalType:"uint256",name:"threshold",type:"uint256"}],name:"swapExcess",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"closeWithDeposit(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"closeWithDeposit",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"address",name:"withdrawToken",type:"address"}],payable:!0,stateMutability:"payable",type:"function",details:"Public wrapper for _closeWithDeposit internal function.",params:{depositAmount:"Defines how much of the position should be closed.  It is denominated in loan tokens. (e.g. rBTC on a iSUSD contract).    If depositAmount > principal, the complete loan will be closed    else deposit amount (partial closure).",loanId:"The id of the loan.",receiver:"The receiver of the remainder."},return:"loanCloseAmount The amount of the collateral token of the loan.withdrawAmount The withdraw amount in the collateral token.withdrawToken The loan token address.",notice:"Closes a loan by doing a deposit."},"closeWithSwap(bytes32,address,uint256,bool,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"swapAmount",type:"uint256"},{internalType:"bool",name:"returnTokenIsCollateral",type:"bool"},{internalType:"bytes",name:"",type:"bytes"}],name:"closeWithSwap",outputs:[{internalType:"uint256",name:"loanCloseAmount",type:"uint256"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"address",name:"withdrawToken",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Public wrapper for _closeWithSwap internal function.",params:{loanId:"The id of the loan.",receiver:"The receiver of the remainder (unused collateral + profit).",returnTokenIsCollateral:"Defines if the remainder should be paid out  in collateral tokens or underlying loan tokens.",swapAmount:"Defines how much of the position should be closed and  is denominated in collateral tokens.     If swapAmount >= collateral, the complete position will be closed.     Else if returnTokenIsCollateral, (swapAmount/collateral) * principal will be swapped (partial closure).     Else coveredPrincipal"},return:"loanCloseAmount The amount of the collateral token of the loan.withdrawAmount The withdraw amount in the collateral token.withdrawToken The loan token address.",notice:"Close a position by swapping the collateral back to loan tokens paying the lender and withdrawing the remainder."},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paySwapExcessToBorrowerThreshold()":{constant:!0,inputs:[],name:"paySwapExcessToBorrowerThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/LoanMaintenance.sol:LoanMaintenance":{source:"contracts/modules/LoanMaintenance.sol",name:"LoanMaintenance",title:"Loan Maintenance contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to query loan data and to modify its status by withdrawing or depositing collateral.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Borrow(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"newPrincipal",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Borrow",type:"event"},"DelegatedManagerSet(bytes32,address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"delegated",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"DelegatedManagerSet",type:"event"},"DepositCollateral(bytes32,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"depositAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"DepositCollateral",type:"event"},"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"Trade(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"positionSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryLeverage",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"Trade",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"depositCollateral(bytes32,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"depositCollateral",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{depositAmount:"The amount to be deposited.",loanId:"A unique ID representing the loan."},return:"actualWithdrawAmount The amount withdrawn taking into account drawdowns.",notice:"Deposit the loan collateral."},"extendLoanDuration(bytes32,uint256,bool,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"bool",name:"useCollateral",type:"bool"},{internalType:"bytes",name:"",type:"bytes"}],name:"extendLoanDuration",outputs:[{internalType:"uint256",name:"secondsExtended",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{depositAmount:"The amount to be deposited.",loanId:"A unique ID representing the loan.",useCollateral:"Whether pay interests w/ the collateral. // param calldata The payload for the call. These loan DataBytes are additional loan data (not in use for token swaps)."},return:"secondsExtended The amount of time in seconds the loan is extended.",notice:"Extend the loan duration."},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getActiveLoans(uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"bool",name:"unsafeOnly",type:"bool"}],name:"getActiveLoans",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct LoanMaintenance.LoanReturnData[]",name:"loansData",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function",params:{count:"The maximum number of results.",start:"The lower loan ID to start with.",unsafeOnly:"The safe filter (True/False)."},return:"loansData The data structure w/ loan information.",notice:"Get all active loans."},"getLenderInterestData(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getLenderInterestData",outputs:[{internalType:"uint256",name:"interestPaid",type:"uint256"},{internalType:"uint256",name:"interestPaidDate",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestUnPaid",type:"uint256"},{internalType:"uint256",name:"interestFeePercent",type:"uint256"},{internalType:"uint256",name:"principalTotal",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{lender:"The lender address.",loanToken:"The loan token address."},return:"interestPaid The total amount of interest that has been paid to a lender so far.interestPaidDate The date of the last interest pay out, or 0 if no interest has been withdrawn yet.interestOwedPerDay The amount of interest the lender is earning per day.interestUnPaid The total amount of interest the lender is owned and not yet withdrawn.interestFeePercent The fee retained by the protocol before interest is paid to the lender.principalTotal The total amount of outstanding principal the lender has loaned.",notice:"Get current lender interest data totals for all loans  with a specific oracle and interest token."},"getLoan(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"}],name:"getLoan",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct LoanMaintenance.LoanReturnData",name:"loanData",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{loanId:"A unique ID representing the loan."},return:"loansData The data structure w/ loan information.",notice:"Get one loan data structure by matching ID.\t * Wrapper to internal _getLoan call."},"getLoanInterestData(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"}],name:"getLoanInterestData",outputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositTotal",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{loanId:"A unique ID representing the loan."},return:"loanToken The loan token that interest is paid in.interestOwedPerDay The amount of interest the borrower is paying per day.interestDepositTotal The total amount of interest the borrower has deposited.interestDepositRemaining The amount of deposited interest that is not yet owed to a lender.",notice:"Get current interest data for a loan."},"getUserLoans(address,uint256,uint256,uint256,bool,bool)":{constant:!0,inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"loanType",type:"uint256"},{internalType:"bool",name:"isLender",type:"bool"},{internalType:"bool",name:"unsafeOnly",type:"bool"}],name:"getUserLoans",outputs:[{components:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestOwedPerDay",type:"uint256"},{internalType:"uint256",name:"interestDepositRemaining",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"currentMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"maxLiquidatable",type:"uint256"},{internalType:"uint256",name:"maxSeizable",type:"uint256"}],internalType:"struct LoanMaintenance.LoanReturnData[]",name:"loansData",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function",params:{count:"The maximum number of results.",isLender:"Whether the user is lender or borrower.",loanType:"The type of loan.  loanType 0: all loans.  loanType 1: margin trade loans.  loanType 2: non-margin trade loans.",start:"The lower loan ID to start with.",unsafeOnly:"The safe filter (True/False).",user:"The user address."},return:"loansData The array of loans as query result.",notice:"Get all user loans.\t * Only returns data for loans that are active."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The address of the logic contract instance."},notice:"Set initial values of proxy targets."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"reduceLoanDuration(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"}],name:"reduceLoanDuration",outputs:[{internalType:"uint256",name:"secondsReduced",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{loanId:"A unique ID representing the loan.",receiver:"The account getting the withdrawal.",withdrawAmount:"The amount to be withdrawn."},return:"secondsReduced The amount of time in seconds the loan is reduced.",notice:"Reduce the loan duration."},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAccruedInterest(address)":{constant:!1,inputs:[{internalType:"address",name:"loanToken",type:"address"}],name:"withdrawAccruedInterest",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _payInterest internal function.",params:{loanToken:"The loan token address."},notice:"Withdraw accrued loan interest."},"withdrawCollateral(bytes32,address,uint256)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"}],name:"withdrawCollateral",outputs:[{internalType:"uint256",name:"actualWithdrawAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{loanId:"A unique ID representing the loan.",receiver:"The account getting the withdrawal.",withdrawAmount:"The amount to be withdrawn."},return:"actualWithdrawAmount The amount withdrawn taking into account drawdowns.",notice:"Withdraw the loan collateral."},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/LoanOpenings.sol:LoanOpenings":{source:"contracts/modules/LoanOpenings.sol",name:"LoanOpenings",title:"Loan Openings contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to borrow and trade.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Borrow(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"newPrincipal",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCollateral",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collateralToLoanRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentMargin",type:"uint256"}],name:"Borrow",type:"event"},"DelegatedManagerSet(bytes32,address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"delegated",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"DelegatedManagerSet",type:"event"},"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"Trade(address,address,bytes32,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"lender",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"positionSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowedAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interestRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryPrice",type:"uint256"},{indexed:!1,internalType:"uint256",name:"entryLeverage",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentLeverage",type:"uint256"}],name:"Trade",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowOrTradeFromPool(bytes32,bytes32,bool,uint256,address[4],uint256[5],bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"bool",name:"isTorqueLoan",type:"bool"},{internalType:"uint256",name:"initialMargin",type:"uint256"},{internalType:"address[4]",name:"sentAddresses",type:"address[4]"},{internalType:"uint256[5]",name:"sentValues",type:"uint256[5]"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"borrowOrTradeFromPool",outputs:[{internalType:"uint256",name:"newPrincipal",type:"uint256"},{internalType:"uint256",name:"newCollateral",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",details:"Note: Only callable by loan pools (iTokens). Wrapper to _borrowOrTrade internal function.",params:{initialMargin:"The initial amount of margin.",isTorqueLoan:"Whether the loan is a Torque loan.",loanDataBytes:"The payload for the call. These loan DataBytes are  additional loan data (not in use for token swaps).",loanId:"The ID of the loan. If 0, start a new loan.",loanParamsId:"The ID of the loan parameters.",sentAddresses:"The addresses to send tokens: lender, borrower,  receiver and manager:    lender: must match loan if loanId provided.    borrower: must match loan if loanId provided.    receiver: receiver of funds (address(0) assumes borrower address).    manager: delegated manager of loan unless address(0).",sentValues:"The values to send:    newRate: New loan interest rate.    newPrincipal: New loan size (borrowAmount + any borrowed interest).    torqueInterest: New amount of interest to escrow for Torque loan (determines initial loan length).    loanTokenReceived: Total loanToken deposit (amount not sent to borrower in the case of Torque loans).    collateralTokenReceived: Total collateralToken deposit."},return:"newPrincipal The new loan size.newCollateral The new collateral amount.",notice:"Borrow or trade from pool."},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getBorrowAmount(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"collateralTokenAmount",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getBorrowAmount",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Basically borrowAmount = collateral / marginAmount\t * Collateral is something that helps secure a loan. When you borrow money, you agree that your lender can take something and sell it to get their money back if you fail to repay the loan. That's the collateral.",params:{collateralToken:"The collateral token instance address.",collateralTokenAmount:"The amount of collateral.",isTorqueLoan:"Whether the loan is a Torque loan.",loanToken:"The loan token instance address.",marginAmount:"The amount of margin of the trade."},return:"borrowAmount The borrow amount.",notice:"Get the borrow amount of a trade loan."},"getEstimatedMarginExposure(address,address,uint256,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"newPrincipal",type:"uint256"}],name:"getEstimatedMarginExposure",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralToken:"The collateral token instance address.",collateralTokenSent:"The amount of collateral tokens sent.",interestRate:"The interest rate. Percentage w/ 18 decimals.",loanToken:"The loan token instance address.",loanTokenSent:"The amount of loan tokens sent.",newPrincipal:"The updated amount of principal (current debt)."},return:"The margin exposure.",notice:"Get the estimated margin exposure.\t * Margin is the money borrowed from a broker to purchase an investment and is the difference between the total value of investment and the loan amount. Margin trading refers to the practice of using borrowed funds from a broker to trade a financial asset, which forms the collateral for the loan from the broker."},"getRequiredCollateral(address,address,uint256,uint256,bool)":{constant:!0,inputs:[{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"newPrincipal",type:"uint256"},{internalType:"uint256",name:"marginAmount",type:"uint256"},{internalType:"bool",name:"isTorqueLoan",type:"bool"}],name:"getRequiredCollateral",outputs:[{internalType:"uint256",name:"collateralAmountRequired",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calls internal _getRequiredCollateral and add fees.",params:{collateralToken:"The collateral token instance address.",isTorqueLoan:"Whether the loan is a Torque loan.",loanToken:"The loan token instance address.",marginAmount:"The amount of margin of the trade.",newPrincipal:"The updated amount of principal (current debt)."},return:"collateralAmountRequired The required collateral.",notice:"Get the required collateral."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The address of the target contract."},notice:"Set function selectors on target contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setDelegatedManager(bytes32,address,bool)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"address",name:"delegated",type:"address"},{internalType:"bool",name:"toggle",type:"bool"}],name:"setDelegatedManager",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setDelegatedManager internal function.",params:{delegated:"The address of the delegated manager.",loanId:"The ID of the loan. If 0, start a new loan.",toggle:"The flag true/false for the delegated manager."},notice:"Set the delegated manager."},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/LoanSettings.sol:LoanSettings":{source:"contracts/modules/LoanSettings.sol",name:"LoanSettings",title:"Loan Settings contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to get and set loan parameters.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"LoanParamsDisabled(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsDisabled",type:"event"},"LoanParamsIdDisabled(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdDisabled",type:"event"},"LoanParamsIdSetup(bytes32,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"LoanParamsIdSetup",type:"event"},"LoanParamsSetup(bytes32,address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"loanToken",type:"address"},{indexed:!0,internalType:"address",name:"collateralToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minInitialMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],name:"LoanParamsSetup",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(bytes32[])":{constant:!1,inputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{loanParamsIdList:"The array of loan parameters IDs to deactivate."},notice:"Deactivate LoanParams for future loans. Active loans using it are unaffected."},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getLoanParams(bytes32[])":{constant:!0,inputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],name:"getLoanParams",outputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"}],payable:!1,stateMutability:"view",type:"function",params:{loanParamsIdList:"The array of loan parameters IDs to match."},return:"loanParamsList The result array of loan parameters.",notice:"Get loan parameters for every matching IDs."},"getLoanParamsList(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getLoanParamsList",outputs:[{internalType:"bytes32[]",name:"loanParamsList",type:"bytes32[]"}],payable:!1,stateMutability:"view",type:"function",params:{count:"The page limit.",owner:"The address of the loan owner.",start:"The page offset."},return:"loanParamsList The result array of loan parameters.",notice:"Get loan parameters for an owner and a given page defined by an offset and a limit."},"getTotalPrincipal(address,address)":{constant:!0,inputs:[{internalType:"address",name:"lender",type:"address"},{internalType:"address",name:"loanToken",type:"address"}],name:"getTotalPrincipal",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{lender:"The address of the lender.",loanToken:"The address of the token instance."},return:"The total principal of the loans.",notice:"Get the total principal of the loans by a lender."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The address of the target contract."},notice:"Set function selectors on target contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[])":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"}],name:"setupLoanParams",outputs:[{internalType:"bytes32[]",name:"loanParamsIdList",type:"bytes32[]"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"For each loan calls _setupLoanParams internal function.",params:{loanParamsList:"The array of loan parameters."},return:"loanParamsIdList The array of loan parameters IDs.",notice:"Setup loan parameters, by looping every loan and populating its parameters."},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/ProtocolSettings.sol:ProtocolSettings":{source:"contracts/modules/ProtocolSettings.sol",name:"ProtocolSettings",title:"Protocol Settings contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to customize protocol settings.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetAffiliateFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetAffiliateFeePercent",type:"event"},"SetBorrowingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetBorrowingFeePercent",type:"event"},"SetFeesController(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldController",type:"address"},{indexed:!0,internalType:"address",name:"newController",type:"address"}],name:"SetFeesController",type:"event"},"SetLendingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLendingFeePercent",type:"event"},"SetLiquidationIncentivePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetLiquidationIncentivePercent",type:"event"},"SetLoanPool(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"loanPool",type:"address"},{indexed:!0,internalType:"address",name:"underlying",type:"address"}],name:"SetLoanPool",type:"event"},"SetMaxSwapSize(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetMaxSwapSize",type:"event"},"SetPriceFeedContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetPriceFeedContract",type:"event"},"SetProtocolTokenAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldProtocolToken",type:"address"},{indexed:!0,internalType:"address",name:"newProtocolToken",type:"address"}],name:"SetProtocolTokenAddress",type:"event"},"SetRebatePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldRebatePercent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRebatePercent",type:"uint256"}],name:"SetRebatePercent",type:"event"},"SetRolloverBaseReward(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetRolloverBaseReward",type:"event"},"SetSovrynSwapContractRegistryAddress(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldSovrynSwapContractRegistryAddress",type:"address"},{indexed:!0,internalType:"address",name:"newSovrynSwapContractRegistryAddress",type:"address"}],name:"SetSovrynSwapContractRegistryAddress",type:"event"},"SetSupportedTokens(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"SetSupportedTokens",type:"event"},"SetSwapsImplContract(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetSwapsImplContract",type:"event"},"SetTradingFeePercent(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"oldValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"SetTradingFeePercent",type:"event"},"SetWrbtcToken(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"oldWethToken",type:"address"},{indexed:!0,internalType:"address",name:"newWethToken",type:"address"}],name:"SetWrbtcToken",type:"event"},"WithdrawBorrowingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawBorrowingFees",type:"event"},"WithdrawFees(address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"lendingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tradingAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowingAmount",type:"uint256"}],name:"WithdrawFees",type:"event"},"WithdrawLendingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawLendingFees",type:"event"},"WithdrawTradingFees(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawTradingFees",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"depositProtocolToken(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"depositProtocolToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The tokens of fees to send."},notice:"The owner calls this function to deposit protocol tokens."},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getLoanPoolsList(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getLoanPoolsList",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],payable:!1,stateMutability:"view",type:"function",params:{count:"The limit.",start:"The offset."},return:"The array of loan pools.",notice:"Get a list of loan pools."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The address of the target contract."},notice:"Set function selectors on target contract."},"isLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"loanPool",type:"address"}],name:"isLoanPool",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"By querying its underlying token.",params:{loanPool:"The token address to check."},notice:"Check whether a token is a pool token."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAffiliateFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setAffiliateFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for affiliateFeePercent."},notice:"Set the value of affiliateFeePercent storage variable."},"setBorrowingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setBorrowingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for borrowingFeePercent."},notice:"Set the value of borrowingFeePercent storage variable."},"setFeesController(address)":{constant:!1,inputs:[{internalType:"address",name:"newController",type:"address"}],name:"setFeesController",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The fee sharing proxy must be the feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees.",params:{newController:"The new address of the feesController."},notice:"Set the address of the feesController instance."},"setLendingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setLendingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for lendingFeePercent."},notice:"Set the value of lendingFeePercent storage variable."},"setLiquidationIncentivePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setLiquidationIncentivePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for liquidationIncentivePercent."},notice:"Set the value of liquidationIncentivePercent storage variable."},"setLoanPool(address[],address[])":{constant:!1,inputs:[{internalType:"address[]",name:"pools",type:"address[]"},{internalType:"address[]",name:"assets",type:"address[]"}],name:"setLoanPool",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{assets:"The array of addresses of the corresponding underlying tokens.",pools:"The array of addresses of new loan pool instances."},notice:"Set a list of loan pools and its tokens."},"setMaxDisagreement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setMaxDisagreement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for maxDisagreement."},notice:"Set the value of the maximum swap spread."},"setMaxSwapSize(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setMaxSwapSize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for the maximum swap size."},notice:"Set the value of the swap size limit."},"setPriceFeedContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setPriceFeedContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newContract:"The address of the Price Feed new instance."},notice:"Set the address of the Price Feed instance."},"setProtocolTokenAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_protocolTokenAddress",type:"address"}],name:"setProtocolTokenAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_protocolTokenAddress:"The address of the protocol token contract."},notice:"Set the protocol token contract address."},"setRebatePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"rebatePercent",type:"uint256"}],name:"setRebatePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{rebatePercent:"The fee rebate percent."},notice:"Set the fee rebate percent."},"setRolloverBaseReward(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"baseRewardValue",type:"uint256"}],name:"setRolloverBaseReward",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{baseRewardValue:"The base reward."},notice:"Set rollover base reward. It should be denominated in wrBTC."},"setSourceBuffer(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setSourceBuffer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"To avoid rounding issues on the swap rate a small buffer is implemented.",params:{newValue:"The new value for the maximum source buffer."},notice:"Set the value of the maximum source buffer."},"setSovrynSwapContractRegistryAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"registryAddress",type:"address"}],name:"setSovrynSwapContractRegistryAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{registryAddress:"the address of the registry contract."},notice:"Set the contract registry address of the SovrynSwap network."},"setSupportedTokens(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"addrs",type:"address[]"},{internalType:"bool[]",name:"toggles",type:"bool[]"}],name:"setSupportedTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addrs:"The array of addresses of the tokens.",toggles:"The array of flags indicating whether  the corresponding token is supported or not."},notice:"Set a list of supported tokens by populating the  storage supportedTokens mapping."},"setSwapsImplContract(address)":{constant:!1,inputs:[{internalType:"address",name:"newContract",type:"address"}],name:"setSwapsImplContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newContract:"The address of the asset swapper new instance."},notice:"Set the address of the asset swapper instance."},"setTradingFeePercent(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setTradingFeePercent",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newValue:"The new value for tradingFeePercent."},notice:"Set the value of tradingFeePercent storage variable."},"setWrbtcToken(address)":{constant:!1,inputs:[{internalType:"address",name:"wrbtcTokenAddress",type:"address"}],name:"setWrbtcToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{wrbtcTokenAddress:"The address of the wrBTC contract."},notice:"Set the wrBTC contract address."},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawBorrowingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawBorrowingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from borrowing operations."},"withdrawFees(address,address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"The withdrawn amount.",notice:"The feesController calls this function to withdraw fees from three sources: lending, trading and borrowing."},"withdrawLendingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawLendingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from lending operations."},"withdrawProtocolToken(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawProtocolToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for ProtocolTokenUser::_withdrawProtocolToken internal function.",params:{amount:"The amount of tokens to get.",receiver:"The address of the withdrawal recipient."},return:"The protocol token address.Withdrawal success (true/false).",notice:"The owner calls this function to withdraw protocol tokens."},"withdrawTradingFees(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawTradingFees",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of fees to get, ignored if greater than balance.",receiver:"The address of the withdrawal recipient.",token:"The address of the token instance."},return:"Whether withdrawal was successful.",notice:"The feesController calls this function to withdraw fees accrued from trading operations."},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/modules/SwapsExternal.sol:SwapsExternal":{source:"contracts/modules/SwapsExternal.sol",name:"SwapsExternal",title:"Swaps External contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to calculate and execute swaps.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"},"VaultDeposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultDeposit",type:"event"},"VaultWithdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VaultWithdraw",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getSwapExpectedReturn(address,address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"}],name:"getSwapExpectedReturn",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"External wrapper that calls SwapsUser::_swapsExpectedReturn",params:{destToken:"The address of the destiny token instance.",sourceToken:"The address of the source token instance.",sourceTokenAmount:"The amount of source tokens."},return:"The expected return value.",notice:"Get the swap expected return value."},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{target:"The address of the target contract."},notice:"Set function selectors on target contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapExternal(address,address,address,address,uint256,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"sourceToken",type:"address"},{internalType:"address",name:"destToken",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"returnToSender",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"requiredDestTokenAmount",type:"uint256"},{internalType:"bytes",name:"swapData",type:"bytes"}],name:"swapExternal",outputs:[{internalType:"uint256",name:"destTokenAmountReceived",type:"uint256"},{internalType:"uint256",name:"sourceTokenAmountUsed",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",details:"External wrapper that calls SwapsUser::_swapsCall after turning potential incoming rBTC into wrBTC tokens.",params:{destToken:"The address of the destiny token instance.",receiver:"The address of the recipient account.",requiredDestTokenAmount:"The amount of required destiny tokens.",returnToSender:"The address of the sender account.",sourceToken:"The address of the source token instance.",sourceTokenAmount:"The amount of source tokens.",swapData:"Additional swap data (not in use yet)."},return:"destTokenAmountReceived The amount of destiny tokens sent.sourceTokenAmountUsed The amount of source tokens spent.",notice:"Perform a swap w/ tokens or rBTC as source currency."},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/multisig/MultiSigKeyHolders.sol:MultiSigKeyHolders":{source:"contracts/multisig/MultiSigKeyHolders.sol",name:"MultiSigKeyHolders",title:"Multi Signature Key Holders contract. * This contract contains the implementation of functions to add and remove key holders w/ rBTC and BTC addresses.",events:{"BitcoinAddressAdded(string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"account",type:"string"}],name:"BitcoinAddressAdded",type:"event"},"BitcoinAddressRemoved(string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"account",type:"string"}],name:"BitcoinAddressRemoved",type:"event"},"BitcoinRequirementChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"required",type:"uint256"}],name:"BitcoinRequirementChanged",type:"event"},"EthereumAddressAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"EthereumAddressAdded",type:"event"},"EthereumAddressRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"EthereumAddressRemoved",type:"event"},"EthereumRequirementChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"required",type:"uint256"}],name:"EthereumRequirementChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"MAX_OWNER_COUNT()":{constant:!0,inputs:[],name:"MAX_OWNER_COUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addBitcoinAddress(string)":{constant:!1,inputs:[{internalType:"string",name:"_address",type:"string"}],name:"addBitcoinAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address to be added."},notice:"Add bitcoin address to the key holders."},"addBitcoinAddresses(string[])":{constant:!1,inputs:[{internalType:"string[]",name:"_address",type:"string[]"}],name:"addBitcoinAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The addresses to be added."},notice:"Add bitcoin addresses to the key holders."},"addEthereumAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_address",type:"address"}],name:"addEthereumAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address to be added."},notice:"Add rBTC address to the key holders."},"addEthereumAddresses(address[])":{constant:!1,inputs:[{internalType:"address[]",name:"_address",type:"address[]"}],name:"addEthereumAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The addresses to be added."},notice:"Add rBTC addresses to the key holders."},"addEthereumAndBitcoinAddresses(address[],string[])":{constant:!1,inputs:[{internalType:"address[]",name:"_ethereumAddress",type:"address[]"},{internalType:"string[]",name:"_bitcoinAddress",type:"string[]"}],name:"addEthereumAndBitcoinAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_bitcoinAddress:"the bitcoin addresses to be added.",_ethereumAddress:"the rBTC addresses to be added."},notice:"Add rBTC and bitcoin addresses to the key holders."},"bitcoinRequired()":{constant:!0,inputs:[],name:"bitcoinRequired",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"changeBitcoinRequirement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_required",type:"uint256"}],name:"changeBitcoinRequirement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_required:"The new value of the bitcoinRequired flag."},notice:"Set flag bitcoinRequired to true/false."},"changeEthereumRequirement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_required",type:"uint256"}],name:"changeEthereumRequirement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_required:"The new value of the ethereumRequired flag."},notice:"Set flag ethereumRequired to true/false."},"ethereumRequired()":{constant:!0,inputs:[],name:"ethereumRequired",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getBitcoinAddresses()":{constant:!0,inputs:[],name:"getBitcoinAddresses",outputs:[{internalType:"string[]",name:"",type:"string[]"}],payable:!1,stateMutability:"view",type:"function",notice:"Get array of bitcoin key holders."},"getEthereumAddresses()":{constant:!0,inputs:[],name:"getEthereumAddresses",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",notice:"Get array of rBTC key holders."},"isBitcoinAddressOwner(string)":{constant:!0,inputs:[{internalType:"string",name:"_address",type:"string"}],name:"isBitcoinAddressOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_address:"The bitcoin address to be checked."},notice:"Get whether bitcoin address is a key holder."},"isEthereumAddressOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"_address",type:"address"}],name:"isEthereumAddressOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{_address:"The rBTC address to be checked."},notice:"Get whether rBTC address is a key holder."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeBitcoinAddress(string)":{constant:!1,inputs:[{internalType:"string",name:"_address",type:"string"}],name:"removeBitcoinAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address to be removed."},notice:"Remove bitcoin address to the key holders."},"removeBitcoinAddresses(string[])":{constant:!1,inputs:[{internalType:"string[]",name:"_address",type:"string[]"}],name:"removeBitcoinAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The addresses to be removed."},notice:"Remove bitcoin addresses to the key holders."},"removeEthereumAddress(address)":{constant:!1,inputs:[{internalType:"address",name:"_address",type:"address"}],name:"removeEthereumAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address to be removed."},notice:"Remove rBTC address to the key holders."},"removeEthereumAddresses(address[])":{constant:!1,inputs:[{internalType:"address[]",name:"_address",type:"address[]"}],name:"removeEthereumAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The addresses to be removed."},notice:"Remove rBTC addresses to the key holders."},"removeEthereumAndBitcoinAddresses(address[],string[])":{constant:!1,inputs:[{internalType:"address[]",name:"_ethereumAddress",type:"address[]"},{internalType:"string[]",name:"_bitcoinAddress",type:"string[]"}],name:"removeEthereumAndBitcoinAddresses",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_bitcoinAddress:"The bitcoin addresses to be removed.",_ethereumAddress:"The rBTC addresses to be removed."},notice:"Remove rBTC and bitcoin addresses to the key holders."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/multisig/MultiSigWallet.sol:MultiSigWallet":{source:"contracts/multisig/MultiSigWallet.sol",name:"MultiSigWallet",title:"Multisignature wallet - Allows multiple parties to agree on  transactions before execution.",author:"Stefan George - <stefan.george@consensys.net>",constructor:{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256",name:"_required",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Confirmation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Confirmation",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Deposit",type:"event"},"Execution(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Execution",type:"event"},"ExecutionFailure(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"ExecutionFailure",type:"event"},"OwnerAddition(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerAddition",type:"event"},"OwnerRemoval(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerRemoval",type:"event"},"RequirementChange(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"required",type:"uint256"}],name:"RequirementChange",type:"event"},"Revocation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Revocation",type:"event"},"Submission(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Submission",type:"event"}},methods:{"MAX_OWNER_COUNT()":{constant:!0,inputs:[],name:"MAX_OWNER_COUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of new owner."},notice:"Allows to add a new owner. Transaction has to be sent by wallet."},"changeRequirement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_required",type:"uint256"}],name:"changeRequirement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_required:"Number of required confirmations."},notice:"Allows to change the number of required confirmations. Transaction has to be sent by wallet."},"confirmTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"confirmTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to confirm a transaction."},"confirmations(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"confirmations",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"executeTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows anyone to execute a confirmed transaction."},"getConfirmationCount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmationCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Number of confirmations.",notice:"Get the number of confirmations of a transaction."},"getConfirmations(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmations",outputs:[{internalType:"address[]",name:"_confirmations",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Returns array of owner addresses.",notice:"Get the array with owner addresses, which confirmed transaction."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",return:"List of owner addresses.",notice:"Get the list of owners."},"getTransactionCount(bool,bool)":{constant:!0,inputs:[{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",pending:"Include pending transactions."},return:"Total number of transactions after filters are applied.",notice:"Get the total number of transactions after filers are applied."},"getTransactionIds(uint256,uint256,bool,bool)":{constant:!0,inputs:[{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionIds",outputs:[{internalType:"uint256[]",name:"_transactionIds",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",from:"Index start position of transaction array.",pending:"Include pending transactions.",to:"Index end position of transaction array."},return:"Returns array of transaction IDs.",notice:"Get the list of transaction IDs in defined range."},"isConfirmed(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"isConfirmed",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Confirmation status.",notice:"Returns the confirmation status of a transaction."},"isOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"owners(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"owners",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of owner."},notice:"Allows to remove an owner. Transaction has to be sent by wallet."},"replaceOwner(address,address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"newOwner",type:"address"}],name:"replaceOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newOwner:"Address of new owner.",owner:"Address of owner to be replaced."},notice:"Allows to replace an owner with a new owner. Transaction has  to be sent by wallet."},"required()":{constant:!0,inputs:[],name:"required",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"revokeConfirmation(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"revokeConfirmation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to revoke a confirmation for a transaction."},"submitTransaction(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"submitTransaction",outputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"Transaction data payload.",destination:"Transaction target address.",value:"Transaction ether value."},return:"Returns transaction ID.",notice:"Allows an owner to submit and confirm a transaction."},"transactionCount()":{constant:!0,inputs:[],name:"transactionCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transactions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"transactions",outputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bool",name:"executed",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/openzeppelin/Address.sol:Address":{source:"contracts/openzeppelin/Address.sol",name:"Address",details:"Collection of functions related to the address type"},"contracts/openzeppelin/Context.sol:Context":{source:"contracts/openzeppelin/Context.sol",name:"Context",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"}},"contracts/openzeppelin/ECDSA.sol:ECDSA":{source:"contracts/openzeppelin/ECDSA.sol",name:"ECDSA",details:"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address."},"contracts/openzeppelin/ERC20.sol:ERC20":{source:"contracts/openzeppelin/ERC20.sol",name:"ERC20",details:"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/openzeppelin/ERC20Detailed.sol:ERC20Detailed":{source:"contracts/openzeppelin/ERC20Detailed.sol",name:"ERC20Detailed",details:"Optional functions from the ERC20 standard.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint8",name:"decimals",type:"uint8"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.\t * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).\t * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.\t * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."}}},"contracts/openzeppelin/IERC20_.sol:IERC20_":{source:"contracts/openzeppelin/IERC20_.sol",name:"IERC20_",details:"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.\t * This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\t * Returns a boolean value indicating whether the operation succeeded.\t * Emits a {Transfer} event."}}},"contracts/openzeppelin/Ownable.sol:Ownable":{source:"contracts/openzeppelin/Ownable.sol",name:"Ownable",details:"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/openzeppelin/ReentrancyGuard.sol:ReentrancyGuard":{source:"contracts/openzeppelin/ReentrancyGuard.sol",name:"ReentrancyGuard",title:"Helps contracts guard against reentrancy attacks.",author:"Remco Bloemen <remco@2π.com>, Eenae <alexey@mixbytes.io>",details:"If you mark a function `nonReentrant`, you should also mark it `external`."},"contracts/openzeppelin/SafeERC20.sol:SafeERC20":{source:"contracts/openzeppelin/SafeERC20.sol",name:"SafeERC20",title:"SafeERC20",details:"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"contracts/openzeppelin/SafeMath.sol:SafeMath":{source:"contracts/openzeppelin/SafeMath.sol",name:"SafeMath",details:"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always."},"contracts/openzeppelin/SignedSafeMath.sol:SignedSafeMath":{source:"contracts/openzeppelin/SignedSafeMath.sol",name:"SignedSafeMath",title:"SignedSafeMath",details:"Signed math operations with safety checks that revert on error."},"contracts/proxy/Proxy.sol:Proxy":{source:"contracts/proxy/Proxy.sol",name:"Proxy",title:"Base Proxy contract.",details:"UpgradableProxy is the contract that inherits Proxy and wraps these functions.",notice:"The proxy performs delegated calls to the contract implementation it is pointing to. This way upgradable contracts are possible on blockchain. * Delegating proxy contracts are widely used for both upgradeability and gas savings. These proxies rely on a logic contract (also known as implementation contract or master copy) that is called using delegatecall. This allows proxies to keep a persistent state (storage and balance) while the code is delegated to the logic contract. * Proxy contract is meant to be inherited and its internal functions _setImplementation and _setProxyOwner to be called when upgrades become neccessary. * The loan token (iToken) contract as well as the protocol contract act as proxies, delegating all calls to underlying contracts. Therefore, if you want to interact with them using web3, you need to use the ABIs from the contracts containing the actual logic or the interface contract.  ABI for LoanToken contracts: LoanTokenLogicStandard  ABI for Protocol contract: ISovryn",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."}}},"contracts/proxy/UpgradableProxy.sol:UpgradableProxy":{source:"contracts/proxy/UpgradableProxy.sol",name:"UpgradableProxy",title:"Upgradable Proxy contract.",notice:"A disadvantage of the immutable ledger is that nobody can change the source code of a smart contract after it’s been deployed. In order to fix bugs or introduce new features, smart contracts need to be upgradable somehow. * Although it is not possible to upgrade the code of an already deployed smart contract, it is possible to set-up a proxy contract architecture that will allow to use new deployed contracts as if the main logic had been upgraded. * A proxy architecture pattern is such that all message calls go through a Proxy contract that will redirect them to the latest deployed contract logic. To upgrade, a new version of the contract is deployed, and the Proxy is updated to reference the new contract address.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."}}},"contracts/rsk/RSKAddrValidator.sol:RSKAddrValidator":{source:"contracts/rsk/RSKAddrValidator.sol",name:"RSKAddrValidator"},"contracts/swaps/ISwapsImpl.sol:ISwapsImpl":{source:"contracts/swaps/ISwapsImpl.sol",name:"ISwapsImpl",methods:{"internalExpectedRate(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"optionalContractAddress",type:"address"}],name:"internalExpectedRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"internalExpectedReturn(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"sovrynSwapContractRegistryAddress",type:"address"}],name:"internalExpectedReturn",outputs:[{internalType:"uint256",name:"expectedReturn",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"internalSwap(address,address,address,address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"address",name:"receiverAddress",type:"address"},{internalType:"address",name:"returnToSenderAddress",type:"address"},{internalType:"uint256",name:"minSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"maxSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"requiredDestTokenAmount",type:"uint256"}],name:"internalSwap",outputs:[{internalType:"uint256",name:"destTokenAmountReceived",type:"uint256"},{internalType:"uint256",name:"sourceTokenAmountUsed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/swaps/SwapsUser.sol:SwapsUser":{source:"contracts/swaps/SwapsUser.sol",name:"SwapsUser",title:"Perform token swaps for loans and trades.",events:{"EarnReward(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EarnReward",type:"event"},"ExternalSwap(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"ExternalSwap",type:"event"},"LoanSwap(bytes32,address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!0,internalType:"address",name:"sourceToken",type:"address"},{indexed:!0,internalType:"address",name:"destToken",type:"address"},{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"uint256",name:"sourceAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"destAmount",type:"uint256"}],name:"LoanSwap",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PayBorrowingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayBorrowingFee",type:"event"},"PayLendingFee(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayLendingFee",type:"event"},"PayTradingFee(address,address,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"payer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"bytes32",name:"loanId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PayTradingFee",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/swaps/connectors/SwapsImplSovrynSwap.sol:SwapsImplSovrynSwap":{source:"contracts/swaps/connectors/SwapsImplSovrynSwap.sol",name:"SwapsImplSovrynSwap",title:"Swaps Implementation Sovryn contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the implementation of swap process and rate calculations for Sovryn network.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getContractHexName(string)":{constant:!0,inputs:[{internalType:"string",name:"source",type:"string"}],name:"getContractHexName",outputs:[{internalType:"bytes32",name:"result",type:"bytes32"}],payable:!1,stateMutability:"pure",type:"function",params:{source:"The name of the contract."},notice:"Get the hex name of a contract."},"getSovrynSwapNetworkContract(address)":{constant:!0,inputs:[{internalType:"address",name:"sovrynSwapRegistryAddress",type:"address"}],name:"getSovrynSwapNetworkContract",outputs:[{internalType:"contract ISovrynSwapNetwork",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{sovrynSwapRegistryAddress:"The address of the registry."},notice:"Look up the Sovryn swap network contract registered at the given address."},"internalExpectedRate(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"sovrynSwapContractRegistryAddress",type:"address"}],name:"internalExpectedRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destTokenAddress:"The address of the destination token contract.",sourceTokenAddress:"The address of the source token contract.",sourceTokenAmount:"The amount of source tokens to get the rate for."},notice:"Get the expected rate for 1 source token when exchanging the  given amount of source tokens."},"internalExpectedReturn(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"sovrynSwapContractRegistryAddress",type:"address"}],name:"internalExpectedReturn",outputs:[{internalType:"uint256",name:"expectedReturn",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destTokenAddress:"The address of the destination token contract.",sourceTokenAddress:"The address of the source token contract.",sourceTokenAmount:"The amount of source tokens to get the return for."},notice:"Get the expected return amount when exchanging the given  amount of source tokens."},"internalSwap(address,address,address,address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"address",name:"receiverAddress",type:"address"},{internalType:"address",name:"returnToSenderAddress",type:"address"},{internalType:"uint256",name:"minSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"maxSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"requiredDestTokenAmount",type:"uint256"}],name:"internalSwap",outputs:[{internalType:"uint256",name:"destTokenAmountReceived",type:"uint256"},{internalType:"uint256",name:"sourceTokenAmountUsed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{destTokenAddress:"The address of the destination tokens.",maxSourceTokenAmount:"The maximum amount of source tokens to swapped.",minSourceTokenAmount:"The minimum amount of source tokens to swapped (only considered if requiredDestTokens == 0).",receiverAddress:"The address to receive the swapped tokens.",requiredDestTokenAmount:"The required amount of destination tokens.",returnToSenderAddress:"The address to return unspent tokens to (when called by the protocol, it's always the protocol contract).",sourceTokenAddress:"The address of the source tokens."},notice:"Swap the source token for the destination token on the oracle based AMM. On loan opening: minSourceTokenAmount = maxSourceTokenAmount and requiredDestTokenAmount = 0     -> swap the minSourceTokenAmount On loan rollover: (swap interest) minSourceTokenAmount = 0, maxSourceTokenAmount = complete collateral and requiredDestTokenAmount > 0     -> amount of required source tokens to swap is estimated (want to fill requiredDestTokenAmount, not more). maxSourceTokenAMount is not exceeded. On loan closure: minSourceTokenAmount <= maxSourceTokenAmount and requiredDestTokenAmount >= 0     -> same as on rollover. minimum amount is not considered at all."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/swaps/connectors/interfaces/IContractRegistry.sol:IContractRegistry":{source:"contracts/swaps/connectors/interfaces/IContractRegistry.sol",name:"IContractRegistry",methods:{"addressOf(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"addressOf",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/swaps/connectors/interfaces/ISovrynSwapNetwork.sol:ISovrynSwapNetwork":{source:"contracts/swaps/connectors/interfaces/ISovrynSwapNetwork.sol",name:"ISovrynSwapNetwork",methods:{"conversionPath(address,address)":{constant:!0,inputs:[{internalType:"contract IERC20",name:"_sourceToken",type:"address"},{internalType:"contract IERC20",name:"_targetToken",type:"address"}],name:"conversionPath",outputs:[{internalType:"contract IERC20[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},"convertByPath(address[],uint256,uint256,address,address,uint256)":{constant:!1,inputs:[{internalType:"contract IERC20[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minReturn",type:"uint256"},{internalType:"address",name:"_beneficiary",type:"address"},{internalType:"address",name:"_affiliateAccount",type:"address"},{internalType:"uint256",name:"_affiliateFee",type:"uint256"}],name:"convertByPath",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},"rateByPath(address[],uint256)":{constant:!0,inputs:[{internalType:"contract IERC20[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"rateByPath",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/swaps/connectors/testnet/SwapsImplLocal.sol:SwapsImplLocal":{source:"contracts/swaps/connectors/testnet/SwapsImplLocal.sol",name:"SwapsImplLocal",title:"Swaps Implementation Local contract.",notice:"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the implementation of swap process and rate calculations.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"affiliateFeePercent()":{constant:!0,inputs:[],name:"affiliateFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerNonce(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowerNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowerOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"borrowerOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeePercent()":{constant:!0,inputs:[],name:"borrowingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrowingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"borrowingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"delegatedManagers(bytes32,address)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"delegatedManagers",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"feeRebatePercent()":{constant:!0,inputs:[],name:"feeRebatePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feesController()":{constant:!0,inputs:[],name:"feesController",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"internalExpectedRate(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"unused",type:"address"}],name:"internalExpectedRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destTokenAddress:"The address of the destiny tokens.",sourceTokenAddress:"The address of the source tokens.",sourceTokenAmount:"The amount of source tokens.",unused:"Fourth parameter ignored."},return:"precision The expected price rate.",notice:"Calculate the expected price rate of swapping a given amount  of tokens."},"internalExpectedReturn(address,address,uint256,address)":{constant:!0,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"uint256",name:"sourceTokenAmount",type:"uint256"},{internalType:"address",name:"unused",type:"address"}],name:"internalExpectedReturn",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{destTokenAddress:"The address of the destiny tokens.",sourceTokenAddress:"The address of the source tokens.",sourceTokenAmount:"The amount of source tokens.",unused:"Fourth parameter ignored."},return:"precision The expected return.",notice:"Calculate the expected return of swapping a given amount  of tokens."},"internalSwap(address,address,address,address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sourceTokenAddress",type:"address"},{internalType:"address",name:"destTokenAddress",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"returnToSenderAddress",type:"address"},{internalType:"uint256",name:"minSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"maxSourceTokenAmount",type:"uint256"},{internalType:"uint256",name:"requiredDestTokenAmount",type:"uint256"}],name:"internalSwap",outputs:[{internalType:"uint256",name:"destTokenAmountReceived",type:"uint256"},{internalType:"uint256",name:"sourceTokenAmountUsed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{destTokenAddress:"The address of the destiny tokens.",sourceTokenAddress:"The address of the source tokens."},return:"destTokenAmountReceived The amount of destiny tokens sent.sourceTokenAmountUsed The amount of source tokens spent.",notice:"Swap two tokens."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lenderInterest(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"lenderInterest",outputs:[{internalType:"uint256",name:"principalTotal",type:"uint256"},{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"owedTotal",type:"uint256"},{internalType:"uint256",name:"paidTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lenderOrders(address,bytes32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"lenderOrders",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"},{internalType:"uint256",name:"minLoanTerm",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"},{internalType:"uint256",name:"createdTimestamp",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeePercent()":{constant:!0,inputs:[],name:"lendingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lendingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lendingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"liquidationIncentivePercent()":{constant:!0,inputs:[],name:"liquidationIncentivePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanInterest(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanInterest",outputs:[{internalType:"uint256",name:"owedPerDay",type:"uint256"},{internalType:"uint256",name:"depositTotal",type:"uint256"},{internalType:"uint256",name:"updatedTimestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParams(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loanParams",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanPoolToUnderlying(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"loanPoolToUnderlying",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"loans(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"loans",outputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"loanParamsId",type:"bytes32"},{internalType:"bytes32",name:"pendingTradesId",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"endTimestamp",type:"uint256"},{internalType:"uint256",name:"startMargin",type:"uint256"},{internalType:"uint256",name:"startRate",type:"uint256"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"lender",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"logicTargets(bytes4)":{constant:!0,inputs:[{internalType:"bytes4",name:"",type:"bytes4"}],name:"logicTargets",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"maxDisagreement()":{constant:!0,inputs:[],name:"maxDisagreement",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"maxSwapSize()":{constant:!0,inputs:[],name:"maxSwapSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenAddress()":{constant:!0,inputs:[],name:"protocolTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenHeld()":{constant:!0,inputs:[],name:"protocolTokenHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"protocolTokenPaid()":{constant:!0,inputs:[],name:"protocolTokenPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverBaseReward()":{constant:!0,inputs:[],name:"rolloverBaseReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rolloverFlexFeePercent()":{constant:!0,inputs:[],name:"rolloverFlexFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sourceBuffer()":{constant:!0,inputs:[],name:"sourceBuffer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"sovrynSwapContractRegistryAddress()":{constant:!0,inputs:[],name:"sovrynSwapContractRegistryAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supportedTokens(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"swapsImpl()":{constant:!0,inputs:[],name:"swapsImpl",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeePercent()":{constant:!0,inputs:[],name:"tradingFeePercent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensHeld(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensHeld",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tradingFeeTokensPaid(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"tradingFeeTokensPaid",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"underlyingToLoanPool(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"wrbtcToken()":{constant:!0,inputs:[],name:"wrbtcToken",outputs:[{internalType:"contract IWrbtcERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/testhelpers/LoanTokenLogicTest.sol:LoanTokenLogicTest":{source:"contracts/testhelpers/LoanTokenLogicTest.sol",name:"LoanTokenLogicTest",fallback:{payable:!1,stateMutability:"nonpayable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Burn",type:"event"},"FlashBorrow(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"borrower",type:"address"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"address",name:"loanToken",type:"address"},{indexed:!1,internalType:"uint256",name:"loanAmount",type:"uint256"}],name:"FlashBorrow",type:"event"},"Mint(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"assetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetEarlyAccessToken(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldValue",type:"address"},{indexed:!1,internalType:"address",name:"newValue",type:"address"}],name:"SetEarlyAccessToken",type:"event"},"SetTransactionLimits(address[],uint256[])":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"addresses",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"SetTransactionLimits",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"VERSION()":{constant:!0,inputs:[],name:"VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"_supplyInterestRate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetBorrow",type:"uint256"},{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"_supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetBorrow:"The amount of loan tokens on debt.",assetSupply:"The amount of loan tokens supplied."},return:"The next supply interest adjustment.",notice:"Compute the next supply interest adjustment."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens.",_spender:"The account allowed to send the iTokens."},return:"The number of iTokens an account is allowing the spender  to send on its behalf.",notice:"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_spender:"The account address that will be able to spend the tokens.",_value:"The amount of tokens allowed to spend."},notice:"Set an amount as the allowance of `spender` over the caller's tokens.\t * Returns a boolean value indicating whether the operation succeeded.\t * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\t * Emits an {Approval} event."},"assetBalanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"assetBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The user's balance of underlying token.",notice:"Get loan token balance."},"avgBorrowInterestRate()":{constant:!0,inputs:[],name:"avgBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The average borrow interest.",notice:"Wrapper for average borrow interest."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_owner:"The account owner of the iTokens."},return:"The number of iTokens an account owns.",notice:"Get the amount of iTokens owned by an account."},"baseRate()":{constant:!0,inputs:[],name:"baseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"withdrawAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"borrower",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bytes",name:"",type:"bytes"}],name:"borrow",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{borrower:"The one paying for the collateral.",collateralTokenAddress:"The address of the token to be used as  collateral. Cannot be the loan token address.",collateralTokenSent:"The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).",initialLoanDuration:"The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.",loanId:"The ID of the loan, 0 for a new loan.",receiver:"The one receiving the withdrawn amount.",withdrawAmount:"The amount to be withdrawn (actually borrowed)."},return:"New principal and new collateral added to loan.",notice:"Borrow funds from the pool. The underlying loan token may not be used as collateral."},"borrowInterestRate()":{constant:!0,inputs:[],name:"borrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The borrow interest rate.",notice:"Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans."},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"burnAmount",type:"uint256"}],name:"burn",outputs:[{internalType:"uint256",name:"loanAmountPaid",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{burnAmount:"The amount of loan tokens to redeem.",receiver:"The account getting the minted tokens."},return:"The amount of underlying tokens payed to lender.",notice:"Burn loan token wrapper. Adds a pay-out transfer after calling low level _burnToken function. In order to withdraw funds to the pool, call burn on the respective loan token contract. This will burn your loan tokens and send you the underlying token in exchange."},"changeLoanTokenNameAndSymbol(string,string)":{constant:!1,inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],name:"changeLoanTokenNameAndSymbol",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_name:"The new name of the loan token.",_symbol:"The new symbol of the loan token."},notice:"Update the loan token parameters."},"checkPause(string)":{constant:!0,inputs:[{internalType:"string",name:"funcId",type:"string"}],name:"checkPause",outputs:[{internalType:"bool",name:"isPaused",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Used to read externally from the smart contract to see if a  function is paused.",params:{funcId:"The function ID, the selector."},return:"isPaused Whether the function is paused: true or false.",notice:"Check whether a function is paused."},"checkpointPrice(address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"}],name:"checkpointPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_user:"The user account as the mapping index."},return:"The price on the checkpoint for this user.",notice:"Getter for the price checkpoint mapping."},"checkpointSupply()":{constant:!0,inputs:[],name:"checkpointSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"disableLoanParams(address[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"collateralTokens",type:"address[]"},{internalType:"bool[]",name:"isTorqueLoans",type:"bool[]"}],name:"disableLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{collateralTokens:"The array of collateral tokens.",isTorqueLoans:"Whether the loan is a torque loan."},notice:"Disable loan token parameters."},"earlyAccessToken()":{constant:!0,inputs:[],name:"earlyAccessToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getBorrowAmountForDeposit(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getBorrowAmountForDeposit",outputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",depositAmount:"The amount of deposit.",initialLoanDuration:"The duration of the loan."},return:"The amount of borrow allowed.",notice:"Calculate the borrow allowed for a given deposit.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getDepositAmountForBorrow(uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"},{internalType:"uint256",name:"initialLoanDuration",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getDepositAmountForBorrow",outputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of borrow.",collateralTokenAddress:"The token address of collateral.",initialLoanDuration:"The duration of the loan."},return:"The amount of deposit required.",notice:"Calculate the deposit required to a given borrow.\t * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."},"getEstimatedMarginDetails(uint256,uint256,uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"}],name:"getEstimatedMarginDetails",outputs:[{internalType:"uint256",name:"principal",type:"uint256"},{internalType:"uint256",name:"collateral",type:"uint256"},{internalType:"uint256",name:"interestRate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanTokenSent:"The number of loan tokens provided by the user."},return:"The principal, the collateral and the interestRate.",notice:"Get margin information on a trade."},"getMarginBorrowAmountAndRate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"getMarginBorrowAmountAndRate",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getMaxEscrowAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"leverageAmount",type:"uint256"}],name:"getMaxEscrowAmount",outputs:[{internalType:"uint256",name:"maxEscrowAmount",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"maxEscrowAmount = liquidity * (100 - interestForDuration) / 100",params:{leverageAmount:"The chosen multiplier with 18 decimals."},notice:"Compute the maximum deposit amount under current market conditions."},"initialPrice()":{constant:!0,inputs:[],name:"initialPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kinkLevel()":{constant:!0,inputs:[],name:"kinkLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"loanParamsIds(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"loanParamsIds",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"loanTokenAddress()":{constant:!0,inputs:[],name:"loanTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilBaseRate()":{constant:!0,inputs:[],name:"lowUtilBaseRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lowUtilRateMultiplier()":{constant:!0,inputs:[],name:"lowUtilRateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"marginTrade(bytes32,uint256,uint256,uint256,address,address,bytes)":{constant:!1,inputs:[{internalType:"bytes32",name:"loanId",type:"bytes32"},{internalType:"uint256",name:"leverageAmount",type:"uint256"},{internalType:"uint256",name:"loanTokenSent",type:"uint256"},{internalType:"uint256",name:"collateralTokenSent",type:"uint256"},{internalType:"address",name:"collateralTokenAddress",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"bytes",name:"loanDataBytes",type:"bytes"}],name:"marginTrade",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",params:{collateralTokenAddress:"The token address of collateral.",collateralTokenSent:"The amount of collateral tokens provided by the user.",leverageAmount:"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",loanId:"The ID of the loan, 0 for a new loan.",loanTokenSent:"The number of loan tokens provided by the user.",trader:"The account that performs this trade."},return:"New principal and new collateral added to trade.",notice:"Borrow and immediately get into a position.\t * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.\t * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.\t * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.\t * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract."},"marketLiquidity()":{constant:!0,inputs:[],name:"marketLiquidity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The market liquidity.",notice:"Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow"},"maxScaleRate()":{constant:!0,inputs:[],name:"maxScaleRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{depositAmount:"The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).",receiver:"The account getting the minted tokens."},return:"The amount of loan tokens minted.",notice:"Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"nextBorrowInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"borrowAmount",type:"uint256"}],name:"nextBorrowInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{borrowAmount:"The amount of tokens to borrow."},return:"The next borrow interest rate.",notice:"Public wrapper for internal call."},"nextSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"supplyAmount",type:"uint256"}],name:"nextSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{supplyAmount:"The amount of tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of tokens to the pool.",notice:"Get interest rate w/ added supply."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pauser()":{constant:!0,inputs:[],name:"pauser",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"profitOf(address)":{constant:!0,inputs:[{internalType:"address",name:"user",type:"address"}],name:"profitOf",outputs:[{internalType:"int256",name:"",type:"int256"}],payable:!1,stateMutability:"view",type:"function",params:{user:"The user address."},return:"The profit of a user.",notice:"Wrapper for internal _profitOf low level function."},"rateMultiplier()":{constant:!0,inputs:[],name:"rateMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"setAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"setAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The address of the account to grant admin permissions."},notice:"Set admin account."},"setDemandCurve(uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_baseRate",type:"uint256"},{internalType:"uint256",name:"_rateMultiplier",type:"uint256"},{internalType:"uint256",name:"_lowUtilBaseRate",type:"uint256"},{internalType:"uint256",name:"_lowUtilRateMultiplier",type:"uint256"},{internalType:"uint256",name:"_targetLevel",type:"uint256"},{internalType:"uint256",name:"_kinkLevel",type:"uint256"},{internalType:"uint256",name:"_maxScaleRate",type:"uint256"}],name:"setDemandCurve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These params should be percentages represented  like so: 5% = 5000000000000000000 /// 18 digits precision. rateMultiplier + baseRate can't exceed 100%\t * To maintain a healthy credit score, it's important to keep your credit utilization rate (CUR) low (_lowUtilBaseRate). In general you don't want your CUR to exceed 30%, but increasingly financial experts are recommending that you don't want to go above 10% if you really want an excellent credit score.\t * Interest rates tend to cluster around the kink level of a kinked interest rate model. More info at https://arxiv.org/pdf/2006.13922.pdf and https://compound.finance/governance/proposals/12",params:{_baseRate:"The interest rate.",_kinkLevel:"The level that interest rates cluster on kinked model.",_lowUtilBaseRate:"The credit utilization rate (CUR) low value.",_lowUtilRateMultiplier:"The precision multiplier for low util base rate.",_maxScaleRate:"The maximum rate of the scale.",_rateMultiplier:"The precision multiplier for base rate.",_targetLevel:"The target level."},notice:"Set loan token parameters about the demand curve."},"setEarlyAccessToken(address)":{constant:!1,inputs:[{internalType:"address",name:"_earlyAccessTokenAddress",type:"address"}],name:"setEarlyAccessToken",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_earlyAccessTokenAddress:"The early access token."},notice:"Set early access token."},"setPauser(address)":{constant:!1,inputs:[{internalType:"address",name:"_pauser",type:"address"}],name:"setPauser",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_pauser:"The address of the account to grant pause permissions."},notice:"Set pauser account."},"setTransactionLimits(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"addresses",type:"address[]"},{internalType:"uint256[]",name:"limits",type:"uint256[]"}],name:"setTransactionLimits",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{addresses:"The token addresses.",limits:"The limit denominated in the currency of the token address."},notice:"Set the transaction limit per token address."},"setupLoanParams((bytes32,bool,address,address,address,uint256,uint256,uint256)[],bool)":{constant:!1,inputs:[{components:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bool",name:"active",type:"bool"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"loanToken",type:"address"},{internalType:"address",name:"collateralToken",type:"address"},{internalType:"uint256",name:"minInitialMargin",type:"uint256"},{internalType:"uint256",name:"maintenanceMargin",type:"uint256"},{internalType:"uint256",name:"maxLoanTerm",type:"uint256"}],internalType:"struct LoanParamsStruct.LoanParams[]",name:"loanParamsList",type:"tuple[]"},{internalType:"bool",name:"areTorqueLoans",type:"bool"}],name:"setupLoanParams",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{areTorqueLoans:"Whether the loan is a torque loan.",loanParamsList:"The array of loan parameters."},notice:"Set loan token parameters."},"sovrynContractAddress()":{constant:!0,inputs:[],name:"sovrynContractAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"supplyInterestRate()":{constant:!0,inputs:[],name:"supplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"Interest that lenders are currently receiving when supplying to the pool.",notice:"Get interest rate."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"targetLevel()":{constant:!0,inputs:[],name:"targetLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"toggleFunctionPause(string,bool)":{constant:!1,inputs:[{internalType:"string",name:"funcId",type:"string"},{internalType:"bool",name:"isPaused",type:"bool"}],name:"toggleFunctionPause",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:'Combining the hash of "iToken_FunctionPause" string and a function  selector gets a slot to write a flag for pause state.',params:{funcId:"The ID of a function, the selector.",isPaused:"true/false value of the flag."},notice:"Set the pause flag for a function to true or false."},"tokenPrice()":{constant:!0,inputs:[],name:"tokenPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The loan token price.",notice:"Loan token price calculation considering unpaid interests."},"totalAssetBorrow()":{constant:!0,inputs:[],name:"totalAssetBorrow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total amount of loan tokens on debt.",notice:"Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000."},"totalAssetSupply()":{constant:!0,inputs:[],name:"totalAssetSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Wrapper for internal _totalAssetSupply function.",return:"The total amount of loan tokens on supply.",notice:"Get the total amount of loan tokens on supply."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The total number of iTokens in existence as of now.",notice:"Get the total supply of iTokens."},"totalSupplyInterestRate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"assetSupply",type:"uint256"}],name:"totalSupplyInterestRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{assetSupply:"The amount of loan tokens supplied."},return:"Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool.",notice:"Get interest rate w/ added supply assets."},"transactionLimit(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"transactionLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_to:"The recipient of the tokens.",_value:"The amount of tokens sent."},return:"Success true/false.",notice:"Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",return:"A boolean value indicating whether the operation succeeded.",notice:"Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"wrbtcTokenAddress()":{constant:!0,inputs:[],name:"wrbtcTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/testhelpers/TestSovrynSwap.sol:TestSovrynSwap":{source:"contracts/testhelpers/TestSovrynSwap.sol",name:"TestSovrynSwap",constructor:{inputs:[{internalType:"address",name:"feed",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},methods:{"addressOf(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"contractName",type:"bytes32"}],name:"addressOf",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",notice:"simulating the contract registry. always returns the address of this contract"},"conversionPath(address,address)":{constant:!0,inputs:[{internalType:"contract IERC20",name:"_sourceToken",type:"address"},{internalType:"contract IERC20",name:"_targetToken",type:"address"}],name:"conversionPath",outputs:[{internalType:"contract IERC20[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",notice:"returns the conversion path -> always a direct path"},"convertByPath(address[],uint256,uint256,address,address,uint256)":{constant:!1,inputs:[{internalType:"contract IERC20[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_minReturn",type:"uint256"},{internalType:"address",name:"_beneficiary",type:"address"},{internalType:"address",name:"_affiliateAccount",type:"address"},{internalType:"uint256",name:"_affiliateFee",type:"uint256"}],name:"convertByPath",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function",notice:"calculates the return tokens when swapping _amount, makes sure the return is bigger than _minReturn, mints and burns the test tokens accordingly."},"priceFeeds()":{constant:!0,inputs:[],name:"priceFeeds",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"rateByPath(address[],uint256)":{constant:!0,inputs:[{internalType:"contract IERC20[]",name:"_path",type:"address[]"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"rateByPath",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",notice:"queries the rate from the Price Feed contract and computes the expected return amount based on the amout of source tokens to be swapped."}}},"contracts/testhelpers/TestToken.sol:TestToken":{source:"contracts/testhelpers/TestToken.sol",name:"TestToken",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint8",name:"_decimals",type:"uint8"},{internalType:"uint256",name:"_initialAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"burner",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Burn",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Mint",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_who",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/testhelpers/TestWrbtc.sol:TestWrbtc":{source:"contracts/testhelpers/TestWrbtc.sol",name:"TestWrbtc",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!0,internalType:"address",name:"guy",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Approval",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"dst",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Deposit",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!0,internalType:"address",name:"dst",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawal(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Withdrawal",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"guy",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_who",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"added for local swap implementation"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"added for local swap implementation"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/testhelpers/WRBTC.sol:WRBTC":{source:"contracts/testhelpers/WRBTC.sol",name:"WRBTC",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!0,internalType:"address",name:"guy",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Approval",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"dst",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Deposit",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!0,internalType:"address",name:"dst",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawal(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"src",type:"address"},{indexed:!1,internalType:"uint256",name:"wad",type:"uint256"}],name:"Withdrawal",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"guy",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/token/IApproveAndCall.sol:IApproveAndCall":{source:"contracts/token/IApproveAndCall.sol",name:"IApproveAndCall",title:"Interface for contract governance/ApprovalReceiver.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount was approved.",_data:"The data will be used for low level call.",_sender:"The sender of SOV.approveAndCall function.",_token:"The address of token."},notice:"Receives approval from SOV token."}}},"contracts/token/SOV.sol:SOV":{source:"contracts/token/SOV.sol",name:"SOV",title:"Sovryn Token: SOV is an ERC-20 token contract for Sovryn governance.",details:"This contract represents a token with dynamic supply.  The owner of the token contract can mint/burn tokens to/from any account  based upon previous governance voting and approval.",notice:"This contract accounts for all holders' balances.",constructor:{inputs:[{internalType:"uint256",name:"_initialAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.\t * Requirements:\t * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).\t * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.\t * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.\t * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\t * Emits an {Approval} event indicating the updated allowance.\t * Requirements:\t * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Don't create more than 2^96/10 tokens before updating the governance first.",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.\t * Requirements:\t * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.\t * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};\t * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}}},gt=new Ge({routes:[{path:"/",component:wt,props:()=>({json:vt})},{path:"*",component:mt,props:e=>({json:vt[e.path.slice(1)]})}]});new a.a({el:"#app",router:gt,mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Ke)})},function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},s=0;s<t.length;s++){var i=t[s],r=i[0],o={id:e+":"+s,css:i[1],media:i[2],sourceMap:i[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.r(t),n.d(t,"default",(function(){return c}));var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},r=s&&(document.head||document.getElementsByTagName("head")[0]),o=null,p=0,d=!1,u=function(){},l=null,y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function c(e,t,n,s){d=n,l=s||{};var r=a(e,t);return m(r),function(t){for(var n=[],s=0;s<r.length;s++){var o=r[s];(p=i[o.id]).refs--,n.push(p)}t?m(r=a(e,t)):r=[];for(s=0;s<n.length;s++){var p;if(0===(p=n[s]).refs){for(var d=0;d<p.parts.length;d++)p.parts[d]();delete i[p.id]}}}}function m(e){for(var t=0;t<e.length;t++){var n=e[t],a=i[n.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](n.parts[s]);for(;s<n.parts.length;s++)a.parts.push(b(n.parts[s]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(s=0;s<n.parts.length;s++)r.push(b(n.parts[s]));i[n.id]={id:n.id,refs:1,parts:r}}}}function T(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function b(e){var t,n,a=document.querySelector('style[data-vue-ssr-id~="'+e.id+'"]');if(a){if(d)return u;a.parentNode.removeChild(a)}if(y){var s=p++;a=o||(o=T()),t=w.bind(null,a,s,!1),n=w.bind(null,a,s,!0)}else a=T(),t=v.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var f,h=(f=[],function(e,t){return f[e]=t,f.filter(Boolean).join("\n")});function w(e,t,n,a){var s=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=h(t,s);else{var i=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}function v(e,t){var n=t.css,a=t.media,s=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute("data-vue-ssr-id",t.id),s&&(n+="\n/*# sourceURL="+s.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}]);